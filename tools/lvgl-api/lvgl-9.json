{
    "enums": [
        {
            "name": "lv_result_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_RESULT_INVALID",
                    "type": {
                        "name": "lv_result_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_RESULT_OK",
                    "type": {
                        "name": "lv_result_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_enable_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_ANIM_OFF",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_ANIM_ON",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_rb_color_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_RB_COLOR_RED",
                    "type": {
                        "name": "lv_rb_color_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_RB_COLOR_BLACK",
                    "type": {
                        "name": "lv_rb_color_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_align_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_ALIGN_DEFAULT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_ALIGN_TOP_LEFT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_ALIGN_TOP_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_ALIGN_TOP_RIGHT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03"
                },
                {
                    "name": "LV_ALIGN_BOTTOM_LEFT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04"
                },
                {
                    "name": "LV_ALIGN_BOTTOM_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05"
                },
                {
                    "name": "LV_ALIGN_BOTTOM_RIGHT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06"
                },
                {
                    "name": "LV_ALIGN_LEFT_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07"
                },
                {
                    "name": "LV_ALIGN_RIGHT_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08"
                },
                {
                    "name": "LV_ALIGN_CENTER",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x09"
                },
                {
                    "name": "LV_ALIGN_OUT_TOP_LEFT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0A"
                },
                {
                    "name": "LV_ALIGN_OUT_TOP_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0B"
                },
                {
                    "name": "LV_ALIGN_OUT_TOP_RIGHT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0C"
                },
                {
                    "name": "LV_ALIGN_OUT_BOTTOM_LEFT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0D"
                },
                {
                    "name": "LV_ALIGN_OUT_BOTTOM_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0E"
                },
                {
                    "name": "LV_ALIGN_OUT_BOTTOM_RIGHT",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0F"
                },
                {
                    "name": "LV_ALIGN_OUT_LEFT_TOP",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x10"
                },
                {
                    "name": "LV_ALIGN_OUT_LEFT_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x11"
                },
                {
                    "name": "LV_ALIGN_OUT_LEFT_BOTTOM",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x12"
                },
                {
                    "name": "LV_ALIGN_OUT_RIGHT_TOP",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x13"
                },
                {
                    "name": "LV_ALIGN_OUT_RIGHT_MID",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x14"
                },
                {
                    "name": "LV_ALIGN_OUT_RIGHT_BOTTOM",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x15"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_dir_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DIR_NONE",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_DIR_LEFT",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_DIR_RIGHT",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_DIR_TOP",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04"
                },
                {
                    "name": "LV_DIR_BOTTOM",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08"
                },
                {
                    "name": "LV_DIR_HOR",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03"
                },
                {
                    "name": "LV_DIR_VER",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0C"
                },
                {
                    "name": "LV_DIR_ALL",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0F"
                }
            ],
            "quals": []
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OPA_TRANSP",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x000"
                },
                {
                    "name": "LV_OPA_0",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x000"
                },
                {
                    "name": "LV_OPA_10",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x019"
                },
                {
                    "name": "LV_OPA_20",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x033"
                },
                {
                    "name": "LV_OPA_30",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04C"
                },
                {
                    "name": "LV_OPA_40",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x066"
                },
                {
                    "name": "LV_OPA_50",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07F"
                },
                {
                    "name": "LV_OPA_60",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x099"
                },
                {
                    "name": "LV_OPA_70",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0B2"
                },
                {
                    "name": "LV_OPA_80",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0CC"
                },
                {
                    "name": "LV_OPA_90",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0E5"
                },
                {
                    "name": "LV_OPA_100",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0FF"
                },
                {
                    "name": "LV_OPA_COVER",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0FF"
                }
            ]
        },
        {
            "name": "lv_color_format_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_COLOR_FORMAT_UNKNOWN",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_COLOR_FORMAT_RAW",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_COLOR_FORMAT_RAW_ALPHA",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_COLOR_FORMAT_L8",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06"
                },
                {
                    "name": "LV_COLOR_FORMAT_I1",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07"
                },
                {
                    "name": "LV_COLOR_FORMAT_I2",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08"
                },
                {
                    "name": "LV_COLOR_FORMAT_I4",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x09"
                },
                {
                    "name": "LV_COLOR_FORMAT_I8",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0A"
                },
                {
                    "name": "LV_COLOR_FORMAT_A8",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0E"
                },
                {
                    "name": "LV_COLOR_FORMAT_RGB565",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x12"
                },
                {
                    "name": "LV_COLOR_FORMAT_ARGB8565",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Not supported by sw renderer yet. ",
                    "value": "0x13"
                },
                {
                    "name": "LV_COLOR_FORMAT_RGB565A8",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Color array followed by Alpha array ",
                    "value": "0x14"
                },
                {
                    "name": "LV_COLOR_FORMAT_AL88",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "L8 with alpha > ",
                    "value": "0x15"
                },
                {
                    "name": "LV_COLOR_FORMAT_RGB888",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0F"
                },
                {
                    "name": "LV_COLOR_FORMAT_ARGB8888",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x10"
                },
                {
                    "name": "LV_COLOR_FORMAT_XRGB8888",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x11"
                },
                {
                    "name": "LV_COLOR_FORMAT_A1",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0B"
                },
                {
                    "name": "LV_COLOR_FORMAT_A2",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0C"
                },
                {
                    "name": "LV_COLOR_FORMAT_A4",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0D"
                },
                {
                    "name": "LV_COLOR_FORMAT_YUV_START",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x20"
                },
                {
                    "name": "LV_COLOR_FORMAT_I420",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x20"
                },
                {
                    "name": "LV_COLOR_FORMAT_I422",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x21"
                },
                {
                    "name": "LV_COLOR_FORMAT_I444",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x22"
                },
                {
                    "name": "LV_COLOR_FORMAT_I400",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x23"
                },
                {
                    "name": "LV_COLOR_FORMAT_NV21",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x24"
                },
                {
                    "name": "LV_COLOR_FORMAT_NV12",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x25"
                },
                {
                    "name": "LV_COLOR_FORMAT_YUY2",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x26"
                },
                {
                    "name": "LV_COLOR_FORMAT_UYVY",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x27"
                },
                {
                    "name": "LV_COLOR_FORMAT_YUV_END",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x27"
                },
                {
                    "name": "LV_COLOR_FORMAT_NATIVE",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x11"
                },
                {
                    "name": "LV_COLOR_FORMAT_NATIVE_WITH_ALPHA",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x10"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_palette_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_PALETTE_RED",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x000"
                },
                {
                    "name": "LV_PALETTE_PINK",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x001"
                },
                {
                    "name": "LV_PALETTE_PURPLE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x002"
                },
                {
                    "name": "LV_PALETTE_DEEP_PURPLE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x003"
                },
                {
                    "name": "LV_PALETTE_INDIGO",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x004"
                },
                {
                    "name": "LV_PALETTE_BLUE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x005"
                },
                {
                    "name": "LV_PALETTE_LIGHT_BLUE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x006"
                },
                {
                    "name": "LV_PALETTE_CYAN",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x007"
                },
                {
                    "name": "LV_PALETTE_TEAL",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x008"
                },
                {
                    "name": "LV_PALETTE_GREEN",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x009"
                },
                {
                    "name": "LV_PALETTE_LIGHT_GREEN",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00A"
                },
                {
                    "name": "LV_PALETTE_LIME",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00B"
                },
                {
                    "name": "LV_PALETTE_YELLOW",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00C"
                },
                {
                    "name": "LV_PALETTE_AMBER",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00D"
                },
                {
                    "name": "LV_PALETTE_ORANGE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00E"
                },
                {
                    "name": "LV_PALETTE_DEEP_ORANGE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00F"
                },
                {
                    "name": "LV_PALETTE_BROWN",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x010"
                },
                {
                    "name": "LV_PALETTE_BLUE_GREY",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x011"
                },
                {
                    "name": "LV_PALETTE_GREY",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x012"
                },
                {
                    "name": "LV_PALETTE_LAST",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x013"
                },
                {
                    "name": "LV_PALETTE_NONE",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0FF"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_compress_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_IMAGE_COMPRESS_NONE",
                    "type": {
                        "name": "lv_image_compress_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_IMAGE_COMPRESS_RLE",
                    "type": {
                        "name": "lv_image_compress_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "LVGL custom RLE compression ",
                    "value": "0x1"
                },
                {
                    "name": "LV_IMAGE_COMPRESS_LZ4",
                    "type": {
                        "name": "lv_image_compress_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_STR_SYMBOL_BULLET",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_STR_SYMBOL_AUDIO",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_STR_SYMBOL_VIDEO",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_STR_SYMBOL_LIST",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03"
                },
                {
                    "name": "LV_STR_SYMBOL_OK",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04"
                },
                {
                    "name": "LV_STR_SYMBOL_CLOSE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05"
                },
                {
                    "name": "LV_STR_SYMBOL_POWER",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06"
                },
                {
                    "name": "LV_STR_SYMBOL_SETTINGS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07"
                },
                {
                    "name": "LV_STR_SYMBOL_HOME",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08"
                },
                {
                    "name": "LV_STR_SYMBOL_DOWNLOAD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x09"
                },
                {
                    "name": "LV_STR_SYMBOL_DRIVE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0A"
                },
                {
                    "name": "LV_STR_SYMBOL_REFRESH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0B"
                },
                {
                    "name": "LV_STR_SYMBOL_MUTE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0C"
                },
                {
                    "name": "LV_STR_SYMBOL_VOLUME_MID",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0D"
                },
                {
                    "name": "LV_STR_SYMBOL_VOLUME_MAX",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0E"
                },
                {
                    "name": "LV_STR_SYMBOL_IMAGE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0F"
                },
                {
                    "name": "LV_STR_SYMBOL_TINT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x10"
                },
                {
                    "name": "LV_STR_SYMBOL_PREV",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x11"
                },
                {
                    "name": "LV_STR_SYMBOL_PLAY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x12"
                },
                {
                    "name": "LV_STR_SYMBOL_PAUSE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x13"
                },
                {
                    "name": "LV_STR_SYMBOL_STOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x14"
                },
                {
                    "name": "LV_STR_SYMBOL_NEXT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x15"
                },
                {
                    "name": "LV_STR_SYMBOL_EJECT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x16"
                },
                {
                    "name": "LV_STR_SYMBOL_LEFT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x17"
                },
                {
                    "name": "LV_STR_SYMBOL_RIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x18"
                },
                {
                    "name": "LV_STR_SYMBOL_PLUS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x19"
                },
                {
                    "name": "LV_STR_SYMBOL_MINUS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1A"
                },
                {
                    "name": "LV_STR_SYMBOL_EYE_OPEN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1B"
                },
                {
                    "name": "LV_STR_SYMBOL_EYE_CLOSE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1C"
                },
                {
                    "name": "LV_STR_SYMBOL_WARNING",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1D"
                },
                {
                    "name": "LV_STR_SYMBOL_SHUFFLE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1E"
                },
                {
                    "name": "LV_STR_SYMBOL_UP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1F"
                },
                {
                    "name": "LV_STR_SYMBOL_DOWN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x20"
                },
                {
                    "name": "LV_STR_SYMBOL_LOOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x21"
                },
                {
                    "name": "LV_STR_SYMBOL_DIRECTORY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x22"
                },
                {
                    "name": "LV_STR_SYMBOL_UPLOAD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x23"
                },
                {
                    "name": "LV_STR_SYMBOL_CALL",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x24"
                },
                {
                    "name": "LV_STR_SYMBOL_CUT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x25"
                },
                {
                    "name": "LV_STR_SYMBOL_COPY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x26"
                },
                {
                    "name": "LV_STR_SYMBOL_SAVE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x27"
                },
                {
                    "name": "LV_STR_SYMBOL_BARS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x28"
                },
                {
                    "name": "LV_STR_SYMBOL_ENVELOPE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x29"
                },
                {
                    "name": "LV_STR_SYMBOL_CHARGE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2A"
                },
                {
                    "name": "LV_STR_SYMBOL_PASTE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2B"
                },
                {
                    "name": "LV_STR_SYMBOL_BELL",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2C"
                },
                {
                    "name": "LV_STR_SYMBOL_KEYBOARD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2D"
                },
                {
                    "name": "LV_STR_SYMBOL_GPS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2E"
                },
                {
                    "name": "LV_STR_SYMBOL_FILE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2F"
                },
                {
                    "name": "LV_STR_SYMBOL_WIFI",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x30"
                },
                {
                    "name": "LV_STR_SYMBOL_BATTERY_FULL",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x31"
                },
                {
                    "name": "LV_STR_SYMBOL_BATTERY_3",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x32"
                },
                {
                    "name": "LV_STR_SYMBOL_BATTERY_2",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x33"
                },
                {
                    "name": "LV_STR_SYMBOL_BATTERY_1",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x34"
                },
                {
                    "name": "LV_STR_SYMBOL_BATTERY_EMPTY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x35"
                },
                {
                    "name": "LV_STR_SYMBOL_USB",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x36"
                },
                {
                    "name": "LV_STR_SYMBOL_BLUETOOTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x37"
                },
                {
                    "name": "LV_STR_SYMBOL_TRASH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x38"
                },
                {
                    "name": "LV_STR_SYMBOL_EDIT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x39"
                },
                {
                    "name": "LV_STR_SYMBOL_BACKSPACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3A"
                },
                {
                    "name": "LV_STR_SYMBOL_SD_CARD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3B"
                },
                {
                    "name": "LV_STR_SYMBOL_NEW_LINE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3C"
                },
                {
                    "name": "LV_STR_SYMBOL_DUMMY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3D"
                }
            ]
        },
        {
            "name": "lv_thread_prio_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_THREAD_PRIO_LOWEST",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_THREAD_PRIO_LOW",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_THREAD_PRIO_MID",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_THREAD_PRIO_HIGH",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_THREAD_PRIO_HIGHEST",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_reserve_cond_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_CACHE_RESERVE_COND_OK",
                    "type": {
                        "name": "lv_cache_reserve_cond_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The condition is met and no entries need to be evicted ",
                    "value": "0x0"
                },
                {
                    "name": "LV_CACHE_RESERVE_COND_TOO_LARGE",
                    "type": {
                        "name": "lv_cache_reserve_cond_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The condition is not met and the reserve size is too large ",
                    "value": "0x1"
                },
                {
                    "name": "LV_CACHE_RESERVE_COND_NEED_VICTIM",
                    "type": {
                        "name": "lv_cache_reserve_cond_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The condition is not met and a victim is needed to be evicted ",
                    "value": "0x2"
                },
                {
                    "name": "LV_CACHE_RESERVE_COND_ERROR",
                    "type": {
                        "name": "lv_cache_reserve_cond_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "An error occurred while checking the condition ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_glyph_format_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FONT_GLYPH_FORMAT_NONE",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Maybe not visible Legacy simple formats ",
                    "value": "0x000"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_A1",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "1 bit per pixel ",
                    "value": "0x001"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_A2",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "2 bit per pixel ",
                    "value": "0x002"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_A4",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "4 bit per pixel ",
                    "value": "0x004"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_A8",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "8 bit per pixel ",
                    "value": "0x008"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_IMAGE",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Image format Advanced formats ",
                    "value": "0x009"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_VECTOR",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Vectorial format ",
                    "value": "0x00A"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_SVG",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "SVG format ",
                    "value": "0x00B"
                },
                {
                    "name": "LV_FONT_GLYPH_FORMAT_CUSTOM",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom format ",
                    "value": "0x0FF"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_subpx_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FONT_SUBPX_NONE",
                    "type": {
                        "name": "lv_font_subpx_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FONT_SUBPX_HOR",
                    "type": {
                        "name": "lv_font_subpx_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FONT_SUBPX_VER",
                    "type": {
                        "name": "lv_font_subpx_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_FONT_SUBPX_BOTH",
                    "type": {
                        "name": "lv_font_subpx_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_kerning_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FONT_KERNING_NORMAL",
                    "type": {
                        "name": "lv_font_kerning_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FONT_KERNING_NONE",
                    "type": {
                        "name": "lv_font_kerning_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_text_flag_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_TEXT_FLAG_NONE",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_TEXT_FLAG_EXPAND",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Ignore max-width to avoid automatic word wrapping ",
                    "value": "0x1"
                },
                {
                    "name": "LV_TEXT_FLAG_FIT",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Max-width is already equal to the longest line. (Used to skip some calculation) ",
                    "value": "0x2"
                },
                {
                    "name": "LV_TEXT_FLAG_BREAK_ALL",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "To prevent overflow, insert breaks between any two characters. Otherwise breaks are inserted at word boundaries, as configured via LV_TXT_BREAK_CHARS or according to LV_TXT_LINE_BREAK_LONG_LEN, LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN, and LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN. ",
                    "value": "0x4"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_text_align_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_TEXT_ALIGN_AUTO",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align text auto ",
                    "value": "0x0"
                },
                {
                    "name": "LV_TEXT_ALIGN_LEFT",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align text to left ",
                    "value": "0x1"
                },
                {
                    "name": "LV_TEXT_ALIGN_CENTER",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align text to center ",
                    "value": "0x2"
                },
                {
                    "name": "LV_TEXT_ALIGN_RIGHT",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align text to right ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_base_dir_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BASE_DIR_LTR",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_BASE_DIR_RTL",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_BASE_DIR_AUTO",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_BASE_DIR_NEUTRAL",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x20"
                },
                {
                    "name": "LV_BASE_DIR_WEAK",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x21"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_layout_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_LAYOUT_NONE",
                    "type": {
                        "name": "lv_layout_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_LAYOUT_FLEX",
                    "type": {
                        "name": "lv_layout_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_LAYOUT_GRID",
                    "type": {
                        "name": "lv_layout_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_LAYOUT_LAST",
                    "type": {
                        "name": "lv_layout_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_flex_align_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FLEX_ALIGN_START",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FLEX_ALIGN_END",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FLEX_ALIGN_CENTER",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_FLEX_ALIGN_SPACE_EVENLY",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_FLEX_ALIGN_SPACE_AROUND",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_FLEX_ALIGN_SPACE_BETWEEN",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_flex_flow_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FLEX_FLOW_ROW",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FLEX_FLOW_COLUMN",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FLEX_FLOW_ROW_WRAP",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_FLEX_FLOW_ROW_REVERSE",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_FLEX_FLOW_ROW_WRAP_REVERSE",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xC"
                },
                {
                    "name": "LV_FLEX_FLOW_COLUMN_WRAP",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_FLEX_FLOW_COLUMN_REVERSE",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_FLEX_FLOW_COLUMN_WRAP_REVERSE",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xD"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_grid_align_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_GRID_ALIGN_START",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_GRID_ALIGN_CENTER",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_GRID_ALIGN_END",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_GRID_ALIGN_STRETCH",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_GRID_ALIGN_SPACE_EVENLY",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_GRID_ALIGN_SPACE_AROUND",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_GRID_ALIGN_SPACE_BETWEEN",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_blend_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BLEND_MODE_NORMAL",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Simply mix according to the opacity value ",
                    "value": "0x0"
                },
                {
                    "name": "LV_BLEND_MODE_ADDITIVE",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Add the respective color channels ",
                    "value": "0x1"
                },
                {
                    "name": "LV_BLEND_MODE_SUBTRACTIVE",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Subtract the foreground from the background ",
                    "value": "0x2"
                },
                {
                    "name": "LV_BLEND_MODE_MULTIPLY",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Multiply the foreground and background ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_text_decor_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_TEXT_DECOR_NONE",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_TEXT_DECOR_UNDERLINE",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_TEXT_DECOR_STRIKETHROUGH",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_border_side_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BORDER_SIDE_NONE",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00"
                },
                {
                    "name": "LV_BORDER_SIDE_BOTTOM",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_BORDER_SIDE_TOP",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_BORDER_SIDE_LEFT",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04"
                },
                {
                    "name": "LV_BORDER_SIDE_RIGHT",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08"
                },
                {
                    "name": "LV_BORDER_SIDE_FULL",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0F"
                },
                {
                    "name": "LV_BORDER_SIDE_INTERNAL",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "FOR matrix-like objects (e.g. Button matrix) ",
                    "value": "0x10"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_grad_dir_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_GRAD_DIR_NONE",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "No gradient (the grad_color property is ignored) ",
                    "value": "0x0"
                },
                {
                    "name": "LV_GRAD_DIR_VER",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Simple vertical (top to bottom) gradient ",
                    "value": "0x1"
                },
                {
                    "name": "LV_GRAD_DIR_HOR",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Simple horizontal (left to right) gradient ",
                    "value": "0x2"
                },
                {
                    "name": "LV_GRAD_DIR_LINEAR",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Linear gradient defined by start and end points. Can be at any angle. ",
                    "value": "0x3"
                },
                {
                    "name": "LV_GRAD_DIR_RADIAL",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Radial gradient defined by start and end circles ",
                    "value": "0x4"
                },
                {
                    "name": "LV_GRAD_DIR_CONICAL",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Conical gradient defined by center point, start and end angles ",
                    "value": "0x5"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_grad_extend_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_GRAD_EXTEND_PAD",
                    "type": {
                        "name": "lv_grad_extend_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Repeat the same color ",
                    "value": "0x0"
                },
                {
                    "name": "LV_GRAD_EXTEND_REPEAT",
                    "type": {
                        "name": "lv_grad_extend_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Repeat the pattern ",
                    "value": "0x1"
                },
                {
                    "name": "LV_GRAD_EXTEND_REFLECT",
                    "type": {
                        "name": "lv_grad_extend_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Repeat the pattern mirrored ",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_STYLE_PROP_INV",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x000"
                },
                {
                    "name": "LV_STYLE_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x001"
                },
                {
                    "name": "LV_STYLE_HEIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x002"
                },
                {
                    "name": "LV_STYLE_LENGTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x003"
                },
                {
                    "name": "LV_STYLE_MIN_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x004"
                },
                {
                    "name": "LV_STYLE_MAX_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x005"
                },
                {
                    "name": "LV_STYLE_MIN_HEIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x006"
                },
                {
                    "name": "LV_STYLE_MAX_HEIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x007"
                },
                {
                    "name": "LV_STYLE_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x008"
                },
                {
                    "name": "LV_STYLE_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x009"
                },
                {
                    "name": "LV_STYLE_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00A"
                },
                {
                    "name": "LV_STYLE_RADIUS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00C"
                },
                {
                    "name": "LV_STYLE_PAD_TOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x010"
                },
                {
                    "name": "LV_STYLE_PAD_BOTTOM",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x011"
                },
                {
                    "name": "LV_STYLE_PAD_LEFT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x012"
                },
                {
                    "name": "LV_STYLE_PAD_RIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x013"
                },
                {
                    "name": "LV_STYLE_PAD_ROW",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x014"
                },
                {
                    "name": "LV_STYLE_PAD_COLUMN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x015"
                },
                {
                    "name": "LV_STYLE_LAYOUT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x016"
                },
                {
                    "name": "LV_STYLE_MARGIN_TOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x018"
                },
                {
                    "name": "LV_STYLE_MARGIN_BOTTOM",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x019"
                },
                {
                    "name": "LV_STYLE_MARGIN_LEFT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01A"
                },
                {
                    "name": "LV_STYLE_MARGIN_RIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01B"
                },
                {
                    "name": "LV_STYLE_BG_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01C"
                },
                {
                    "name": "LV_STYLE_BG_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01D"
                },
                {
                    "name": "LV_STYLE_BG_GRAD_DIR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x020"
                },
                {
                    "name": "LV_STYLE_BG_MAIN_STOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x021"
                },
                {
                    "name": "LV_STYLE_BG_GRAD_STOP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x022"
                },
                {
                    "name": "LV_STYLE_BG_GRAD_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x023"
                },
                {
                    "name": "LV_STYLE_BG_MAIN_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x024"
                },
                {
                    "name": "LV_STYLE_BG_GRAD_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x025"
                },
                {
                    "name": "LV_STYLE_BG_GRAD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x026"
                },
                {
                    "name": "LV_STYLE_BASE_DIR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x027"
                },
                {
                    "name": "LV_STYLE_BG_IMAGE_SRC",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x028"
                },
                {
                    "name": "LV_STYLE_BG_IMAGE_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x029"
                },
                {
                    "name": "LV_STYLE_BG_IMAGE_RECOLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02A"
                },
                {
                    "name": "LV_STYLE_BG_IMAGE_RECOLOR_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02B"
                },
                {
                    "name": "LV_STYLE_BG_IMAGE_TILED",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02C"
                },
                {
                    "name": "LV_STYLE_CLIP_CORNER",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02D"
                },
                {
                    "name": "LV_STYLE_BORDER_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x030"
                },
                {
                    "name": "LV_STYLE_BORDER_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x031"
                },
                {
                    "name": "LV_STYLE_BORDER_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x032"
                },
                {
                    "name": "LV_STYLE_BORDER_SIDE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x034"
                },
                {
                    "name": "LV_STYLE_BORDER_POST",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x035"
                },
                {
                    "name": "LV_STYLE_OUTLINE_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x038"
                },
                {
                    "name": "LV_STYLE_OUTLINE_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x039"
                },
                {
                    "name": "LV_STYLE_OUTLINE_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03A"
                },
                {
                    "name": "LV_STYLE_OUTLINE_PAD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03B"
                },
                {
                    "name": "LV_STYLE_SHADOW_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03C"
                },
                {
                    "name": "LV_STYLE_SHADOW_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03D"
                },
                {
                    "name": "LV_STYLE_SHADOW_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x03E"
                },
                {
                    "name": "LV_STYLE_SHADOW_OFFSET_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x040"
                },
                {
                    "name": "LV_STYLE_SHADOW_OFFSET_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x041"
                },
                {
                    "name": "LV_STYLE_SHADOW_SPREAD",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x042"
                },
                {
                    "name": "LV_STYLE_IMAGE_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x044"
                },
                {
                    "name": "LV_STYLE_IMAGE_RECOLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x045"
                },
                {
                    "name": "LV_STYLE_IMAGE_RECOLOR_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x046"
                },
                {
                    "name": "LV_STYLE_LINE_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x048"
                },
                {
                    "name": "LV_STYLE_LINE_DASH_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x049"
                },
                {
                    "name": "LV_STYLE_LINE_DASH_GAP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04A"
                },
                {
                    "name": "LV_STYLE_LINE_ROUNDED",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04B"
                },
                {
                    "name": "LV_STYLE_LINE_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04C"
                },
                {
                    "name": "LV_STYLE_LINE_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04D"
                },
                {
                    "name": "LV_STYLE_ARC_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x050"
                },
                {
                    "name": "LV_STYLE_ARC_ROUNDED",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x051"
                },
                {
                    "name": "LV_STYLE_ARC_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x052"
                },
                {
                    "name": "LV_STYLE_ARC_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x053"
                },
                {
                    "name": "LV_STYLE_ARC_IMAGE_SRC",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x054"
                },
                {
                    "name": "LV_STYLE_TEXT_COLOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x058"
                },
                {
                    "name": "LV_STYLE_TEXT_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x059"
                },
                {
                    "name": "LV_STYLE_TEXT_FONT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05A"
                },
                {
                    "name": "LV_STYLE_TEXT_LETTER_SPACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05B"
                },
                {
                    "name": "LV_STYLE_TEXT_LINE_SPACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05C"
                },
                {
                    "name": "LV_STYLE_TEXT_DECOR",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05D"
                },
                {
                    "name": "LV_STYLE_TEXT_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05E"
                },
                {
                    "name": "LV_STYLE_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x05F"
                },
                {
                    "name": "LV_STYLE_OPA_LAYERED",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x060"
                },
                {
                    "name": "LV_STYLE_COLOR_FILTER_DSC",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x061"
                },
                {
                    "name": "LV_STYLE_COLOR_FILTER_OPA",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x062"
                },
                {
                    "name": "LV_STYLE_ANIM",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x063"
                },
                {
                    "name": "LV_STYLE_ANIM_DURATION",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x064"
                },
                {
                    "name": "LV_STYLE_TRANSITION",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x066"
                },
                {
                    "name": "LV_STYLE_BLEND_MODE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x067"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_WIDTH",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x068"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_HEIGHT",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x069"
                },
                {
                    "name": "LV_STYLE_TRANSLATE_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06A"
                },
                {
                    "name": "LV_STYLE_TRANSLATE_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06B"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_SCALE_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06C"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_SCALE_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06D"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_ROTATION",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06E"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_PIVOT_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x06F"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_PIVOT_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x070"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_SKEW_X",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x071"
                },
                {
                    "name": "LV_STYLE_TRANSFORM_SKEW_Y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x072"
                },
                {
                    "name": "LV_STYLE_BITMAP_MASK_SRC",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x073"
                },
                {
                    "name": "LV_STYLE_ROTARY_SENSITIVITY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x074"
                },
                {
                    "name": "LV_STYLE_FLEX_FLOW",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07D"
                },
                {
                    "name": "LV_STYLE_FLEX_MAIN_PLACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07E"
                },
                {
                    "name": "LV_STYLE_FLEX_CROSS_PLACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x07F"
                },
                {
                    "name": "LV_STYLE_FLEX_TRACK_PLACE",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x080"
                },
                {
                    "name": "LV_STYLE_FLEX_GROW",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x081"
                },
                {
                    "name": "LV_STYLE_GRID_COLUMN_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x082"
                },
                {
                    "name": "LV_STYLE_GRID_ROW_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x083"
                },
                {
                    "name": "LV_STYLE_GRID_ROW_DSC_ARRAY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x084"
                },
                {
                    "name": "LV_STYLE_GRID_COLUMN_DSC_ARRAY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x085"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_COLUMN_POS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x086"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_COLUMN_SPAN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x087"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_X_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x088"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_ROW_POS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x089"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_ROW_SPAN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08A"
                },
                {
                    "name": "LV_STYLE_GRID_CELL_Y_ALIGN",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08B"
                },
                {
                    "name": "LV_STYLE_LAST_BUILT_IN_PROP",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08C"
                },
                {
                    "name": "LV_STYLE_NUM_BUILT_IN_PROPS",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08D"
                },
                {
                    "name": "LV_STYLE_PROP_ANY",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0FF"
                },
                {
                    "name": "LV_STYLE_PROP_CONST",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0FF"
                }
            ]
        },
        {
            "name": "lv_style_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_STYLE_RES_NOT_FOUND",
                    "type": {
                        "name": "lv_style_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_STYLE_RES_FOUND",
                    "type": {
                        "name": "lv_style_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_event_code_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_EVENT_ALL",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00000"
                },
                {
                    "name": "LV_EVENT_PRESSED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Input device events The object has been pressed ",
                    "value": "0x00001"
                },
                {
                    "name": "LV_EVENT_PRESSING",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object is being pressed (called continuously while pressing) ",
                    "value": "0x00002"
                },
                {
                    "name": "LV_EVENT_PRESS_LOST",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object is still being pressed but slid cursor/finger off of the object ",
                    "value": "0x00003"
                },
                {
                    "name": "LV_EVENT_SHORT_CLICKED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object was pressed for a short period of time, then released it. Not called if scrolled. ",
                    "value": "0x00004"
                },
                {
                    "name": "LV_EVENT_SINGLE_CLICKED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called for the first short click within a small distance and short time ",
                    "value": "0x00005"
                },
                {
                    "name": "LV_EVENT_DOUBLE_CLICKED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called for the second short click within small distance and short time ",
                    "value": "0x00006"
                },
                {
                    "name": "LV_EVENT_TRIPLE_CLICKED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called for the third short click within small distance and short time ",
                    "value": "0x00007"
                },
                {
                    "name": "LV_EVENT_LONG_PRESSED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Object has been pressed for at least long_press_time . Not called if scrolled. ",
                    "value": "0x00008"
                },
                {
                    "name": "LV_EVENT_LONG_PRESSED_REPEAT",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called after long_press_time in every long_press_repeat_time ms. Not called if scrolled. ",
                    "value": "0x00009"
                },
                {
                    "name": "LV_EVENT_CLICKED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called on release if not scrolled (regardless to long press) ",
                    "value": "0x0000A"
                },
                {
                    "name": "LV_EVENT_RELEASED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Called in every cases when the object has been released ",
                    "value": "0x0000B"
                },
                {
                    "name": "LV_EVENT_SCROLL_BEGIN",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Scrolling begins. The event parameter is a pointer to the animation of the scroll. Can be modified ",
                    "value": "0x0000C"
                },
                {
                    "name": "LV_EVENT_SCROLL_THROW_BEGIN",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0000D"
                },
                {
                    "name": "LV_EVENT_SCROLL_END",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Scrolling ends ",
                    "value": "0x0000E"
                },
                {
                    "name": "LV_EVENT_SCROLL",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Scrolling ",
                    "value": "0x0000F"
                },
                {
                    "name": "LV_EVENT_GESTURE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A gesture is detected. Get the gesture with lv_indev_get_gesture_dir(lv_indev_active()); ",
                    "value": "0x00010"
                },
                {
                    "name": "LV_EVENT_KEY",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A key is sent to the object. Get the key with lv_indev_get_key(lv_indev_active()); ",
                    "value": "0x00011"
                },
                {
                    "name": "LV_EVENT_ROTARY",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "An encoder or wheel was rotated. Get the rotation count with lv_event_get_rotary_diff(e); ",
                    "value": "0x00012"
                },
                {
                    "name": "LV_EVENT_FOCUSED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object is focused ",
                    "value": "0x00013"
                },
                {
                    "name": "LV_EVENT_DEFOCUSED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object is defocused ",
                    "value": "0x00014"
                },
                {
                    "name": "LV_EVENT_LEAVE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The object is defocused but still selected ",
                    "value": "0x00015"
                },
                {
                    "name": "LV_EVENT_HIT_TEST",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Perform advanced hit-testing ",
                    "value": "0x00016"
                },
                {
                    "name": "LV_EVENT_INDEV_RESET",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Indev has been reset ",
                    "value": "0x00017"
                },
                {
                    "name": "LV_EVENT_HOVER_OVER",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Indev hover over object ",
                    "value": "0x00018"
                },
                {
                    "name": "LV_EVENT_HOVER_LEAVE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Indev hover leave object ",
                    "value": "0x00019"
                },
                {
                    "name": "LV_EVENT_COVER_CHECK",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Drawing events Check if the object fully covers an area. The event parameter is lv_cover_check_info_t * . ",
                    "value": "0x0001A"
                },
                {
                    "name": "LV_EVENT_REFR_EXT_DRAW_SIZE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Get the required extra draw area around the object (e.g. for shadow). The event parameter is int32_t * to store the size. ",
                    "value": "0x0001B"
                },
                {
                    "name": "LV_EVENT_DRAW_MAIN_BEGIN",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Starting the main drawing phase ",
                    "value": "0x0001C"
                },
                {
                    "name": "LV_EVENT_DRAW_MAIN",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Perform the main drawing ",
                    "value": "0x0001D"
                },
                {
                    "name": "LV_EVENT_DRAW_MAIN_END",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Finishing the main drawing phase ",
                    "value": "0x0001E"
                },
                {
                    "name": "LV_EVENT_DRAW_POST_BEGIN",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Starting the post draw phase (when all children are drawn) ",
                    "value": "0x0001F"
                },
                {
                    "name": "LV_EVENT_DRAW_POST",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Perform the post draw phase (when all children are drawn) ",
                    "value": "0x00020"
                },
                {
                    "name": "LV_EVENT_DRAW_POST_END",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Finishing the post draw phase (when all children are drawn) ",
                    "value": "0x00021"
                },
                {
                    "name": "LV_EVENT_DRAW_TASK_ADDED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Adding a draw task ",
                    "value": "0x00022"
                },
                {
                    "name": "LV_EVENT_VALUE_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Special events The object's value has changed (i.e. slider moved) ",
                    "value": "0x00023"
                },
                {
                    "name": "LV_EVENT_INSERT",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A text is inserted to the object. The event data is char * being inserted. ",
                    "value": "0x00024"
                },
                {
                    "name": "LV_EVENT_REFRESH",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Notify the object to refresh something on it (for the user) ",
                    "value": "0x00025"
                },
                {
                    "name": "LV_EVENT_READY",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A process has finished ",
                    "value": "0x00026"
                },
                {
                    "name": "LV_EVENT_CANCEL",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A process has been cancelled ",
                    "value": "0x00027"
                },
                {
                    "name": "LV_EVENT_CREATE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Other events Object is being created ",
                    "value": "0x00028"
                },
                {
                    "name": "LV_EVENT_DELETE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Object is being deleted ",
                    "value": "0x00029"
                },
                {
                    "name": "LV_EVENT_CHILD_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Child was removed, added, or its size, position were changed ",
                    "value": "0x0002A"
                },
                {
                    "name": "LV_EVENT_CHILD_CREATED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Child was created, always bubbles up to all parents ",
                    "value": "0x0002B"
                },
                {
                    "name": "LV_EVENT_CHILD_DELETED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Child was deleted, always bubbles up to all parents ",
                    "value": "0x0002C"
                },
                {
                    "name": "LV_EVENT_SCREEN_UNLOAD_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A screen unload started, fired immediately when scr_load is called ",
                    "value": "0x0002D"
                },
                {
                    "name": "LV_EVENT_SCREEN_LOAD_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A screen load started, fired when the screen change delay is expired ",
                    "value": "0x0002E"
                },
                {
                    "name": "LV_EVENT_SCREEN_LOADED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A screen was loaded ",
                    "value": "0x0002F"
                },
                {
                    "name": "LV_EVENT_SCREEN_UNLOADED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A screen was unloaded ",
                    "value": "0x00030"
                },
                {
                    "name": "LV_EVENT_SIZE_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Object coordinates/size have changed ",
                    "value": "0x00031"
                },
                {
                    "name": "LV_EVENT_STYLE_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Object's style has changed ",
                    "value": "0x00032"
                },
                {
                    "name": "LV_EVENT_LAYOUT_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The children position has changed due to a layout recalculation ",
                    "value": "0x00033"
                },
                {
                    "name": "LV_EVENT_GET_SELF_SIZE",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Get the internal size of a widget ",
                    "value": "0x00034"
                },
                {
                    "name": "LV_EVENT_INVALIDATE_AREA",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Events of optional LVGL components ",
                    "value": "0x00035"
                },
                {
                    "name": "LV_EVENT_RESOLUTION_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00036"
                },
                {
                    "name": "LV_EVENT_COLOR_FORMAT_CHANGED",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00037"
                },
                {
                    "name": "LV_EVENT_REFR_REQUEST",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00038"
                },
                {
                    "name": "LV_EVENT_REFR_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00039"
                },
                {
                    "name": "LV_EVENT_REFR_READY",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003A"
                },
                {
                    "name": "LV_EVENT_RENDER_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003B"
                },
                {
                    "name": "LV_EVENT_RENDER_READY",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003C"
                },
                {
                    "name": "LV_EVENT_FLUSH_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003D"
                },
                {
                    "name": "LV_EVENT_FLUSH_FINISH",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003E"
                },
                {
                    "name": "LV_EVENT_FLUSH_WAIT_START",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0003F"
                },
                {
                    "name": "LV_EVENT_FLUSH_WAIT_FINISH",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00040"
                },
                {
                    "name": "LV_EVENT_VSYNC",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00041"
                },
                {
                    "name": "LV_EVENT_LAST",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00042"
                },
                {
                    "name": "LV_EVENT_PREPROCESS",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Number of default events ",
                    "value": "0x08000"
                },
                {
                    "name": "LV_EVENT_MARKED_DELETING",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "This is a flag that can be set with an event so it's processed before the class default event processing ",
                    "value": "0x10000"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FS_RES_OK",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FS_RES_HW_ERR",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FS_RES_FS_ERR",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_FS_RES_NOT_EX",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_FS_RES_FULL",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_FS_RES_LOCKED",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_FS_RES_DENIED",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                },
                {
                    "name": "LV_FS_RES_BUSY",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7"
                },
                {
                    "name": "LV_FS_RES_TOUT",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_FS_RES_NOT_IMP",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_FS_RES_OUT_OF_MEM",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xA"
                },
                {
                    "name": "LV_FS_RES_INV_PARAM",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xB"
                },
                {
                    "name": "LV_FS_RES_UNKNOWN",
                    "type": {
                        "name": "lv_fs_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xC"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FS_MODE_WR",
                    "type": {
                        "name": "lv_fs_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FS_MODE_RD",
                    "type": {
                        "name": "lv_fs_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_whence_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FS_SEEK_SET",
                    "type": {
                        "name": "lv_fs_whence_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Set the position from absolutely (from the start of file) ",
                    "value": "0x0"
                },
                {
                    "name": "LV_FS_SEEK_CUR",
                    "type": {
                        "name": "lv_fs_whence_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Set the position from the current position ",
                    "value": "0x1"
                },
                {
                    "name": "LV_FS_SEEK_END",
                    "type": {
                        "name": "lv_fs_whence_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Set the position from the end of the file ",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_src_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_IMAGE_SRC_VARIABLE",
                    "type": {
                        "name": "lv_image_src_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_IMAGE_SRC_FILE",
                    "type": {
                        "name": "lv_image_src_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Binary/C variable ",
                    "value": "0x1"
                },
                {
                    "name": "LV_IMAGE_SRC_SYMBOL",
                    "type": {
                        "name": "lv_image_src_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "File in filesystem ",
                    "value": "0x2"
                },
                {
                    "name": "LV_IMAGE_SRC_UNKNOWN",
                    "type": {
                        "name": "lv_image_src_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Symbol ( :ref:`lv_symbol_def.h` ) ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_task_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DRAW_TASK_TYPE_NONE",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_FILL",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_BORDER",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_BOX_SHADOW",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_LABEL",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_IMAGE",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_LAYER",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_LINE",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_ARC",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_TRIANGLE",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_MASK_RECTANGLE",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xA"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_MASK_BITMAP",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xB"
                },
                {
                    "name": "LV_DRAW_TASK_TYPE_VECTOR",
                    "type": {
                        "name": "lv_draw_task_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xC"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_task_state_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DRAW_TASK_STATE_WAITING",
                    "type": {
                        "name": "lv_draw_task_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DRAW_TASK_STATE_QUEUED",
                    "type": {
                        "name": "lv_draw_task_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DRAW_TASK_STATE_IN_PROGRESS",
                    "type": {
                        "name": "lv_draw_task_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DRAW_TASK_STATE_READY",
                    "type": {
                        "name": "lv_draw_task_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_display_rotation_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DISPLAY_ROTATION_0",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DISPLAY_ROTATION_90",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DISPLAY_ROTATION_180",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DISPLAY_ROTATION_270",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_display_render_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DISPLAY_RENDER_MODE_PARTIAL",
                    "type": {
                        "name": "lv_display_render_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Use the buffer(s) to render the screen is smaller parts. This way the buffers can be smaller then the display to save RAM. At least 1/10 screen size buffer(s) are recommended. ",
                    "value": "0x0"
                },
                {
                    "name": "LV_DISPLAY_RENDER_MODE_DIRECT",
                    "type": {
                        "name": "lv_display_render_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The buffer(s) has to be screen sized and LVGL will render into the correct location of the buffer. This way the buffer always contain the whole image. Only the changed ares will be updated. With 2 buffers the buffers' content are kept in sync automatically and in flush_cb only address change is required. ",
                    "value": "0x1"
                },
                {
                    "name": "LV_DISPLAY_RENDER_MODE_FULL",
                    "type": {
                        "name": "lv_display_render_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Always redraw the whole screen even if only one pixel has been changed. With 2 buffers in flush_cb only and address change is required. ",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_screen_load_anim_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SCR_LOAD_ANIM_NONE",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OVER_LEFT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OVER_RIGHT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OVER_TOP",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OVER_BOTTOM",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_MOVE_LEFT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_MOVE_RIGHT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_MOVE_TOP",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_MOVE_BOTTOM",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_FADE_IN",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_FADE_ON",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_FADE_OUT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xA"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OUT_LEFT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xB"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OUT_RIGHT",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xC"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OUT_TOP",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xD"
                },
                {
                    "name": "LV_SCR_LOAD_ANIM_OUT_BOTTOM",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xE"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_tree_walk_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_TREE_WALK_NEXT",
                    "type": {
                        "name": "lv_obj_tree_walk_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_OBJ_TREE_WALK_SKIP_CHILDREN",
                    "type": {
                        "name": "lv_obj_tree_walk_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_OBJ_TREE_WALK_END",
                    "type": {
                        "name": "lv_obj_tree_walk_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_point_transform_flag_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_POINT_TRANSFORM_FLAG_NONE",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "No flags ",
                    "value": "0x0"
                },
                {
                    "name": "LV_OBJ_POINT_TRANSFORM_FLAG_RECURSIVE",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Consider the transformation properties of the parents too ",
                    "value": "0x1"
                },
                {
                    "name": "LV_OBJ_POINT_TRANSFORM_FLAG_INVERSE",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Execute the inverse of the transformation (-angle and 1/zoom) ",
                    "value": "0x2"
                },
                {
                    "name": "LV_OBJ_POINT_TRANSFORM_FLAG_INVERSE_RECURSIVE",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Both inverse and recursive ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_scrollbar_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SCROLLBAR_MODE_OFF",
                    "type": {
                        "name": "lv_scrollbar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Never show scrollbars ",
                    "value": "0x0"
                },
                {
                    "name": "LV_SCROLLBAR_MODE_ON",
                    "type": {
                        "name": "lv_scrollbar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Always show scrollbars ",
                    "value": "0x1"
                },
                {
                    "name": "LV_SCROLLBAR_MODE_ACTIVE",
                    "type": {
                        "name": "lv_scrollbar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Show scroll bars when object is being scrolled ",
                    "value": "0x2"
                },
                {
                    "name": "LV_SCROLLBAR_MODE_AUTO",
                    "type": {
                        "name": "lv_scrollbar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Show scroll bars when the content is large enough to be scrolled ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_scroll_snap_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SCROLL_SNAP_NONE",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Do not align, leave where it is ",
                    "value": "0x0"
                },
                {
                    "name": "LV_SCROLL_SNAP_START",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align to the left/top ",
                    "value": "0x1"
                },
                {
                    "name": "LV_SCROLL_SNAP_END",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align to the right/bottom ",
                    "value": "0x2"
                },
                {
                    "name": "LV_SCROLL_SNAP_CENTER",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Align to the center ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_style_state_cmp_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_STYLE_STATE_CMP_SAME",
                    "type": {
                        "name": "lv_style_state_cmp_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The style properties in the 2 states are identical ",
                    "value": "0x0"
                },
                {
                    "name": "LV_STYLE_STATE_CMP_DIFF_REDRAW",
                    "type": {
                        "name": "lv_style_state_cmp_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The differences can be shown with a simple redraw ",
                    "value": "0x1"
                },
                {
                    "name": "LV_STYLE_STATE_CMP_DIFF_DRAW_PAD",
                    "type": {
                        "name": "lv_style_state_cmp_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The differences can be shown with a simple redraw ",
                    "value": "0x2"
                },
                {
                    "name": "LV_STYLE_STATE_CMP_DIFF_LAYOUT",
                    "type": {
                        "name": "lv_style_state_cmp_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The differences can be shown with a simple redraw ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_layer_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_LAYER_TYPE_NONE",
                    "type": {
                        "name": "lv_layer_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_LAYER_TYPE_SIMPLE",
                    "type": {
                        "name": "lv_layer_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_LAYER_TYPE_TRANSFORM",
                    "type": {
                        "name": "lv_layer_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_class_editable_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_CLASS_EDITABLE_INHERIT",
                    "type": {
                        "name": "lv_obj_class_editable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Check the base class. Must have 0 value to let zero initialized class inherit ",
                    "value": "0x0"
                },
                {
                    "name": "LV_OBJ_CLASS_EDITABLE_TRUE",
                    "type": {
                        "name": "lv_obj_class_editable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_OBJ_CLASS_EDITABLE_FALSE",
                    "type": {
                        "name": "lv_obj_class_editable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_class_group_def_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_CLASS_GROUP_DEF_INHERIT",
                    "type": {
                        "name": "lv_obj_class_group_def_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Check the base class. Must have 0 value to let zero initialized class inherit ",
                    "value": "0x0"
                },
                {
                    "name": "LV_OBJ_CLASS_GROUP_DEF_TRUE",
                    "type": {
                        "name": "lv_obj_class_group_def_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_OBJ_CLASS_GROUP_DEF_FALSE",
                    "type": {
                        "name": "lv_obj_class_group_def_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_class_theme_inheritable_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_CLASS_THEME_INHERITABLE_FALSE",
                    "type": {
                        "name": "lv_obj_class_theme_inheritable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Do not inherit theme from base class. ",
                    "value": "0x0"
                },
                {
                    "name": "LV_OBJ_CLASS_THEME_INHERITABLE_TRUE",
                    "type": {
                        "name": "lv_obj_class_theme_inheritable_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_key_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_KEY_UP",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x11"
                },
                {
                    "name": "LV_KEY_DOWN",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x12"
                },
                {
                    "name": "LV_KEY_RIGHT",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x13"
                },
                {
                    "name": "LV_KEY_LEFT",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x14"
                },
                {
                    "name": "LV_KEY_ESC",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1B"
                },
                {
                    "name": "LV_KEY_DEL",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7F"
                },
                {
                    "name": "LV_KEY_BACKSPACE",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_KEY_ENTER",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xA"
                },
                {
                    "name": "LV_KEY_NEXT",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_KEY_PREV",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xB"
                },
                {
                    "name": "LV_KEY_HOME",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_KEY_END",
                    "type": {
                        "name": "lv_key_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_group_refocus_policy_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_GROUP_REFOCUS_POLICY_NEXT",
                    "type": {
                        "name": "lv_group_refocus_policy_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_GROUP_REFOCUS_POLICY_PREV",
                    "type": {
                        "name": "lv_group_refocus_policy_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_indev_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_INDEV_TYPE_NONE",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Uninitialized state ",
                    "value": "0x0"
                },
                {
                    "name": "LV_INDEV_TYPE_POINTER",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Touch pad, mouse, external button ",
                    "value": "0x1"
                },
                {
                    "name": "LV_INDEV_TYPE_KEYPAD",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keypad or keyboard ",
                    "value": "0x2"
                },
                {
                    "name": "LV_INDEV_TYPE_BUTTON",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "External (hardware button) which is assigned to a specific point of the screen ",
                    "value": "0x3"
                },
                {
                    "name": "LV_INDEV_TYPE_ENCODER",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Encoder with only Left, Right turn and a Button ",
                    "value": "0x4"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_indev_state_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_INDEV_STATE_RELEASED",
                    "type": {
                        "name": "lv_indev_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_INDEV_STATE_PRESSED",
                    "type": {
                        "name": "lv_indev_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_indev_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_INDEV_MODE_NONE",
                    "type": {
                        "name": "lv_indev_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_INDEV_MODE_TIMER",
                    "type": {
                        "name": "lv_indev_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_INDEV_MODE_EVENT",
                    "type": {
                        "name": "lv_indev_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cover_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_COVER_RES_COVER",
                    "type": {
                        "name": "lv_cover_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_COVER_RES_NOT_COVER",
                    "type": {
                        "name": "lv_cover_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_COVER_RES_MASKED",
                    "type": {
                        "name": "lv_cover_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_STATE_DEFAULT",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00000"
                },
                {
                    "name": "LV_STATE_CHECKED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00001"
                },
                {
                    "name": "LV_STATE_FOCUSED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00002"
                },
                {
                    "name": "LV_STATE_FOCUS_KEY",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00004"
                },
                {
                    "name": "LV_STATE_EDITED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00008"
                },
                {
                    "name": "LV_STATE_HOVERED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00010"
                },
                {
                    "name": "LV_STATE_PRESSED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00020"
                },
                {
                    "name": "LV_STATE_SCROLLED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00040"
                },
                {
                    "name": "LV_STATE_DISABLED",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00080"
                },
                {
                    "name": "LV_STATE_USER_1",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01000"
                },
                {
                    "name": "LV_STATE_USER_2",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02000"
                },
                {
                    "name": "LV_STATE_USER_3",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x04000"
                },
                {
                    "name": "LV_STATE_USER_4",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x08000"
                },
                {
                    "name": "LV_STATE_ANY",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Special value can be used in some functions to target all states ",
                    "value": "0x0FFFF"
                }
            ]
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_PART_MAIN",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "A background like rectangle ",
                    "value": "0x00000"
                },
                {
                    "name": "LV_PART_SCROLLBAR",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The scrollbar(s) ",
                    "value": "0x10000"
                },
                {
                    "name": "LV_PART_INDICATOR",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Indicator, e.g. for slider, bar, switch, or the tick box of the checkbox ",
                    "value": "0x20000"
                },
                {
                    "name": "LV_PART_KNOB",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Like handle to grab to adjust the value ",
                    "value": "0x30000"
                },
                {
                    "name": "LV_PART_SELECTED",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Indicate the currently selected option or section ",
                    "value": "0x40000"
                },
                {
                    "name": "LV_PART_ITEMS",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Used if the widget has multiple similar elements (e.g. table cells) ",
                    "value": "0x50000"
                },
                {
                    "name": "LV_PART_CURSOR",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Mark a specific place e.g. for text area's cursor or on a chart ",
                    "value": "0x60000"
                },
                {
                    "name": "LV_PART_CUSTOM_FIRST",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Extension point for custom widgets ",
                    "value": "0x80000"
                },
                {
                    "name": "LV_PART_ANY",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Special value can be used in some functions to target all parts ",
                    "value": "0xF0000"
                }
            ]
        },
        {
            "name": "lv_obj_flag_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_OBJ_FLAG_HIDDEN",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Make the object hidden. (Like it wasn't there at all) ",
                    "value": "0x00000001"
                },
                {
                    "name": "LV_OBJ_FLAG_CLICKABLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Make the object clickable by the input devices ",
                    "value": "0x00000002"
                },
                {
                    "name": "LV_OBJ_FLAG_CLICK_FOCUSABLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Add focused state to the object when clicked ",
                    "value": "0x00000004"
                },
                {
                    "name": "LV_OBJ_FLAG_CHECKABLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Toggle checked state when the object is clicked ",
                    "value": "0x00000008"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLLABLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Make the object scrollable ",
                    "value": "0x00000010"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_ELASTIC",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow scrolling inside but with slower speed ",
                    "value": "0x00000020"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_MOMENTUM",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Make the object scroll further when \"thrown\" ",
                    "value": "0x00000040"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_ONE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow scrolling only one snappable children ",
                    "value": "0x00000080"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_CHAIN_HOR",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow propagating the horizontal scroll to a parent ",
                    "value": "0x00000100"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_CHAIN_VER",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow propagating the vertical scroll to a parent ",
                    "value": "0x00000200"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_CHAIN",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x00000300"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_ON_FOCUS",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Automatically scroll object to make it visible when focused ",
                    "value": "0x00000400"
                },
                {
                    "name": "LV_OBJ_FLAG_SCROLL_WITH_ARROW",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow scrolling the focused object with arrow keys ",
                    "value": "0x00000800"
                },
                {
                    "name": "LV_OBJ_FLAG_SNAPPABLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "If scroll snap is enabled on the parent it can snap to this object ",
                    "value": "0x00001000"
                },
                {
                    "name": "LV_OBJ_FLAG_PRESS_LOCK",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the object pressed even if the press slid from the object ",
                    "value": "0x00002000"
                },
                {
                    "name": "LV_OBJ_FLAG_EVENT_BUBBLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Propagate the events to the parent too ",
                    "value": "0x00004000"
                },
                {
                    "name": "LV_OBJ_FLAG_GESTURE_BUBBLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Propagate the gestures to the parent ",
                    "value": "0x00008000"
                },
                {
                    "name": "LV_OBJ_FLAG_ADV_HITTEST",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Allow performing more accurate hit (click) test. E.g. consider rounded corners. ",
                    "value": "0x00010000"
                },
                {
                    "name": "LV_OBJ_FLAG_IGNORE_LAYOUT",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Make the object not positioned by the layouts ",
                    "value": "0x00020000"
                },
                {
                    "name": "LV_OBJ_FLAG_FLOATING",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Do not scroll the object when the parent scrolls and ignore layout ",
                    "value": "0x00040000"
                },
                {
                    "name": "LV_OBJ_FLAG_SEND_DRAW_TASK_EVENTS",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Send LV_EVENT_DRAW_TASK_ADDED events ",
                    "value": "0x00080000"
                },
                {
                    "name": "LV_OBJ_FLAG_OVERFLOW_VISIBLE",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Do not clip the children to the parent's ext draw size ",
                    "value": "0x00100000"
                },
                {
                    "name": "LV_OBJ_FLAG_FLEX_IN_NEW_TRACK",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Start a new flex track on this item ",
                    "value": "0x00200000"
                },
                {
                    "name": "LV_OBJ_FLAG_LAYOUT_1",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by layouts ",
                    "value": "0x00800000"
                },
                {
                    "name": "LV_OBJ_FLAG_LAYOUT_2",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by layouts ",
                    "value": "0x01000000"
                },
                {
                    "name": "LV_OBJ_FLAG_WIDGET_1",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by widget ",
                    "value": "0x02000000"
                },
                {
                    "name": "LV_OBJ_FLAG_WIDGET_2",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by widget ",
                    "value": "0x04000000"
                },
                {
                    "name": "LV_OBJ_FLAG_USER_1",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by user ",
                    "value": "0x08000000"
                },
                {
                    "name": "LV_OBJ_FLAG_USER_2",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by user ",
                    "value": "0x10000000"
                },
                {
                    "name": "LV_OBJ_FLAG_USER_3",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by user ",
                    "value": "0x20000000"
                },
                {
                    "name": "LV_OBJ_FLAG_USER_4",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom flag, free to use by user ",
                    "value": "0x40000000"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_cmap_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL",
                    "type": {
                        "name": "lv_font_fmt_txt_cmap_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FONT_FMT_TXT_CMAP_SPARSE_FULL",
                    "type": {
                        "name": "lv_font_fmt_txt_cmap_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY",
                    "type": {
                        "name": "lv_font_fmt_txt_cmap_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_FONT_FMT_TXT_CMAP_SPARSE_TINY",
                    "type": {
                        "name": "lv_font_fmt_txt_cmap_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_bitmap_format_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_FONT_FMT_TXT_PLAIN",
                    "type": {
                        "name": "lv_font_fmt_txt_bitmap_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_FONT_FMT_TXT_COMPRESSED",
                    "type": {
                        "name": "lv_font_fmt_txt_bitmap_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_FONT_FMT_TXT_COMPRESSED_NO_PREFILTER",
                    "type": {
                        "name": "lv_font_fmt_txt_bitmap_format_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_align_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_IMAGE_ALIGN_DEFAULT",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_IMAGE_ALIGN_TOP_LEFT",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_IMAGE_ALIGN_TOP_MID",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_IMAGE_ALIGN_TOP_RIGHT",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_IMAGE_ALIGN_BOTTOM_LEFT",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_IMAGE_ALIGN_BOTTOM_MID",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_IMAGE_ALIGN_BOTTOM_RIGHT",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                },
                {
                    "name": "LV_IMAGE_ALIGN_LEFT_MID",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7"
                },
                {
                    "name": "LV_IMAGE_ALIGN_RIGHT_MID",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                },
                {
                    "name": "LV_IMAGE_ALIGN_CENTER",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x9"
                },
                {
                    "name": "LV_IMAGE_ALIGN_AUTO_TRANSFORM",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xA"
                },
                {
                    "name": "LV_IMAGE_ALIGN_STRETCH",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xB"
                },
                {
                    "name": "LV_IMAGE_ALIGN_TILE",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0xC"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_animimg_part_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_ANIM_IMAGE_PART_MAIN",
                    "type": {
                        "name": "lv_animimg_part_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_arc_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_ARC_MODE_NORMAL",
                    "type": {
                        "name": "lv_arc_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_ARC_MODE_SYMMETRICAL",
                    "type": {
                        "name": "lv_arc_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_ARC_MODE_REVERSE",
                    "type": {
                        "name": "lv_arc_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_label_long_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_LABEL_LONG_WRAP",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the object width, wrap lines longer than object width and expand the object height ",
                    "value": "0x0"
                },
                {
                    "name": "LV_LABEL_LONG_DOT",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the size and write dots at the end if the text is too long ",
                    "value": "0x1"
                },
                {
                    "name": "LV_LABEL_LONG_SCROLL",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the size and roll the text back and forth ",
                    "value": "0x2"
                },
                {
                    "name": "LV_LABEL_LONG_SCROLL_CIRCULAR",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the size and roll the text circularly ",
                    "value": "0x3"
                },
                {
                    "name": "LV_LABEL_LONG_CLIP",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep the size and clip the text out of it ",
                    "value": "0x4"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_bar_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BAR_MODE_NORMAL",
                    "type": {
                        "name": "lv_bar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_BAR_MODE_SYMMETRICAL",
                    "type": {
                        "name": "lv_bar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_BAR_MODE_RANGE",
                    "type": {
                        "name": "lv_bar_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_bar_orientation_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BAR_ORIENTATION_AUTO",
                    "type": {
                        "name": "lv_bar_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_BAR_ORIENTATION_HORIZONTAL",
                    "type": {
                        "name": "lv_bar_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_BAR_ORIENTATION_VERTICAL",
                    "type": {
                        "name": "lv_bar_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_buttonmatrix_ctrl_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_BUTTONMATRIX_CTRL_HIDDEN",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Button hidden ",
                    "value": "0x0010"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_NO_REPEAT",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Do not repeat press this button. ",
                    "value": "0x0020"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_DISABLED",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Disable this button. ",
                    "value": "0x0040"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_CHECKABLE",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The button can be toggled. ",
                    "value": "0x0080"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_CHECKED",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Button is currently toggled (e.g. checked). ",
                    "value": "0x0100"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_CLICK_TRIG",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "1: Send LV_EVENT_VALUE_CHANGE on CLICK, 0: Send LV_EVENT_VALUE_CHANGE on PRESS ",
                    "value": "0x0200"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_POPOVER",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Show a popover when pressing this key ",
                    "value": "0x0400"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_RESERVED_1",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Reserved for later use ",
                    "value": "0x0800"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_RESERVED_2",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Reserved for later use ",
                    "value": "0x1000"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_RESERVED_3",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Reserved for later use ",
                    "value": "0x2000"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_CUSTOM_1",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom free to use flag ",
                    "value": "0x4000"
                },
                {
                    "name": "LV_BUTTONMATRIX_CTRL_CUSTOM_2",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Custom free to use flag ",
                    "value": "0x8000"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_chart_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_CHART_TYPE_NONE",
                    "type": {
                        "name": "lv_chart_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Don't draw the series ",
                    "value": "0x0"
                },
                {
                    "name": "LV_CHART_TYPE_LINE",
                    "type": {
                        "name": "lv_chart_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Connect the points with lines ",
                    "value": "0x1"
                },
                {
                    "name": "LV_CHART_TYPE_BAR",
                    "type": {
                        "name": "lv_chart_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Draw columns ",
                    "value": "0x2"
                },
                {
                    "name": "LV_CHART_TYPE_SCATTER",
                    "type": {
                        "name": "lv_chart_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Draw points and lines in 2D (x,y coordinates) ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_chart_update_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_CHART_UPDATE_MODE_SHIFT",
                    "type": {
                        "name": "lv_chart_update_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Shift old data to the left and add the new one the right ",
                    "value": "0x0"
                },
                {
                    "name": "LV_CHART_UPDATE_MODE_CIRCULAR",
                    "type": {
                        "name": "lv_chart_update_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Add the new data in a circular way ",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_chart_axis_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_CHART_AXIS_PRIMARY_Y",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_CHART_AXIS_SECONDARY_Y",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_CHART_AXIS_PRIMARY_X",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_CHART_AXIS_SECONDARY_X",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_CHART_AXIS_LAST",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_imagebutton_state_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_IMAGEBUTTON_STATE_RELEASED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_PRESSED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_DISABLED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_CHECKED_RELEASED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_CHECKED_PRESSED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_CHECKED_DISABLED",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_IMAGEBUTTON_STATE_NUM",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_keyboard_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_KEYBOARD_MODE_TEXT_LOWER",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_KEYBOARD_MODE_TEXT_UPPER",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_KEYBOARD_MODE_SPECIAL",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_KEYBOARD_MODE_NUMBER",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_KEYBOARD_MODE_USER_1",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_KEYBOARD_MODE_USER_2",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_KEYBOARD_MODE_USER_3",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                },
                {
                    "name": "LV_KEYBOARD_MODE_USER_4",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x7"
                },
                {
                    "name": "LV_KEYBOARD_MODE_TEXT_ARABIC",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_menu_mode_header_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_MENU_HEADER_TOP_FIXED",
                    "type": {
                        "name": "lv_menu_mode_header_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Header is positioned at the top ",
                    "value": "0x0"
                },
                {
                    "name": "LV_MENU_HEADER_TOP_UNFIXED",
                    "type": {
                        "name": "lv_menu_mode_header_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Header is positioned at the top and can be scrolled out of view ",
                    "value": "0x1"
                },
                {
                    "name": "LV_MENU_HEADER_BOTTOM_FIXED",
                    "type": {
                        "name": "lv_menu_mode_header_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Header is positioned at the bottom ",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_menu_mode_root_back_button_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_MENU_ROOT_BACK_BUTTON_DISABLED",
                    "type": {
                        "name": "lv_menu_mode_root_back_button_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_MENU_ROOT_BACK_BUTTON_ENABLED",
                    "type": {
                        "name": "lv_menu_mode_root_back_button_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_roller_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_ROLLER_MODE_NORMAL",
                    "type": {
                        "name": "lv_roller_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Normal mode (roller ends at the end of the options). ",
                    "value": "0x0"
                },
                {
                    "name": "LV_ROLLER_MODE_INFINITE",
                    "type": {
                        "name": "lv_roller_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Infinite mode (roller can be scrolled forever). ",
                    "value": "0x1"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_scale_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SCALE_MODE_HORIZONTAL_TOP",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_SCALE_MODE_HORIZONTAL_BOTTOM",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_SCALE_MODE_VERTICAL_LEFT",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_SCALE_MODE_VERTICAL_RIGHT",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_SCALE_MODE_ROUND_INNER",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                },
                {
                    "name": "LV_SCALE_MODE_ROUND_OUTER",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x5"
                },
                {
                    "name": "LV_SCALE_MODE_LAST",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x6"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_slider_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SLIDER_MODE_NORMAL",
                    "type": {
                        "name": "lv_slider_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_SLIDER_MODE_SYMMETRICAL",
                    "type": {
                        "name": "lv_slider_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_SLIDER_MODE_RANGE",
                    "type": {
                        "name": "lv_slider_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_span_overflow_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SPAN_OVERFLOW_CLIP",
                    "type": {
                        "name": "lv_span_overflow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_SPAN_OVERFLOW_ELLIPSIS",
                    "type": {
                        "name": "lv_span_overflow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_SPAN_OVERFLOW_LAST",
                    "type": {
                        "name": "lv_span_overflow_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Fence member ",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_span_mode_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SPAN_MODE_FIXED",
                    "type": {
                        "name": "lv_span_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "fixed the obj size ",
                    "value": "0x0"
                },
                {
                    "name": "LV_SPAN_MODE_EXPAND",
                    "type": {
                        "name": "lv_span_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Expand the object size to the text size ",
                    "value": "0x1"
                },
                {
                    "name": "LV_SPAN_MODE_BREAK",
                    "type": {
                        "name": "lv_span_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Keep width, break the too long lines and expand height ",
                    "value": "0x2"
                },
                {
                    "name": "LV_SPAN_MODE_LAST",
                    "type": {
                        "name": "lv_span_mode_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Fence member ",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": null,
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_PART_TEXTAREA_PLACEHOLDER",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x80000"
                }
            ]
        },
        {
            "name": "lv_switch_orientation_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SWITCH_ORIENTATION_AUTO",
                    "type": {
                        "name": "lv_switch_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_SWITCH_ORIENTATION_HORIZONTAL",
                    "type": {
                        "name": "lv_switch_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_SWITCH_ORIENTATION_VERTICAL",
                    "type": {
                        "name": "lv_switch_orientation_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_table_cell_ctrl_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_TABLE_CELL_CTRL_MERGE_RIGHT",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x01"
                },
                {
                    "name": "LV_TABLE_CELL_CTRL_TEXT_CROP",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x02"
                },
                {
                    "name": "LV_TABLE_CELL_CTRL_CUSTOM_1",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x10"
                },
                {
                    "name": "LV_TABLE_CELL_CTRL_CUSTOM_2",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x20"
                },
                {
                    "name": "LV_TABLE_CELL_CTRL_CUSTOM_3",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x40"
                },
                {
                    "name": "LV_TABLE_CELL_CTRL_CUSTOM_4",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x80"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_subject_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_SUBJECT_TYPE_INVALID",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "indicates subject not initialized yet ",
                    "value": "0x0"
                },
                {
                    "name": "LV_SUBJECT_TYPE_NONE",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "a null value like None or NILt ",
                    "value": "0x1"
                },
                {
                    "name": "LV_SUBJECT_TYPE_INT",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "an int32_t ",
                    "value": "0x2"
                },
                {
                    "name": "LV_SUBJECT_TYPE_POINTER",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "a void pointer ",
                    "value": "0x3"
                },
                {
                    "name": "LV_SUBJECT_TYPE_COLOR",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "an :ref:`lv_color_t` ",
                    "value": "0x4"
                },
                {
                    "name": "LV_SUBJECT_TYPE_GROUP",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "an array of subjects ",
                    "value": "0x5"
                },
                {
                    "name": "LV_SUBJECT_TYPE_STRING",
                    "type": {
                        "name": "lv_subject_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "a char pointer ",
                    "value": "0x6"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_gridnav_ctrl_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_GRIDNAV_CTRL_NONE",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_GRIDNAV_CTRL_ROLLOVER",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "If there is no next/previous object in a direction, the focus goes to the object in the next/previous row (on left/right keys) or first/last row (on up/down keys) ",
                    "value": "0x1"
                },
                {
                    "name": "LV_GRIDNAV_CTRL_SCROLL_FIRST",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "If an arrow is pressed and the focused object can be scrolled in that direction then it will be scrolled instead of going to the next/previous object. If there is no more room for scrolling the next/previous object will be focused normally ",
                    "value": "0x2"
                },
                {
                    "name": "LV_GRIDNAV_CTRL_HORIZONTAL_MOVE_ONLY",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Only use left/right keys for grid navigation. Up/down key events will be sent to the focused object. ",
                    "value": "0x4"
                },
                {
                    "name": "LV_GRIDNAV_CTRL_VERTICAL_MOVE_ONLY",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Only use up/down keys for grid navigation. Left/right key events will be sent to the focused object. ",
                    "value": "0x8"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_res_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DRAW_SW_MASK_RES_TRANSP",
                    "type": {
                        "name": "lv_draw_sw_mask_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DRAW_SW_MASK_RES_FULL_COVER",
                    "type": {
                        "name": "lv_draw_sw_mask_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DRAW_SW_MASK_RES_CHANGED",
                    "type": {
                        "name": "lv_draw_sw_mask_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DRAW_SW_MASK_RES_UNKNOWN",
                    "type": {
                        "name": "lv_draw_sw_mask_res_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_type_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DRAW_SW_MASK_TYPE_LINE",
                    "type": {
                        "name": "lv_draw_sw_mask_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DRAW_SW_MASK_TYPE_ANGLE",
                    "type": {
                        "name": "lv_draw_sw_mask_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DRAW_SW_MASK_TYPE_RADIUS",
                    "type": {
                        "name": "lv_draw_sw_mask_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DRAW_SW_MASK_TYPE_FADE",
                    "type": {
                        "name": "lv_draw_sw_mask_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                },
                {
                    "name": "LV_DRAW_SW_MASK_TYPE_MAP",
                    "type": {
                        "name": "lv_draw_sw_mask_type_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4"
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_line_side_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_DRAW_SW_MASK_LINE_SIDE_LEFT",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0"
                },
                {
                    "name": "LV_DRAW_SW_MASK_LINE_SIDE_RIGHT",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1"
                },
                {
                    "name": "LV_DRAW_SW_MASK_LINE_SIDE_TOP",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2"
                },
                {
                    "name": "LV_DRAW_SW_MASK_LINE_SIDE_BOTTOM",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x3"
                }
            ],
            "quals": []
        },
        {
            "name": "_lvimage_flags_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "enum",
            "docstring": "",
            "members": [
                {
                    "name": "LV_IMAGE_FLAGS_PREMULTIPLIED",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "For RGB map of the image data, mark if it's pre-multiplied with alpha. For indexed image, this bit indicated palette data is pre-multiplied with alpha. ",
                    "value": "0x0001"
                },
                {
                    "name": "LV_IMAGE_FLAGS_COMPRESSED",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The image data is compressed, so decoder needs to decode image firstly. If this flag is set, the whole image will be decompressed upon decode, and get_area_cb won't be necessary. ",
                    "value": "0x0008"
                },
                {
                    "name": "LV_IMAGE_FLAGS_ALLOCATED",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "The image is allocated from heap, thus should be freed after use. ",
                    "value": "0x0010"
                },
                {
                    "name": "LV_IMAGE_FLAGS_MODIFIABLE",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "If the image data is malloced and can be processed in place. In image decoder post processing, this flag means we modify it in-place. ",
                    "value": "0x0020"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER1",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "Flags reserved for user, lvgl won't use these bits. ",
                    "value": "0x0100"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER2",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0200"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER3",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0400"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER4",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x0800"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER5",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x1000"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER6",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x2000"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER7",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x4000"
                },
                {
                    "name": "LV_IMAGE_FLAGS_USER8",
                    "type": {
                        "name": "_lvimage_flags_t",
                        "json_type": "lvgl_type"
                    },
                    "json_type": "enum_member",
                    "docstring": "",
                    "value": "0x8000"
                }
            ]
        }
    ],
    "functions": [
        {
            "name": "lv_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize LVGL library. Should be called before any other LVGL related function. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinit the 'lv' library ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_is_initialized",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Returns whether the 'lv' library is currently initialized ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_memcpy",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Pointer to the destination array. "
            },
            "json_type": "function",
            "docstring": "Pointer to the destination array. The function does not check for any overlapping of the source and destination memory blocks. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array where the content is to be copied. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                },
                {
                    "name": "len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Number of bytes to copy. "
                }
            ]
        },
        {
            "name": "lv_memset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array to fill with the specified value. "
                },
                {
                    "name": "v",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Value to be set. The value is passed as an int, but the function fills the block of memory using the unsigned char conversion of this value. "
                },
                {
                    "name": "len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Number of bytes to be set to the value. "
                }
            ]
        },
        {
            "name": "lv_memmove",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Pointer to the destination array. "
            },
            "json_type": "function",
            "docstring": "Pointer to the destination array. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array where the content is to be copied. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                },
                {
                    "name": "len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Number of bytes to copy "
                }
            ]
        },
        {
            "name": "lv_memcmp",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The difference between the value of the first unmatching byte. "
            },
            "json_type": "function",
            "docstring": "The difference between the value of the first unmatching byte. ",
            "args": [
                {
                    "name": "p1",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the first memory block "
                },
                {
                    "name": "p2",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the second memory block "
                },
                {
                    "name": "len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Number of bytes to compare "
                }
            ]
        },
        {
            "name": "lv_memzero",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Same as memset(dst, 0x00, len) . ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the destination buffer "
                },
                {
                    "name": "len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of byte to set "
                }
            ]
        },
        {
            "name": "lv_strlen",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The length of the string in bytes. "
            },
            "json_type": "function",
            "docstring": "The length of the string in bytes. ",
            "args": [
                {
                    "name": "str",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the null-terminated byte string to be examined. "
                }
            ]
        },
        {
            "name": "lv_strlcpy",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The length of src. The return value is equivalent to the value returned by lv_strlen(src) "
            },
            "json_type": "function",
            "docstring": "The length of src. The return value is equivalent to the value returned by lv_strlen(src) ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array where the content is to be copied. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                },
                {
                    "name": "dst_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Maximum number of characters to be copied to dst, including the null character. "
                }
            ]
        },
        {
            "name": "lv_strncpy",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the destination array, which is dst. "
            },
            "json_type": "function",
            "docstring": "A pointer to the destination array, which is dst. dst will not be null terminated if dest_size bytes were copied from src before the end of src was reached. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array where the content is to be copied. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                },
                {
                    "name": "dest_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Maximum number of characters to be copied to dst. "
                }
            ]
        },
        {
            "name": "lv_strcpy",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the destination array, which is dst. "
            },
            "json_type": "function",
            "docstring": "A pointer to the destination array, which is dst. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination array where the content is to be copied. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                }
            ]
        },
        {
            "name": "lv_strcmp",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the difference between the value of the first unmatching character. "
            },
            "json_type": "function",
            "docstring": "the difference between the value of the first unmatching character. ",
            "args": [
                {
                    "name": "s1",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the first string "
                },
                {
                    "name": "s2",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the second string "
                }
            ]
        },
        {
            "name": "lv_strdup",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the new allocated string. NULL if failed. "
            },
            "json_type": "function",
            "docstring": "A pointer to the new allocated string. NULL if failed. ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                }
            ]
        },
        {
            "name": "lv_strcat",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the destination string, which is dst. "
            },
            "json_type": "function",
            "docstring": "A pointer to the destination string, which is dst. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination string where the content is to be appended. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                }
            ]
        },
        {
            "name": "lv_strncat",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the destination string, which is dst. "
            },
            "json_type": "function",
            "docstring": "A pointer to the destination string, which is dst. ",
            "args": [
                {
                    "name": "dst",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the destination string where the content is to be appended. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the source of data to be copied. "
                },
                {
                    "name": "src_len",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Maximum number of characters from src to be copied to the end of dst. "
                }
            ]
        },
        {
            "name": "lv_strchr",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "A pointer to the first occurrence of character c in the string str, or a null pointer if c is not found. "
            },
            "json_type": "function",
            "docstring": "A pointer to the first occurrence of character c in the string str, or a null pointer if c is not found. ",
            "args": [
                {
                    "name": "str",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the null-terminated byte string to be searched. "
                },
                {
                    "name": "c",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The character to be searched for. "
                }
            ]
        },
        {
            "name": "lv_mem_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize to use malloc/free/realloc etc ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_mem_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Drop all dynamically allocated memory and reset the memory pools' state ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_mem_add_pool",
            "type": {
                "type": {
                    "name": "lv_mem_pool_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "mem",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "bytes",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_mem_remove_pool",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "pool",
                    "type": {
                        "name": "lv_mem_pool_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_malloc",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to allocated uninitialized memory, or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Allocate memory dynamically pointer to allocated uninitialized memory, or NULL on failure ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "requested size in bytes "
                }
            ]
        },
        {
            "name": "lv_calloc",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to allocated zeroed memory, or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Allocate a block of zeroed memory dynamically pointer to allocated zeroed memory, or NULL on failure ",
            "args": [
                {
                    "name": "num",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "requested number of element to be allocated. "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "requested size of each element in bytes. "
                }
            ]
        },
        {
            "name": "lv_zalloc",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to allocated zeroed memory, or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Allocate zeroed memory dynamically pointer to allocated zeroed memory, or NULL on failure ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "requested size in bytes "
                }
            ]
        },
        {
            "name": "lv_malloc_zeroed",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to allocated zeroed memory, or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Allocate zeroed memory dynamically pointer to allocated zeroed memory, or NULL on failure ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "requested size in bytes "
                }
            ]
        },
        {
            "name": "lv_free",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Free an allocated data ",
            "args": [
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an allocated memory "
                }
            ]
        },
        {
            "name": "lv_realloc",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new memory, NULL on failure "
            },
            "json_type": "function",
            "docstring": "Reallocate a memory with a new size. The old content will be kept. pointer to the new memory, NULL on failure ",
            "args": [
                {
                    "name": "data_p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an allocated memory. Its content will be copied to the new memory block and freed "
                },
                {
                    "name": "new_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the desired new size in byte "
                }
            ]
        },
        {
            "name": "lv_malloc_core",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally to execute a plain malloc operation ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size in bytes to malloc "
                }
            ]
        },
        {
            "name": "lv_free_core",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally to execute a plain free operation ",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "memory address to free "
                }
            ]
        },
        {
            "name": "lv_realloc_core",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally to execute a plain realloc operation ",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "memory address to realloc "
                },
                {
                    "name": "new_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size in bytes to realloc "
                }
            ]
        },
        {
            "name": "lv_mem_monitor_core",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally by :ref:`lv_mem_monitor()` to gather LVGL heap state information. ",
            "args": [
                {
                    "name": "mon_p",
                    "type": {
                        "type": {
                            "name": "lv_mem_monitor_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to :ref:`lv_mem_monitor_t` object to be populated. "
                }
            ]
        },
        {
            "name": "lv_mem_test_core",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_mem_test",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK if the memory allocation system is working properly, or LV_RESULT_INVALID if there is an error. "
            },
            "json_type": "function",
            "docstring": "LV_RESULT_OK if the memory allocation system is working properly, or LV_RESULT_INVALID if there is an error. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_mem_monitor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Give information about the work memory of dynamic allocation ",
            "args": [
                {
                    "name": "mon_p",
                    "type": {
                        "type": {
                            "name": "lv_mem_monitor_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_mem_monitor_t` variable, the result of the analysis will be stored here "
                }
            ]
        },
        {
            "name": "lv_snprintf",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "buffer",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "count",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "format",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "...",
                    "type": {
                        "name": "ellipsis",
                        "json_type": "special_type"
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_vsnprintf",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "buffer",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "count",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "format",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "va",
                    "type": {
                        "name": "va_list",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_log_register_print_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Register custom print/write function to call when a log is added. It can format its \"File path\", \"Line number\" and \"Description\" as required and send the formatted log message to a console or serial port. ",
            "args": [
                {
                    "name": "print_cb",
                    "type": {
                        "name": "lv_log_print_g_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function pointer to print a log "
                }
            ]
        },
        {
            "name": "lv_log",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Print a log message via printf if enabled with LV_LOG_PRINTF in lv_conf.h and/or a print callback if registered with lv_log_register_print_cb ",
            "args": [
                {
                    "name": "format",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "printf-like format string "
                },
                {
                    "name": "...",
                    "type": {
                        "name": "ellipsis",
                        "json_type": "special_type"
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_log_add",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add a log ",
            "args": [
                {
                    "name": "level",
                    "type": {
                        "name": "lv_log_level_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the level of log. (From lv_log_level_t enum) "
                },
                {
                    "name": "file",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "name of the file when the log added "
                },
                {
                    "name": "line",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "line number in the source code where the log added "
                },
                {
                    "name": "func",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "name of the function when the log added "
                },
                {
                    "name": "format",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "printf-like format string "
                },
                {
                    "name": "...",
                    "type": {
                        "name": "ellipsis",
                        "json_type": "special_type"
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_tick_inc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "You have to call this function periodically ",
            "args": [
                {
                    "name": "tick_period",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the call period of this function in milliseconds "
                }
            ]
        },
        {
            "name": "lv_tick_get",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the elapsed milliseconds "
            },
            "json_type": "function",
            "docstring": "Get the elapsed milliseconds since start up the elapsed milliseconds ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_tick_elaps",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the elapsed milliseconds since 'prev_tick' "
            },
            "json_type": "function",
            "docstring": "Get the elapsed milliseconds since a previous time stamp the elapsed milliseconds since 'prev_tick' ",
            "args": [
                {
                    "name": "prev_tick",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a previous time stamp (return value of :ref:`lv_tick_get()` ) "
                }
            ]
        },
        {
            "name": "lv_delay_ms",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delay for the given milliseconds. By default it's a blocking delay, but with :ref:`lv_delay_set_cb()` a custom delay function can be set too ",
            "args": [
                {
                    "name": "ms",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of milliseconds to delay "
                }
            ]
        },
        {
            "name": "lv_tick_set_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the custom callback for 'lv_tick_get' ",
            "args": [
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_tick_get_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "call this callback on 'lv_tick_get' "
                }
            ]
        },
        {
            "name": "lv_delay_set_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a custom callback for 'lv_delay_ms' ",
            "args": [
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_delay_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "call this callback in 'lv_delay_ms' "
                }
            ]
        },
        {
            "name": "lv_ll_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize linked list ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to :ref:`lv_ll_t` variable "
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the size of 1 node in bytes "
                }
            ]
        },
        {
            "name": "lv_ll_ins_head",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new head "
            },
            "json_type": "function",
            "docstring": "Add a new head to a linked list pointer to the new head ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_ins_prev",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new node "
            },
            "json_type": "function",
            "docstring": "Insert a new node in front of the n_act node pointer to the new node ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                },
                {
                    "name": "n_act",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer a node "
                }
            ]
        },
        {
            "name": "lv_ll_ins_tail",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new tail "
            },
            "json_type": "function",
            "docstring": "Add a new tail to a linked list pointer to the new tail ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_remove",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove the node 'node_p' from 'll_p' linked list. It does not free the memory of node. ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the linked list of 'node_p' "
                },
                {
                    "name": "node_p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to node in 'll_p' linked list "
                }
            ]
        },
        {
            "name": "lv_ll_clear_custom",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "cleanup",
                    "type": {
                        "name": "cleanup",
                        "type": {
                            "type": {
                                "name": "void",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_ll_clear",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove and free all elements from a linked list. The list remain valid but become empty. ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_chg_list",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move a node to a new linked list ",
            "args": [
                {
                    "name": "ll_ori_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the original (old) linked list "
                },
                {
                    "name": "ll_new_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new linked list "
                },
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a node "
                },
                {
                    "name": "head",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: be the head in the new list false be the tail in the new list "
                }
            ]
        },
        {
            "name": "lv_ll_get_head",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the head of 'll_p' "
            },
            "json_type": "function",
            "docstring": "Return with head node of the linked list pointer to the head of 'll_p' ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_get_tail",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the tail of 'll_p' "
            },
            "json_type": "function",
            "docstring": "Return with tail node of the linked list pointer to the tail of 'll_p' ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_get_next",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the next node "
            },
            "json_type": "function",
            "docstring": "Return with the pointer of the next node after 'n_act' pointer to the next node ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                },
                {
                    "name": "n_act",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer a node "
                }
            ]
        },
        {
            "name": "lv_ll_get_prev",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the previous node "
            },
            "json_type": "function",
            "docstring": "Return with the pointer of the previous node after 'n_act' pointer to the previous node ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                },
                {
                    "name": "n_act",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer a node "
                }
            ]
        },
        {
            "name": "lv_ll_get_len",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "length of the linked list "
            },
            "json_type": "function",
            "docstring": "Return the length of the linked list. length of the linked list ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to linked list "
                }
            ]
        },
        {
            "name": "lv_ll_move_before",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move a node before another node in the same linked list ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a linked list "
                },
                {
                    "name": "n_act",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to node to move "
                },
                {
                    "name": "n_after",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a node which should be after n_act "
                }
            ]
        },
        {
            "name": "lv_ll_is_empty",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the linked list is empty; false: not empty "
            },
            "json_type": "function",
            "docstring": "Check if a linked list is empty true: the linked list is empty; false: not empty ",
            "args": [
                {
                    "name": "ll_p",
                    "type": {
                        "type": {
                            "name": "lv_ll_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a linked list "
                }
            ]
        },
        {
            "name": "lv_timer_handler",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_timer_handler_run_in_period",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the time after which it must be called again "
            },
            "json_type": "function",
            "docstring": "Call it in the super-loop of main() or threads. It will run lv_timer_handler() with a given period in ms. You can use it with sleep or delay in OS environment. This function is used to simplify the porting. the time after which it must be called again ",
            "args": [
                {
                    "name": "period",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the period for running lv_timer_handler() "
                }
            ]
        },
        {
            "name": "lv_timer_periodic_handler",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Call it in the super-loop of main() or threads. It will automatically call lv_timer_handler() at the right time. This function is used to simplify the porting. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_timer_handler_set_resume_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the resume callback to the timer handler ",
            "args": [
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_timer_handler_resume_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the function to call when timer handler is resumed "
                },
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a resume data "
                }
            ]
        },
        {
            "name": "lv_timer_create_basic",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created timer "
            },
            "json_type": "function",
            "docstring": "Create an \"empty\" timer. It needs to be initialized with at least lv_timer_set_cb and lv_timer_set_period  pointer to the created timer ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_timer_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new timer "
            },
            "json_type": "function",
            "docstring": "Create a new lv_timer pointer to the new timer ",
            "args": [
                {
                    "name": "timer_xcb",
                    "type": {
                        "name": "lv_timer_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a callback to call periodically. (the 'x' in the argument name indicates that it's not a fully generic function because it not follows the func_name(object, callback, ...) convention) "
                },
                {
                    "name": "period",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "call period in ms unit "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom parameter "
                }
            ]
        },
        {
            "name": "lv_timer_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete a lv_timer ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_timer "
                }
            ]
        },
        {
            "name": "lv_timer_pause",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Pause a timer. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_timer "
                }
            ]
        },
        {
            "name": "lv_timer_resume",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Resume a timer. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_timer "
                }
            ]
        },
        {
            "name": "lv_timer_set_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the callback to the timer (the function to call periodically) ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a timer "
                },
                {
                    "name": "timer_cb",
                    "type": {
                        "name": "lv_timer_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the function to call periodically "
                }
            ]
        },
        {
            "name": "lv_timer_set_period",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set new period for a lv_timer ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer "
                },
                {
                    "name": "period",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new period "
                }
            ]
        },
        {
            "name": "lv_timer_ready",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make a lv_timer ready. It will not wait its period. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer. "
                }
            ]
        },
        {
            "name": "lv_timer_set_repeat_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of times a timer will repeat. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer. "
                },
                {
                    "name": "repeat_count",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "-1 : infinity; 0 : stop ; n>0: residual times "
                }
            ]
        },
        {
            "name": "lv_timer_set_auto_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set whether a lv_timer will be deleted automatically when it is called repeat_count times. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer. "
                },
                {
                    "name": "auto_delete",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: auto delete; false: timer will be paused when it is called repeat_count times. "
                }
            ]
        },
        {
            "name": "lv_timer_set_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set custom parameter to the lv_timer. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom parameter "
                }
            ]
        },
        {
            "name": "lv_timer_reset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Reset a lv_timer. It will be called the previously set period milliseconds later. ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer. "
                }
            ]
        },
        {
            "name": "lv_timer_enable",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable or disable the whole lv_timer handling ",
            "args": [
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: lv_timer handling is running, false: lv_timer handling is suspended "
                }
            ]
        },
        {
            "name": "lv_timer_get_idle",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the lv_timer idle in percentage "
            },
            "json_type": "function",
            "docstring": "Get idle percentage the lv_timer idle in percentage ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_timer_get_time_until_next",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the time remaining in ms "
            },
            "json_type": "function",
            "docstring": "Get the time remaining until the next timer will run the time remaining in ms ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_timer_get_next",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the next timer or NULL if there is no more timer "
            },
            "json_type": "function",
            "docstring": "Iterate through the timers the next timer or NULL if there is no more timer ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "NULL to start iteration or the previous return value to get the next timer "
                }
            ]
        },
        {
            "name": "lv_timer_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the user_data "
            },
            "json_type": "function",
            "docstring": "Get the user_data passed when the timer was created pointer to the user_data ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the lv_timer "
                }
            ]
        },
        {
            "name": "lv_timer_get_paused",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: timer is paused; false: timer is running "
            },
            "json_type": "function",
            "docstring": "Get the pause state of a timer true: timer is paused; false: timer is running ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_timer "
                }
            ]
        },
        {
            "name": "lv_trigo_sin",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "angle",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_trigo_cos",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "angle",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_cubic_bezier",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value calculated "
            },
            "json_type": "function",
            "docstring": "Calculate the y value of cubic-bezier(x1, y1, x2, y2) function as specified x. the value calculated ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "x1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "x of control point 1 in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "y1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "y of control point 1 in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "x2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "x of control point 2 in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "y2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "y of control point 2 in range of [0..LV_BEZIER_VAL_MAX] "
                }
            ]
        },
        {
            "name": "lv_bezier3",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX] "
            },
            "json_type": "function",
            "docstring": "Calculate a value of a Cubic Bezier function. the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX] ",
            "args": [
                {
                    "name": "t",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "u0",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "must be 0 "
                },
                {
                    "name": "u1",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "control value 1 values in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "u2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "control value 2 in range of [0..LV_BEZIER_VAL_MAX] "
                },
                {
                    "name": "u3",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "must be LV_BEZIER_VAL_MAX "
                }
            ]
        },
        {
            "name": "lv_atan2",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the angle in degree calculated from the given parameters in range of [0..360] "
            },
            "json_type": "function",
            "docstring": "Calculate the atan2 of a vector. the angle in degree calculated from the given parameters in range of [0..360] ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_sqrt",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "q",
                    "type": {
                        "type": {
                            "name": "lv_sqrt_res_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "mask",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_sqrt32",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Alternative (fast, approximate) implementation for getting the square root of an integer. ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "integer which square root should be calculated "
                }
            ]
        },
        {
            "name": "lv_sqr",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "square "
            },
            "json_type": "function",
            "docstring": "Calculate the square of an integer (input range is 0..32767). square ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "input "
                }
            ]
        },
        {
            "name": "lv_pow",
            "type": {
                "type": {
                    "name": "int64_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "base raised to the power exponent "
            },
            "json_type": "function",
            "docstring": "Calculate the integer exponents. base raised to the power exponent ",
            "args": [
                {
                    "name": "base",
                    "type": {
                        "name": "int64_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "exp",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_map",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the mapped number "
            },
            "json_type": "function",
            "docstring": "Get the mapped of a number given an input and output range the mapped number ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "integer which mapped value should be calculated "
                },
                {
                    "name": "min_in",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "min input range "
                },
                {
                    "name": "max_in",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "max input range "
                },
                {
                    "name": "min_out",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "max output range "
                },
                {
                    "name": "max_out",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "max output range "
                }
            ]
        },
        {
            "name": "lv_rand_set_seed",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the seed of the pseudo random number generator ",
            "args": [
                {
                    "name": "seed",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a number to initialize the random generator "
                }
            ]
        },
        {
            "name": "lv_rand",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return the random number. min <= return_value <= max "
            },
            "json_type": "function",
            "docstring": "Get a pseudo random number in the given range return the random number. min <= return_value <= max ",
            "args": [
                {
                    "name": "min",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the minimum value "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the maximum value "
                }
            ]
        },
        {
            "name": "lv_array_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Init an array. ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable to initialize "
                },
                {
                    "name": "capacity",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the initial capacity of the array "
                },
                {
                    "name": "element_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the size of an element in bytes "
                }
            ]
        },
        {
            "name": "lv_array_resize",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Resize the array to the given capacity. if the new capacity is smaller than the current size, the array will be truncated. ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "new_capacity",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new capacity of the array "
                }
            ]
        },
        {
            "name": "lv_array_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinit the array, and free the allocated memory ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable to deinitialize "
                }
            ]
        },
        {
            "name": "lv_array_size",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of elements stored in the array "
            },
            "json_type": "function",
            "docstring": "Return how many elements are stored in the array. the number of elements stored in the array ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_capacity",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the capacity of the array "
            },
            "json_type": "function",
            "docstring": "Return the capacity of the array, i.e. how many elements can be stored. the capacity of the array ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_is_empty",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: array is empty; false: array is not empty "
            },
            "json_type": "function",
            "docstring": "Return if the array is empty true: array is empty; false: array is not empty ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_is_full",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: array is full; false: array is not full "
            },
            "json_type": "function",
            "docstring": "Return if the array is full true: array is full; false: array is not full ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_copy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy an array to another. this will create a new array with the same capacity and size as the source array. ",
            "args": [
                {
                    "name": "target",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable to copy to "
                },
                {
                    "name": "source",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable to copy from "
                }
            ]
        },
        {
            "name": "lv_array_clear",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove all elements in array. ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_shrink",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Shrink the memory capacity of array if necessary. ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_remove",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success, otherwise: error "
            },
            "json_type": "function",
            "docstring": "Remove the element at the specified position in the array. LV_RESULT_OK: success, otherwise: error ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the element to remove "
                }
            ]
        },
        {
            "name": "lv_array_erase",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success, otherwise: error "
            },
            "json_type": "function",
            "docstring": "Remove from the array either a single element or a range of elements ([start, end)). This effectively reduces the container size by the number of elements removed.  When start equals to end, the function has no effect.  LV_RESULT_OK: success, otherwise: error ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the first element to be removed "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the first element that is not to be removed "
                }
            ]
        },
        {
            "name": "lv_array_concat",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success, otherwise: error "
            },
            "json_type": "function",
            "docstring": "Concatenate two arrays. Adds new elements to the end of the array. The destination array is automatically expanded as necessary.  LV_RESULT_OK: success, otherwise: error ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "other",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the array to concatenate "
                }
            ]
        },
        {
            "name": "lv_array_push_back",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success, otherwise: error "
            },
            "json_type": "function",
            "docstring": "Push back element. Adds a new element to the end of the array. If the array capacity is not enough for the new element, the array will be resized automatically. If the element is NULL, it will be added as an empty element.  LV_RESULT_OK: success, otherwise: error ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "element",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the element to add. NULL to push an empty element. "
                }
            ]
        },
        {
            "name": "lv_array_assign",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: success; false: error "
            },
            "json_type": "function",
            "docstring": "Assigns one content to the array, replacing its current content. true: success; false: error ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the element to replace "
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the elements to add "
                }
            ]
        },
        {
            "name": "lv_array_at",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to the requested element, NULL if index is out of range "
            },
            "json_type": "function",
            "docstring": "Returns a pointer to the element at position n in the array. a pointer to the requested element, NULL if index is out of range ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the element to return "
                }
            ]
        },
        {
            "name": "lv_array_front",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to the first element in the array "
            },
            "json_type": "function",
            "docstring": "Returns a pointer to the first element in the array. a pointer to the first element in the array ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_array_back",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Returns a pointer to the last element in the array. ",
            "args": [
                {
                    "name": "array",
                    "type": {
                        "type": {
                            "name": "lv_array_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_array_t variable "
                }
            ]
        },
        {
            "name": "lv_async_call",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Call an asynchronous function the next time lv_timer_handler() is run. This function is likely to return before the call actually happens! ",
            "args": [
                {
                    "name": "async_xcb",
                    "type": {
                        "name": "lv_async_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a callback which is the task itself. (the 'x' in the argument name indicates that it's not a fully generic function because it not follows the func_name(object, callback, ...) convention) "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom parameter "
                }
            ]
        },
        {
            "name": "lv_async_call_cancel",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Cancel an asynchronous function call ",
            "args": [
                {
                    "name": "async_xcb",
                    "type": {
                        "name": "lv_async_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a callback which is the task itself. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom parameter "
                }
            ]
        },
        {
            "name": "lv_anim_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an animation variable. E.g.: lv_anim_t a; lv_anim_init(&a); lv_anim_set_...(&a); lv_anim_start(&a); ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_anim_t variable to initialize "
                }
            ]
        },
        {
            "name": "lv_anim_set_var",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a variable to animate ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "var",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a variable to animate "
                }
            ]
        },
        {
            "name": "lv_anim_set_exec_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function to animate var ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_exec_xcb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to execute during animation LVGL's built-in functions can be used. E.g. lv_obj_set_x "
                }
            ]
        },
        {
            "name": "lv_anim_set_duration",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the duration of an animation ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "duration of the animation in milliseconds "
                }
            ]
        },
        {
            "name": "lv_anim_set_time",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Legacy lv_anim_set_time API will be removed soon, use lv_anim_set_duration instead. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_anim_set_delay",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a delay before starting the animation ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay before the animation in milliseconds "
                }
            ]
        },
        {
            "name": "lv_anim_set_values",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start and end values of an animation ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start value "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end value "
                }
            ]
        },
        {
            "name": "lv_anim_set_custom_exec_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Similar to lv_anim_set_exec_cb but lv_anim_custom_exec_cb_t receives lv_anim_t * as its first parameter instead of void * . This function might be used when LVGL is bound to other languages because it's more consistent to have lv_anim_t * as first parameter. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_custom_exec_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to execute. "
                }
            ]
        },
        {
            "name": "lv_anim_set_path_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the path (curve) of the animation. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "path_cb",
                    "type": {
                        "name": "lv_anim_path_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to set the current value of the animation. "
                }
            ]
        },
        {
            "name": "lv_anim_set_start_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function call when the animation really starts (considering delay ) ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "start_cb",
                    "type": {
                        "name": "lv_anim_start_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function call when the animation starts "
                }
            ]
        },
        {
            "name": "lv_anim_set_get_value_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function to use the current value of the variable and make start and end value relative to the returned current value. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "get_value_cb",
                    "type": {
                        "name": "lv_anim_get_value_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function call when the animation starts "
                }
            ]
        },
        {
            "name": "lv_anim_set_completed_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function call when the animation is completed ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "completed_cb",
                    "type": {
                        "name": "lv_anim_completed_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function call when the animation is fully completed "
                }
            ]
        },
        {
            "name": "lv_anim_set_deleted_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function call when the animation is deleted. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "deleted_cb",
                    "type": {
                        "name": "lv_anim_deleted_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function call when the animation is deleted "
                }
            ]
        },
        {
            "name": "lv_anim_set_playback_duration",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the animation to play back to when the forward direction is ready ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "duration of playback animation in milliseconds. 0: disable playback "
                }
            ]
        },
        {
            "name": "lv_anim_set_playback_time",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Legacy lv_anim_set_playback_time API will be removed soon, use lv_anim_set_playback_duration instead. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_anim_set_playback_delay",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the animation to play back to when the forward direction is ready ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay in milliseconds before starting the playback animation. "
                }
            ]
        },
        {
            "name": "lv_anim_set_repeat_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the animation repeat itself. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "repeat count or LV_ANIM_REPEAT_INFINITE for infinite repetition. 0: to disable repetition. "
                }
            ]
        },
        {
            "name": "lv_anim_set_repeat_delay",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a delay before repeating the animation. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay in milliseconds before repeating the animation. "
                }
            ]
        },
        {
            "name": "lv_anim_set_early_apply",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a whether the animation's should be applied immediately or only when the delay expired. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: apply the start value immediately in lv_anim_start ; false: apply the start value only when delay ms is elapsed and the animations really starts "
                }
            ]
        },
        {
            "name": "lv_anim_set_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the custom user data field of the animation. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new user_data. "
                }
            ]
        },
        {
            "name": "lv_anim_set_bezier3_param",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set parameter for cubic bezier path ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                },
                {
                    "name": "x1",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "first control point X "
                },
                {
                    "name": "y1",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "first control point Y "
                },
                {
                    "name": "x2",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "second control point X "
                },
                {
                    "name": "y2",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "second control point Y "
                }
            ]
        },
        {
            "name": "lv_anim_start",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created animation (different from the a parameter) "
            },
            "json_type": "function",
            "docstring": "Create an animation pointer to the created animation (different from the a parameter) ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an initialized 'anim_t' variable. Not required after call. "
                }
            ]
        },
        {
            "name": "lv_anim_get_delay",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "delay before the animation in milliseconds "
            },
            "json_type": "function",
            "docstring": "Get a delay before starting the animation delay before the animation in milliseconds ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                }
            ]
        },
        {
            "name": "lv_anim_get_playtime",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the play time in milliseconds. "
            },
            "json_type": "function",
            "docstring": "Get the time used to play the animation. the play time in milliseconds. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation. "
                }
            ]
        },
        {
            "name": "lv_anim_get_time",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the duration of the animation in milliseconds "
            },
            "json_type": "function",
            "docstring": "Get the duration of an animation the duration of the animation in milliseconds ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                }
            ]
        },
        {
            "name": "lv_anim_get_repeat_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the repeat count or LV_ANIM_REPEAT_INFINITE for infinite repetition. 0: disabled repetition. "
            },
            "json_type": "function",
            "docstring": "Get the repeat count of the animation. the repeat count or LV_ANIM_REPEAT_INFINITE for infinite repetition. 0: disabled repetition. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                }
            ]
        },
        {
            "name": "lv_anim_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the pointer to the custom user_data of the animation "
            },
            "json_type": "function",
            "docstring": "Get the user_data field of the animation the pointer to the custom user_data of the animation ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized lv_anim_t variable "
                }
            ]
        },
        {
            "name": "lv_anim_delete",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: at least 1 animation is deleted, false: no animation is deleted "
            },
            "json_type": "function",
            "docstring": "Delete animation(s) of a variable with a given animator function true: at least 1 animation is deleted, false: no animation is deleted ",
            "args": [
                {
                    "name": "var",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to variable "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_exec_xcb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function pointer which is animating 'var', or NULL to ignore it and delete all the animations of 'var "
                }
            ]
        },
        {
            "name": "lv_anim_delete_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete all the animations ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_anim_get",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the animation. "
            },
            "json_type": "function",
            "docstring": "Get the animation of a variable and its exec_cb . pointer to the animation. ",
            "args": [
                {
                    "name": "var",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to variable "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_exec_xcb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function pointer which is animating 'var', or NULL to return first matching 'var' "
                }
            ]
        },
        {
            "name": "lv_anim_get_timer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the animation refresher timer. "
            },
            "json_type": "function",
            "docstring": "Get global animation refresher timer. pointer to the animation refresher timer. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_anim_custom_delete",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: at least 1 animation is deleted, false: no animation is deleted "
            },
            "json_type": "function",
            "docstring": "Delete an animation by getting the animated variable from a . Only animations with exec_cb will be deleted. This function exists because it's logical that all anim. functions receives an lv_anim_t as their first parameter. It's not practical in C but might make the API more consequent and makes easier to generate bindings. true: at least 1 animation is deleted, false: no animation is deleted ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation. "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_custom_exec_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function pointer which is animating 'var', or NULL to ignore it and delete all the animations of 'var "
                }
            ]
        },
        {
            "name": "lv_anim_custom_get",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the animation. "
            },
            "json_type": "function",
            "docstring": "Get the animation of a variable and its exec_cb . This function exists because it's logical that all anim. functions receives an lv_anim_t as their first parameter. It's not practical in C but might make the API more consequent and makes easier to generate bindings. pointer to the animation. ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation. "
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_custom_exec_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function pointer which is animating 'var', or NULL to return first matching 'var' "
                }
            ]
        },
        {
            "name": "lv_anim_count_running",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of running animations "
            },
            "json_type": "function",
            "docstring": "Get the number of currently running animations the number of running animations ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_anim_speed",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a special value which can be used as an animation time "
            },
            "json_type": "function",
            "docstring": "Store the speed as a special value which can be used as time in animations. It will be converted to time internally based on the start and end values a special value which can be used as an animation time ",
            "args": [
                {
                    "name": "speed",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the speed of the animation in with unit / sec resolution in 0..10k range "
                }
            ]
        },
        {
            "name": "lv_anim_speed_clamped",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a special value in where all three values are stored and can be used as an animation time "
            },
            "json_type": "function",
            "docstring": "Store the speed as a special value which can be used as time in animations. It will be converted to time internally based on the start and end values a special value in where all three values are stored and can be used as an animation time  internally speed is stored as 10 unit/sec  internally min/max_time are stored with 10 ms unit ",
            "args": [
                {
                    "name": "speed",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the speed of the animation in as unit / sec resolution in 0..10k range "
                },
                {
                    "name": "min_time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the minimum time in 0..10k range "
                },
                {
                    "name": "max_time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the maximum time in 0..10k range "
                }
            ]
        },
        {
            "name": "lv_anim_speed_to_time",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the time of the animation in milliseconds "
            },
            "json_type": "function",
            "docstring": "Calculate the time of an animation based on its speed, start and end values. the time of the animation in milliseconds ",
            "args": [
                {
                    "name": "speed",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the speed of the animation "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start value "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end value "
                }
            ]
        },
        {
            "name": "lv_anim_refr_now",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Manually refresh the state of the animations. Useful to make the animations running in a blocking process where lv_timer_handler can't run for a while. Shouldn't be used directly because it is called in :ref:`lv_refr_now()` . ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_anim_path_linear",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation applying linear characteristic the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_ease_in",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation slowing down the start phase the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_ease_out",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation slowing down the end phase the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_ease_in_out",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation applying an \"S\" characteristic (cosine) the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_overshoot",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation with overshoot at the end the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_bounce",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation with 3 bounces the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_step",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "Calculate the current value of an animation applying step characteristic. (Set end value on the end of the animation) the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_path_custom_bezier3",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value to set "
            },
            "json_type": "function",
            "docstring": "A custom cubic bezier animation path, need to specify cubic-parameters in a->parameter.bezier3 the current value to set ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_timeline_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the animation timeline. "
            },
            "json_type": "function",
            "docstring": "Create an animation timeline. pointer to the animation timeline. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_anim_timeline_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_add",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add animation to the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                },
                {
                    "name": "start_time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the time the animation started on the timeline, note that start_time will override the value of delay. "
                },
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_start",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "total time spent in animation timeline. "
            },
            "json_type": "function",
            "docstring": "Start the animation timeline. total time spent in animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_pause",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Pause the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_set_reverse",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the playback direction of the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                },
                {
                    "name": "reverse",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "whether to play in reverse. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_set_repeat_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the animation timeline repeat itself. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                },
                {
                    "name": "cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "repeat count or LV_ANIM_REPEAT_INFINITE for infinite repetition. 0: to disable repetition. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_set_repeat_delay",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a delay before repeating the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay in milliseconds before repeating the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_set_progress",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the progress of the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                },
                {
                    "name": "progress",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "set value 0~65535 to map 0~100% animation progress. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_get_playtime",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "total time spent in animation timeline. "
            },
            "json_type": "function",
            "docstring": "Get the time used to play the animation timeline. total time spent in animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_get_reverse",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return true if it is reverse playback. "
            },
            "json_type": "function",
            "docstring": "Get whether the animation timeline is played in reverse. return true if it is reverse playback. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_get_progress",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return value 0~65535 to map 0~100% animation progress. "
            },
            "json_type": "function",
            "docstring": "Get the progress of the animation timeline. return value 0~65535 to map 0~100% animation progress. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_get_repeat_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get repeat count of the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_anim_timeline_get_repeat_delay",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get repeat delay of the animation timeline. ",
            "args": [
                {
                    "name": "at",
                    "type": {
                        "type": {
                            "name": "lv_anim_timeline_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation timeline. "
                }
            ]
        },
        {
            "name": "lv_rb_init",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "compare",
                    "type": {
                        "name": "lv_rb_compare_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_insert",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_find",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_remove_node",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_remove",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_drop_node",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_drop",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_minimum",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_maximum",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_minimum_from",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_maximum_from",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_rb_node_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "lv_rb_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_rb_destroy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "tree",
                    "type": {
                        "type": {
                            "name": "lv_rb_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_area_set",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an area ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                },
                {
                    "name": "x1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "left coordinate of the area "
                },
                {
                    "name": "y1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "top coordinate of the area "
                },
                {
                    "name": "x2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "right coordinate of the area "
                },
                {
                    "name": "y2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "bottom coordinate of the area "
                }
            ]
        },
        {
            "name": "lv_area_copy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy an area ",
            "args": [
                {
                    "name": "dest",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the destination area "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the source area "
                }
            ]
        },
        {
            "name": "lv_area_get_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width of the area (if x1 == x2 -> width = 1) "
            },
            "json_type": "function",
            "docstring": "Get the width of an area the width of the area (if x1 == x2 -> width = 1) ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                }
            ]
        },
        {
            "name": "lv_area_get_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the height of the area (if y1 == y2 -> height = 1) "
            },
            "json_type": "function",
            "docstring": "Get the height of an area the height of the area (if y1 == y2 -> height = 1) ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                }
            ]
        },
        {
            "name": "lv_area_set_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the width of an area ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new width of the area (w == 1 makes x1 == x2) "
                }
            ]
        },
        {
            "name": "lv_area_set_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the height of an area ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new height of the area (h == 1 makes y1 == y2) "
                }
            ]
        },
        {
            "name": "lv_area_get_size",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "size of area "
            },
            "json_type": "function",
            "docstring": "Return with area of an area (x * y) size of area ",
            "args": [
                {
                    "name": "area_p",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area "
                }
            ]
        },
        {
            "name": "lv_area_increase",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "w_extra",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "h_extra",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_area_move",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_area_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Align an area to another ",
            "args": [
                {
                    "name": "base",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an area where the other will be aligned "
                },
                {
                    "name": "to_align",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to align "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ALIGN_... "
                },
                {
                    "name": "ofs_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X offset "
                },
                {
                    "name": "ofs_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y offset "
                }
            ]
        },
        {
            "name": "lv_point_transform",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Transform a point ",
            "args": [
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a point "
                },
                {
                    "name": "angle",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "angle with 0.1 resolutions (123 means 12.3\u00b0) "
                },
                {
                    "name": "scale_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "horizontal zoom, 256 means 100% "
                },
                {
                    "name": "scale_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "vertical zoom, 256 means 100% "
                },
                {
                    "name": "pivot",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the pivot point of the transformation "
                },
                {
                    "name": "zoom_first",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: zoom first and rotate after that; else: opposite order "
                }
            ]
        },
        {
            "name": "lv_point_array_transform",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Transform an array of points ",
            "args": [
                {
                    "name": "points",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array of points "
                },
                {
                    "name": "count",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of points in the array "
                },
                {
                    "name": "angle",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "angle with 0.1 resolutions (123 means 12.3\u00b0) "
                },
                {
                    "name": "scale_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "horizontal zoom, 256 means 100% "
                },
                {
                    "name": "scale_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "vertical zoom, 256 means 100% "
                },
                {
                    "name": "pivot",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the pivot point of the transformation "
                },
                {
                    "name": "zoom_first",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: zoom first and rotate after that; else: opposite order "
                }
            ]
        },
        {
            "name": "lv_point_from_precise",
            "type": {
                "type": {
                    "name": "lv_point_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "lv_point_precise_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_point_to_precise",
            "type": {
                "type": {
                    "name": "lv_point_precise_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_point_set",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_point_precise_set",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "lv_point_precise_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_point_swap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p1",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "p2",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_point_precise_swap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p1",
                    "type": {
                        "type": {
                            "name": "lv_point_precise_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "p2",
                    "type": {
                        "type": {
                            "name": "lv_point_precise_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_pct",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a coordinate that stores the percentage "
            },
            "json_type": "function",
            "docstring": "Convert a percentage value to int32_t . Percentage values are stored in special range a coordinate that stores the percentage ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the percentage (0..1000) "
                }
            ]
        },
        {
            "name": "lv_pct_to_px",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "v",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "base",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_color_format_get_bpp",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the pixel size in bits "
            },
            "json_type": "function",
            "docstring": "Get the pixel size of a color format in bits, bpp the pixel size in bits  :ref:`LV_COLOR_FORMAT_GET_BPP` ",
            "args": [
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color format ( LV_COLOR_FORMAT_... ) "
                }
            ]
        },
        {
            "name": "lv_color_format_get_size",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the pixel size in bytes "
            },
            "json_type": "function",
            "docstring": "Get the pixel size of a color format in bytes the pixel size in bytes  :ref:`LV_COLOR_FORMAT_GET_SIZE` ",
            "args": [
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color format ( LV_COLOR_FORMAT_... ) "
                }
            ]
        },
        {
            "name": "lv_color_format_has_alpha",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: has alpha channel; false: doesn't have alpha channel "
            },
            "json_type": "function",
            "docstring": "Check if a color format has alpha channel or not true: has alpha channel; false: doesn't have alpha channel ",
            "args": [
                {
                    "name": "src_cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color format ( LV_COLOR_FORMAT_... ) "
                }
            ]
        },
        {
            "name": "lv_color_to_32",
            "type": {
                "type": {
                    "name": "lv_color32_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the ARGB8888 color "
            },
            "json_type": "function",
            "docstring": "Create an ARGB8888 color from RGB888 + alpha the ARGB8888 color ",
            "args": [
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an RGB888 color "
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the alpha value "
                }
            ]
        },
        {
            "name": "lv_color_to_int",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "c as an integer "
            },
            "json_type": "function",
            "docstring": "Convert an RGB888 color to an integer c as an integer ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an RGB888 color "
                }
            ]
        },
        {
            "name": "lv_color_eq",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: equal "
            },
            "json_type": "function",
            "docstring": "Check if two RGB888 color are equal true: equal ",
            "args": [
                {
                    "name": "c1",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the first color "
                },
                {
                    "name": "c2",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the second color "
                }
            ]
        },
        {
            "name": "lv_color32_eq",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: equal "
            },
            "json_type": "function",
            "docstring": "Check if two ARGB8888 color are equal true: equal ",
            "args": [
                {
                    "name": "c1",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the first color "
                },
                {
                    "name": "c2",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the second color "
                }
            ]
        },
        {
            "name": "lv_color_hex",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Create a color from 0x000000..0xffffff input the color ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the hex input "
                }
            ]
        },
        {
            "name": "lv_color_make",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Create an RGB888 color the color ",
            "args": [
                {
                    "name": "r",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the red channel (0..255) "
                },
                {
                    "name": "g",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the green channel (0..255) "
                },
                {
                    "name": "b",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the blue channel (0..255) "
                }
            ]
        },
        {
            "name": "lv_color32_make",
            "type": {
                "type": {
                    "name": "lv_color32_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Create an ARGB8888 color the color ",
            "args": [
                {
                    "name": "r",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the red channel (0..255) "
                },
                {
                    "name": "g",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the green channel (0..255) "
                },
                {
                    "name": "b",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the blue channel (0..255) "
                },
                {
                    "name": "a",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the alpha channel (0..255) "
                }
            ]
        },
        {
            "name": "lv_color_hex3",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Create a color from 0x000..0xfff input the color ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the hex input (e.g. 0x123 will be 0x112233) "
                }
            ]
        },
        {
            "name": "lv_color_to_u16",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "color as RGB565 on uin16_t "
            },
            "json_type": "function",
            "docstring": "Convert am RGB888 color to RGB565 stored in uint16_t  color as RGB565 on uin16_t ",
            "args": [
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "and RGB888 color "
                }
            ]
        },
        {
            "name": "lv_color_to_u32",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "color as XRGB8888 on uin32_t (the alpha channel is always set to 0xFF) "
            },
            "json_type": "function",
            "docstring": "Convert am RGB888 color to XRGB8888 stored in uint32_t  color as XRGB8888 on uin32_t (the alpha channel is always set to 0xFF) ",
            "args": [
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "and RGB888 color "
                }
            ]
        },
        {
            "name": "lv_color_16_16_mix",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "mix == 0: c2 mix == 255: c1 mix == 128: 0.5 x c1 + 0.5 x c2 "
            },
            "json_type": "function",
            "docstring": "Mix two RGB565 colors mix == 0: c2 mix == 255: c1 mix == 128: 0.5 x c1 + 0.5 x c2 ",
            "args": [
                {
                    "name": "c1",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the first color (typically the foreground color) "
                },
                {
                    "name": "c2",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the second color (typically the background color) "
                },
                {
                    "name": "mix",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0..255, or LV_OPA_0/10/20... "
                }
            ]
        },
        {
            "name": "lv_color_lighten",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the mixed color "
            },
            "json_type": "function",
            "docstring": "Mix white to a color the mixed color ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the base color "
                },
                {
                    "name": "lvl",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the intensity of white (0: no change, 255: fully white) "
                }
            ]
        },
        {
            "name": "lv_color_darken",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the mixed color "
            },
            "json_type": "function",
            "docstring": "Mix black to a color the mixed color ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the base color "
                },
                {
                    "name": "lvl",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the intensity of black (0: no change, 255: fully black) "
                }
            ]
        },
        {
            "name": "lv_color_hsv_to_rgb",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the given RGB color in RGB (with LV_COLOR_DEPTH depth) "
            },
            "json_type": "function",
            "docstring": "Convert a HSV color to RGB the given RGB color in RGB (with LV_COLOR_DEPTH depth) ",
            "args": [
                {
                    "name": "h",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "hue [0..359] "
                },
                {
                    "name": "s",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "saturation [0..100] "
                },
                {
                    "name": "v",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "value [0..100] "
                }
            ]
        },
        {
            "name": "lv_color_rgb_to_hsv",
            "type": {
                "type": {
                    "name": "lv_color_hsv_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the given RGB color in HSV "
            },
            "json_type": "function",
            "docstring": "Convert a 32-bit RGB color to HSV the given RGB color in HSV ",
            "args": [
                {
                    "name": "r8",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "8-bit red "
                },
                {
                    "name": "g8",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "8-bit green "
                },
                {
                    "name": "b8",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "8-bit blue "
                }
            ]
        },
        {
            "name": "lv_color_to_hsv",
            "type": {
                "type": {
                    "name": "lv_color_hsv_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the given color in HSV "
            },
            "json_type": "function",
            "docstring": "Convert a color to HSV the given color in HSV ",
            "args": [
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "color "
                }
            ]
        },
        {
            "name": "lv_color_white",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a white color "
            },
            "json_type": "function",
            "docstring": "A helper for white color a white color ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_color_black",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a black color "
            },
            "json_type": "function",
            "docstring": "A helper for black color a black color ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_color_premultiply",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "type": {
                            "name": "lv_color32_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_color16_premultiply",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "type": {
                            "name": "lv_color16_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "a",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_color_luminance",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the brightness [0..255] "
            },
            "json_type": "function",
            "docstring": "Get the luminance of a color: luminance = 0.3 R + 0.59 G + 0.11 B the brightness [0..255] ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color "
                }
            ]
        },
        {
            "name": "lv_color16_luminance",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the brightness [0..255] "
            },
            "json_type": "function",
            "docstring": "Get the luminance of a color16: luminance = 0.3 R + 0.59 G + 0.11 B the brightness [0..255] ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color16_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "a color "
                }
            ]
        },
        {
            "name": "lv_color24_luminance",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the brightness [0..255] "
            },
            "json_type": "function",
            "docstring": "Get the luminance of a color24: luminance = 0.3 R + 0.59 G + 0.11 B the brightness [0..255] ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color "
                }
            ]
        },
        {
            "name": "lv_color32_luminance",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the brightness [0..255] "
            },
            "json_type": "function",
            "docstring": "Get the luminance of a color32: luminance = 0.3 R + 0.59 G + 0.11 B the brightness [0..255] ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color "
                }
            ]
        },
        {
            "name": "lv_palette_main",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_palette_lighten",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "lvl",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_palette_darken",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "name": "lv_palette_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "lvl",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_color_mix",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the mixed color "
            },
            "json_type": "function",
            "docstring": "Mix two colors with a given ratio. the mixed color ",
            "args": [
                {
                    "name": "c1",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the first color to mix (usually the foreground) "
                },
                {
                    "name": "c2",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the second color to mix (usually the background) "
                },
                {
                    "name": "mix",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The ratio of the colors. 0: full c2 , 255: full c1 , 127: half c1 and half c2 "
                }
            ]
        },
        {
            "name": "lv_color_mix32",
            "type": {
                "type": {
                    "name": "lv_color32_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Use bg.alpha in the return value Use fg.alpha as mix ratio ",
            "args": [
                {
                    "name": "fg",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "bg",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_color_brightness",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "brightness in range [0..255] "
            },
            "json_type": "function",
            "docstring": "Get the brightness of a color brightness in range [0..255] ",
            "args": [
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a color "
                }
            ]
        },
        {
            "name": "lv_color_filter_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_color_filter_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_color_filter_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_init_with_default_handlers",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize the draw buffer with the default handlers. ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers to set "
                }
            ]
        },
        {
            "name": "lv_draw_buf_handlers_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize the draw buffer with given handlers. ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers to set "
                },
                {
                    "name": "buf_malloc_cb",
                    "type": {
                        "name": "lv_draw_buf_malloc_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to allocate memory for the buffer "
                },
                {
                    "name": "buf_free_cb",
                    "type": {
                        "name": "lv_draw_buf_free_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to free memory of the buffer "
                },
                {
                    "name": "align_pointer_cb",
                    "type": {
                        "name": "lv_draw_buf_align_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to align the buffer "
                },
                {
                    "name": "invalidate_cache_cb",
                    "type": {
                        "name": "lv_draw_buf_cache_operation_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to invalidate the cache of the buffer "
                },
                {
                    "name": "flush_cache_cb",
                    "type": {
                        "name": "lv_draw_buf_cache_operation_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to flush buffer "
                },
                {
                    "name": "width_to_stride_cb",
                    "type": {
                        "name": "lv_draw_buf_width_to_stride_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the callback to calculate the stride based on the width and color format "
                }
            ]
        },
        {
            "name": "lv_draw_buf_get_handlers",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_handlers_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the struct of handlers "
            },
            "json_type": "function",
            "docstring": "Get the struct which holds the callbacks for draw buf management. Custom callback can be set on the returned value pointer to the struct of handlers ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_buf_align",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the aligned buffer "
            },
            "json_type": "function",
            "docstring": "Align the address of a buffer. The buffer needs to be large enough for the real data after alignment the aligned buffer ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the data to align "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format of the buffer "
                }
            ]
        },
        {
            "name": "lv_draw_buf_align_ex",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the aligned buffer "
            },
            "json_type": "function",
            "docstring": "Align the address of a buffer with custom draw buffer handlers. The buffer needs to be large enough for the real data after alignment the aligned buffer ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the data to align "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format of the buffer "
                }
            ]
        },
        {
            "name": "lv_draw_buf_invalidate_cache",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Invalidate the cache of the buffer ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer needs to be invalidated "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to invalidate in the buffer, use NULL to invalidate the whole draw buffer address range "
                }
            ]
        },
        {
            "name": "lv_draw_buf_flush_cache",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Flush the cache of the buffer ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer needs to be flushed "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to flush in the buffer, use NULL to flush the whole draw buffer address range "
                }
            ]
        },
        {
            "name": "lv_draw_buf_width_to_stride",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the stride in bytes "
            },
            "json_type": "function",
            "docstring": "Calculate the stride in bytes based on a width and color format the stride in bytes ",
            "args": [
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the width in pixels "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format "
                }
            ]
        },
        {
            "name": "lv_draw_buf_width_to_stride_ex",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the stride in bytes "
            },
            "json_type": "function",
            "docstring": "Calculate the stride in bytes based on a width and color format the stride in bytes ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the width in pixels "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format "
                }
            ]
        },
        {
            "name": "lv_draw_buf_clear",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear an area on the buffer ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to draw buffer "
                },
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to clear, or NULL to clear the whole buffer "
                }
            ]
        },
        {
            "name": "lv_draw_buf_copy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy an area from a buffer to another dest_area and src_area should have the same width and height  dest and src should have same color format. Color converting is not supported fow now. ",
            "args": [
                {
                    "name": "dest",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the destination draw buffer "
                },
                {
                    "name": "dest_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to copy from the destination buffer, if NULL, use the whole buffer "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the source draw buffer "
                },
                {
                    "name": "src_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to copy from the destination buffer, if NULL, use the whole buffer "
                }
            ]
        },
        {
            "name": "lv_draw_buf_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Note: Eventually, lv_draw_buf_malloc/free will be kept as private. For now, we use create to distinguish with malloc. \n\nCreate an draw buf by allocating struct for lv_draw_buf_t and allocating a buffer for it that meets specified requirements.  ",
            "args": [
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer width in pixels "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer height in pixels "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format for image "
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the stride in bytes for image. Use 0 for automatic calculation based on w, cf, and global stride alignment configuration. "
                }
            ]
        },
        {
            "name": "lv_draw_buf_create_ex",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Note: Eventually, lv_draw_buf_malloc/free will be kept as private. For now, we use create to distinguish with malloc. \n\nCreate an draw buf by allocating struct for lv_draw_buf_t and allocating a buffer for it that meets specified requirements.  ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer width in pixels "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer height in pixels "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format for image "
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the stride in bytes for image. Use 0 for automatic calculation based on w, cf, and global stride alignment configuration. "
                }
            ]
        },
        {
            "name": "lv_draw_buf_dup",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the duplicated draw buf on success, NULL if failed "
            },
            "json_type": "function",
            "docstring": "Duplicate a draw buf with same image size, stride and color format. Copy the image data too. the duplicated draw buf on success, NULL if failed ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buf to duplicate "
                }
            ]
        },
        {
            "name": "lv_draw_buf_dup_ex",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the duplicated draw buf on success, NULL if failed "
            },
            "json_type": "function",
            "docstring": "Duplicate a draw buf with same image size, stride and color format. Copy the image data too. the duplicated draw buf on success, NULL if failed ",
            "args": [
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer handlers "
                },
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buf to duplicate "
                }
            ]
        },
        {
            "name": "lv_draw_buf_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return LV_RESULT_OK on success, LV_RESULT_INVALID otherwise "
            },
            "json_type": "function",
            "docstring": "Initialize a draw buf with the given buffer and parameters. Clear draw buffer flag to zero. return LV_RESULT_OK on success, LV_RESULT_INVALID otherwise ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buf to initialize "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer width in pixels "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer height in pixels "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format "
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the stride in bytes. Use 0 for automatic calculation "
                },
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the buffer used for drawing. Unaligned data will be aligned internally "
                },
                {
                    "name": "data_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the size of the buffer in bytes "
                }
            ]
        },
        {
            "name": "lv_draw_buf_reshape",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Keep using the existing memory, reshape the draw buffer to the given width and height. Return NULL if data_size is smaller than the required size. ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw buffer "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new color format, use 0 or LV_COLOR_FORMAT_UNKNOWN to keep using the original color format. "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new width in pixels "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new height in pixels "
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the stride in bytes for image. Use 0 for automatic calculation. "
                }
            ]
        },
        {
            "name": "lv_draw_buf_destroy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Destroy a draw buf by freeing the actual buffer if it's marked as LV_IMAGE_FLAGS_ALLOCATED in header. Then free the lv_draw_buf_t struct. ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw buffer to destroy "
                }
            ]
        },
        {
            "name": "lv_draw_buf_goto_xy",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Return pointer to the buffer at the given coordinates ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_adjust_stride",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success or LV_RESULT_INVALID: failed "
            },
            "json_type": "function",
            "docstring": "Adjust the stride of a draw buf in place. LV_RESULT_OK: success or LV_RESULT_INVALID: failed ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw buffer "
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new stride in bytes for image. Use LV_STRIDE_AUTO for automatic calculation. "
                }
            ]
        },
        {
            "name": "lv_draw_buf_premultiply",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: premultiply success "
            },
            "json_type": "function",
            "docstring": "Premultiply draw buffer color with alpha channel. If it's already premultiplied, return directly. Only color formats with alpha channel will be processed. \n\nLV_RESULT_OK: premultiply success  ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_has_flag",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_image_flags_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_set_flag",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_image_flags_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_clear_flag",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_image_flags_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_from_image",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "As of now, draw buf share same definition as :ref:`lv_image_dsc_t` . And is interchangeable with :ref:`lv_image_dsc_t` . ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_to_image",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_buf_set_palette",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the palette color of an indexed image. Valid only for LV_COLOR_FORMAT_I1/2/4/8 ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image descriptor "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the palette color to set: for LV_COLOR_FORMAT_I1 : 0..1 for LV_COLOR_FORMAT_I2 : 0..3 for LV_COLOR_FORMAT_I4 : 0..15 for LV_COLOR_FORMAT_I8 : 0..255 "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color to set in :ref:`lv_color32_t` format "
                }
            ]
        },
        {
            "name": "lv_image_buf_set_palette",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deprecated Use lv_draw_buf_set_palette instead. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "id",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "c",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_image_buf_free",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deprecated Use lv_draw_buffer_create/destroy instead. Free the data pointer and dsc struct of an image. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_utils_bsearch",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to a matching item, or NULL if none exists. "
            },
            "json_type": "function",
            "docstring": "Searches base[0] to base[n - 1] for an item that matches *key. \n\nThe function cmp must return negative if it's first argument (the search key) is less that it's second (a table entry), zero if equal, and positive if greater. Items in the array must be in ascending order.  a pointer to a matching item, or NULL if none exists.   ",
            "args": [
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to item being searched for "
                },
                {
                    "name": "base",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to first element to search "
                },
                {
                    "name": "n",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Number of elements "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Size of each element "
                },
                {
                    "name": "cmp",
                    "type": {
                        "name": "cmp",
                        "type": {
                            "type": {
                                "name": "int",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "pRef",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "pElement",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to comparison function (see unicode_list_compare() as a comparison function example) "
                }
            ]
        },
        {
            "name": "lv_draw_buf_save_to_file",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: error "
            },
            "json_type": "function",
            "docstring": "Save a draw buf to a file LV_RESULT_OK: success; LV_RESULT_INVALID: error ",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw buffer "
                },
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "path to the file to save "
                }
            ]
        },
        {
            "name": "lv_iter_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_iter_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The iterator object "
            },
            "json_type": "function",
            "docstring": "Create an iterator based on an instance, and then the next element of the iterator can be obtained through lv_iter_next, In order to obtain the next operation in a unified and abstract way. The iterator object ",
            "args": [
                {
                    "name": "instance",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The instance to be iterated "
                },
                {
                    "name": "elem_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The size of the element to be iterated in bytes "
                },
                {
                    "name": "context_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The size of the context to be passed to the next_cb in bytes "
                },
                {
                    "name": "next_cb",
                    "type": {
                        "name": "lv_iter_next_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The callback function to get the next element "
                }
            ]
        },
        {
            "name": "lv_iter_get_context",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the iter context "
            },
            "json_type": "function",
            "docstring": "Get the context of the iterator. You can use it to store some temporary variables associated with current iterator.. the iter context ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                }
            ]
        },
        {
            "name": "lv_iter_destroy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Destroy the iterator object, and release the context. Other resources allocated by the user are not released. The user needs to release it by itself. ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                }
            ]
        },
        {
            "name": "lv_iter_next",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: Get the next element successfully LV_RESULT_INVALID: The next element is invalid "
            },
            "json_type": "function",
            "docstring": "Get the next element of the iterator. LV_RESULT_OK: Get the next element successfully LV_RESULT_INVALID: The next element is invalid ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                },
                {
                    "name": "elem",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The pointer to store the next element "
                }
            ]
        },
        {
            "name": "lv_iter_make_peekable",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the iterator peekable, which means that the user can peek the next element without advancing the iterator. ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                },
                {
                    "name": "capacity",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The capacity of the peek buffer "
                }
            ]
        },
        {
            "name": "lv_iter_peek",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: Peek the next element successfully LV_RESULT_INVALID: The next element is invalid "
            },
            "json_type": "function",
            "docstring": "Peek the next element of the iterator without advancing the iterator. LV_RESULT_OK: Peek the next element successfully LV_RESULT_INVALID: The next element is invalid ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                },
                {
                    "name": "elem",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The pointer to store the next element "
                }
            ]
        },
        {
            "name": "lv_iter_peek_advance",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: Peek the next element successfully LV_RESULT_INVALID: The next element is invalid "
            },
            "json_type": "function",
            "docstring": "Only advance the iterator without getting the next element. LV_RESULT_OK: Peek the next element successfully LV_RESULT_INVALID: The next element is invalid ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                }
            ]
        },
        {
            "name": "lv_iter_peek_reset",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: Reset the peek buffer successfully LV_RESULT_INVALID: The peek buffer is invalid "
            },
            "json_type": "function",
            "docstring": "Reset the peek cursor to the next cursor. LV_RESULT_OK: Reset the peek buffer successfully LV_RESULT_INVALID: The peek buffer is invalid ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                }
            ]
        },
        {
            "name": "lv_iter_inspect",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Inspect the element of the iterator. The callback function will be called for each element of the iterator. ",
            "args": [
                {
                    "name": "iter",
                    "type": {
                        "type": {
                            "name": "lv_iter_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_iter_t object create before "
                },
                {
                    "name": "inspect_cb",
                    "type": {
                        "name": "lv_iter_inspect_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The callback function to inspect the element "
                }
            ]
        },
        {
            "name": "lv_thread_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Create a new thread LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "thread",
                    "type": {
                        "type": {
                            "name": "lv_thread_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a variable in which the thread will be stored "
                },
                {
                    "name": "prio",
                    "type": {
                        "name": "lv_thread_prio_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "priority of the thread "
                },
                {
                    "name": "callback",
                    "type": {
                        "name": "callback",
                        "type": {
                            "type": {
                                "name": "void",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "function of the thread "
                },
                {
                    "name": "stack_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "stack size in bytes "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "arbitrary data, will be available in the callback "
                }
            ]
        },
        {
            "name": "lv_thread_delete",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Delete a thread LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "thread",
                    "type": {
                        "type": {
                            "name": "lv_thread_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the thread to delete "
                }
            ]
        },
        {
            "name": "lv_mutex_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Create a mutex LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "mutex",
                    "type": {
                        "type": {
                            "name": "lv_mutex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a variable in which the thread will be stored "
                }
            ]
        },
        {
            "name": "lv_mutex_lock",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Lock a mutex LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "mutex",
                    "type": {
                        "type": {
                            "name": "lv_mutex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mutex to lock "
                }
            ]
        },
        {
            "name": "lv_mutex_lock_isr",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Lock a mutex from interrupt LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "mutex",
                    "type": {
                        "type": {
                            "name": "lv_mutex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mutex to lock "
                }
            ]
        },
        {
            "name": "lv_mutex_unlock",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Unlock a mutex LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "mutex",
                    "type": {
                        "type": {
                            "name": "lv_mutex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mutex to unlock "
                }
            ]
        },
        {
            "name": "lv_mutex_delete",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Delete a mutex LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "mutex",
                    "type": {
                        "type": {
                            "name": "lv_mutex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mutex to delete "
                }
            ]
        },
        {
            "name": "lv_thread_sync_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Create a thread synchronization object LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "sync",
                    "type": {
                        "type": {
                            "name": "lv_thread_sync_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a variable in which the sync will be stored "
                }
            ]
        },
        {
            "name": "lv_thread_sync_wait",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Wait for a \"signal\" on a sync object LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "sync",
                    "type": {
                        "type": {
                            "name": "lv_thread_sync_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a sync object "
                }
            ]
        },
        {
            "name": "lv_thread_sync_signal",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Send a wake-up signal to a sync object LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "sync",
                    "type": {
                        "type": {
                            "name": "lv_thread_sync_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a sync object "
                }
            ]
        },
        {
            "name": "lv_thread_sync_signal_isr",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Send a wake-up signal to a sync object from interrupt LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "sync",
                    "type": {
                        "type": {
                            "name": "lv_thread_sync_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a sync object "
                }
            ]
        },
        {
            "name": "lv_thread_sync_delete",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Delete a sync object LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": "sync",
                    "type": {
                        "type": {
                            "name": "lv_thread_sync_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a sync object to delete "
                }
            ]
        },
        {
            "name": "lv_lock",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Lock LVGL's general mutex. LVGL is not thread safe, so a mutex is used to avoid executing multiple LVGL functions at the same time from different threads. It shall be called when calling LVGL functions from threads different than lv_timer_handler's thread. It doesn't need to be called in LVGL events because they are called from lv_timer_handler(). It is called internally in lv_timer_handler(). ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_lock_isr",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: failure "
            },
            "json_type": "function",
            "docstring": "Same as :ref:`lv_lock()` but can be called from an interrupt. LV_RESULT_OK: success; LV_RESULT_INVALID: failure ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_unlock",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "The pair of :ref:`lv_lock()` and :ref:`lv_lock_isr()` . It unlocks LVGL general mutex. It is called internally in lv_timer_handler(). ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_size",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The size of the cache entry. "
            },
            "json_type": "function",
            "docstring": "Get the size of a cache entry. The size of the cache entry. ",
            "args": [
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "The size of the node in the cache. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_ref",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The reference count of the cache entry. "
            },
            "json_type": "function",
            "docstring": "Get the reference count of a cache entry. The reference count of the cache entry. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to get the reference count of. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_node_size",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The node size of the cache entry. "
            },
            "json_type": "function",
            "docstring": "Get the node size of a cache entry. Which is the same size with :ref:`lv_cache_entry_get_size()` 's node_size parameter. The node size of the cache entry. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to get the node size of. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_is_invalid",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "True: the cache entry is invalid. False: the cache entry is valid. "
            },
            "json_type": "function",
            "docstring": "Check if a cache entry is invalid. True: the cache entry is invalid. False: the cache entry is valid. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to check. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The pointer to the data of the cache entry. "
            },
            "json_type": "function",
            "docstring": "Get the data of a cache entry. The pointer to the data of the cache entry. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to get the data of. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_cache",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The pointer to the cache instance of the cache entry. "
            },
            "json_type": "function",
            "docstring": "Get the cache instance of a cache entry. The pointer to the cache instance of the cache entry. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to get the cache instance of. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_get_entry",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The pointer to the cache entry of the data. "
            },
            "json_type": "function",
            "docstring": "Get the cache entry of a data. The data should be allocated by the cache instance. The pointer to the cache entry of the data. ",
            "args": [
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The data to get the cache entry of. "
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "The size of the node in the cache. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_alloc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The pointer to the allocated cache entry. "
            },
            "json_type": "function",
            "docstring": "Allocate a cache entry. The pointer to the allocated cache entry. ",
            "args": [
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "The size of the node in the cache. "
                },
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache instance to allocate the cache entry from. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a cache entry. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to initialize. "
                },
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache instance to allocate the cache entry from. "
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "The size of the node in the cache. "
                }
            ]
        },
        {
            "name": "lv_cache_entry_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deallocate a cache entry. And the data of the cache entry will be freed. ",
            "args": [
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry to deallocate. "
                }
            ]
        },
        {
            "name": "lv_image_cache_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: initialization succeeded, LV_RESULT_INVALID: failed. "
            },
            "json_type": "function",
            "docstring": "Initialize image cache. LV_RESULT_OK: initialization succeeded, LV_RESULT_INVALID: failed. ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of the cache in bytes. "
                }
            ]
        },
        {
            "name": "lv_image_cache_resize",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Resize image cache. If set to 0, the cache will be disabled. ",
            "args": [
                {
                    "name": "new_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new size of the cache in bytes. "
                },
                {
                    "name": "evict_now",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: evict the images should be removed by the eviction policy, false: wait for the next cache cleanup. "
                }
            ]
        },
        {
            "name": "lv_image_cache_drop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Invalidate image cache. Use NULL to invalidate all images. ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source. "
                }
            ]
        },
        {
            "name": "lv_image_cache_is_enabled",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: enabled, false: disabled. "
            },
            "json_type": "function",
            "docstring": "Return true if the image cache is enabled. true: enabled, false: disabled. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_cache_iter_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_iter_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "an iterator to iterate over the image cache. "
            },
            "json_type": "function",
            "docstring": "Create an iterator to iterate over the image cache. an iterator to iterate over the image cache. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_cache_dump",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Dump the content of the image cache in a human-readable format with cache order. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_header_cache_init",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: initialization succeeded, LV_RESULT_INVALID: failed. "
            },
            "json_type": "function",
            "docstring": "Initialize image header cache. LV_RESULT_OK: initialization succeeded, LV_RESULT_INVALID: failed. ",
            "args": [
                {
                    "name": "count",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "initial size of the cache in count of image headers. "
                }
            ]
        },
        {
            "name": "lv_image_header_cache_resize",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Resize image header cache. If set to 0, the cache is disabled. ",
            "args": [
                {
                    "name": "count",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new max count of cached image headers. "
                },
                {
                    "name": "evict_now",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: evict the image headers should be removed by the eviction policy, false: wait for the next cache cleanup. "
                }
            ]
        },
        {
            "name": "lv_image_header_cache_drop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Invalidate image header cache. Use NULL to invalidate all image headers. It's also automatically called when an image is invalidated. ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source. "
                }
            ]
        },
        {
            "name": "lv_image_header_cache_is_enabled",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: enabled, false: disabled. "
            },
            "json_type": "function",
            "docstring": "Return true if the image header cache is enabled. true: enabled, false: disabled. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_header_cache_iter_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_iter_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "an iterator to iterate over the image header cache. "
            },
            "json_type": "function",
            "docstring": "Create an iterator to iterate over the image header cache. an iterator to iterate over the image header cache. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_header_cache_dump",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Dump the content of the image header cache in a human-readable format with cache order. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_cache_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns a pointer to the created cache object on success, NULL on error. "
            },
            "json_type": "function",
            "docstring": "Create a cache object with the given parameters. Returns a pointer to the created cache object on success, NULL on error. ",
            "args": [
                {
                    "name": "cache_class",
                    "type": {
                        "type": {
                            "name": "lv_cache_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The class of the cache. Currently only support one two builtin classes: lv_cache_class_lru_rb_count for LRU-based cache with count-based eviction policy. lv_cache_class_lru_rb_size for LRU-based cache with size-based eviction policy. "
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The node size is the size of the data stored in the cache.. "
                },
                {
                    "name": "max_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The max size is the maximum amount of memory or count that the cache can hold. lv_cache_class_lru_rb_count: max_size is the maximum count of nodes in the cache. lv_cache_class_lru_rb_size: max_size is the maximum size of the cache in bytes. "
                },
                {
                    "name": "ops",
                    "type": {
                        "name": "lv_cache_ops_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A set of operations that can be performed on the cache. See lv_cache_ops_t for details. "
                }
            ]
        },
        {
            "name": "lv_cache_destroy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Destroy a cache object. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to destroy. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_acquire",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns a pointer to the acquired cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. "
            },
            "json_type": "function",
            "docstring": "Acquire a cache entry with the given key. If entry not in cache, it will return NULL (not found). If the entry is found, it's priority will be changed by the cache's policy. And the lv_cache_entry_t::ref_cnt will be incremented. Returns a pointer to the acquired cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to acquire the entry. "
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The key of the entry to acquire. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the create callback. "
                }
            ]
        },
        {
            "name": "lv_cache_acquire_or_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns a pointer to the acquired or created cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. "
            },
            "json_type": "function",
            "docstring": "Acquire a cache entry with the given key. If the entry is not in the cache, it will create a new entry with the given key. If the entry is found, it's priority will be changed by the cache's policy. And the lv_cache_entry_t::ref_cnt will be incremented. If you want to use this API to simplify the code, you should provide a :ref:`lv_cache_ops_t::create_cb` that creates a new entry with the given key. This API is a combination of :ref:`lv_cache_acquire()` and :ref:`lv_cache_add()` . The effect is the same as calling :ref:`lv_cache_acquire()` and :ref:`lv_cache_add()` separately. And the internal impact on cache is also consistent with these two APIs. Returns a pointer to the acquired or created cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to acquire the entry. "
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The key of the entry to acquire or create. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the create callback. "
                }
            ]
        },
        {
            "name": "lv_cache_add",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns a pointer to the added cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. "
            },
            "json_type": "function",
            "docstring": "Add a new cache entry with the given key and data. If the cache is full, the cache's policy will be used to evict an entry. Returns a pointer to the added cache entry on success with lv_cache_entry_t::ref_cnt incremented, NULL on error. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to add the entry. "
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The key of the entry to add. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the create callback. "
                }
            ]
        },
        {
            "name": "lv_cache_release",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Release a cache entry. The lv_cache_entry_t::ref_cnt will be decremented. If the lv_cache_entry_t::ref_cnt is zero, it will issue an error. If the entry passed to this function is the last reference to the data and the entry is marked as invalid, the cache's policy will be used to evict the entry. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to release the entry. "
                },
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache entry pointer to release. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_reserve",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Reserve a certain amount of memory/count in the cache. This function is useful when you want to reserve a certain amount of memory/count in advance, for example, when you know that you will need it later. When the current cache size is max than the reserved size, the function will evict entries until the reserved size is reached. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to reserve. "
                },
                {
                    "name": "reserved_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The amount of memory/count to reserve. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_drop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Drop a cache entry with the given key. If the entry is not in the cache, nothing will happen to it. If the entry is found, it will be removed from the cache and its data will be freed when the last reference to it is released. The data will not be freed immediately but when the last reference to it is released. But this entry will not be found by :ref:`lv_cache_acquire()` . If you want cache a same key again, you should use :ref:`lv_cache_add()` or :ref:`lv_cache_acquire_or_create()` . ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to drop the entry. "
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The key of the entry to drop. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_drop_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Drop all cache entries. All entries will be removed from the cache and their data will be freed when the last reference to them is released. If some entries are still referenced by other objects, it will issue an error. And this case shouldn't happen in normal cases.. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to drop all entries. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_evict_one",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns true if an entry is evicted, false if no entry is evicted. "
            },
            "json_type": "function",
            "docstring": "Evict one entry from the cache. The eviction policy will be used to select the entry to evict. Returns true if an entry is evicted, false if no entry is evicted. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to evict an entry. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_set_max_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the maximum size of the cache. If the current cache size is greater than the new maximum size, the cache's policy will be used to evict entries until the new maximum size is reached. If set to 0, the cache will be disabled. But this behavior will happen only new entries are added to the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to set the maximum size. "
                },
                {
                    "name": "max_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The new maximum size of the cache. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_get_max_size",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns the maximum size of the cache. "
            },
            "json_type": "function",
            "docstring": "Get the maximum size of the cache. Returns the maximum size of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to get the maximum size. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_get_size",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns the current size of the cache. "
            },
            "json_type": "function",
            "docstring": "Get the current size of the cache. Returns the current size of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to get the current size. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_get_free_size",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns the free size of the cache. "
            },
            "json_type": "function",
            "docstring": "Get the free size of the cache. Returns the free size of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to get the free size. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer that will be passed to the free callback. "
                }
            ]
        },
        {
            "name": "lv_cache_is_enabled",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns true if the cache is enabled, false otherwise. "
            },
            "json_type": "function",
            "docstring": "Return true if the cache is enabled. Disabled cache means that when the max_size of the cache is 0. In this case, all cache operations will be no-op. Returns true if the cache is enabled, false otherwise. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to check if it's disabled. "
                }
            ]
        },
        {
            "name": "lv_cache_set_compare_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the compare callback of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to set the compare callback. "
                },
                {
                    "name": "compare_cb",
                    "type": {
                        "name": "lv_cache_compare_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The compare callback to set. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer. "
                }
            ]
        },
        {
            "name": "lv_cache_set_create_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the create callback of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to set the create callback. "
                },
                {
                    "name": "alloc_cb",
                    "type": {
                        "name": "lv_cache_create_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The create callback to set. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer. "
                }
            ]
        },
        {
            "name": "lv_cache_set_free_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the free callback of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to set the free callback. "
                },
                {
                    "name": "free_cb",
                    "type": {
                        "name": "lv_cache_free_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The free callback to set. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "A user data pointer. "
                }
            ]
        },
        {
            "name": "lv_cache_set_name",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Give a name for a cache object. Only the pointer of the string is saved. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to set the name. "
                },
                {
                    "name": "name",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The name of the cache. "
                }
            ]
        },
        {
            "name": "lv_cache_get_name",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns the name of the cache. "
            },
            "json_type": "function",
            "docstring": "Get the name of a cache object. Returns the name of the cache. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to get the name. "
                }
            ]
        },
        {
            "name": "lv_cache_iter_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_iter_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Returns a pointer to the created iterator on success, NULL on error. "
            },
            "json_type": "function",
            "docstring": "Create an iterator for the cache object. The iterator is used to iterate over all cache entries. Returns a pointer to the created iterator on success, NULL on error. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The cache object pointer to create the iterator. "
                }
            ]
        },
        {
            "name": "lv_font_get_glyph_bitmap",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the glyph's data. It can be a draw buffer for bitmap fonts or an image source for imgfonts. "
            },
            "json_type": "function",
            "docstring": "Return with the bitmap of a font. You must call :ref:`lv_font_get_glyph_dsc()` to get g_dsc ( :ref:`lv_font_glyph_dsc_t` ) before you can call this function.  pointer to the glyph's data. It can be a draw buffer for bitmap fonts or an image source for imgfonts. ",
            "args": [
                {
                    "name": "g_dsc",
                    "type": {
                        "type": {
                            "name": "lv_font_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the glyph descriptor including which font to use, which supply the glyph_index and the format. "
                },
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a draw buffer that can be used to store the bitmap of the glyph, it's OK not to use it. "
                }
            ]
        },
        {
            "name": "lv_font_get_glyph_dsc",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: descriptor is successfully loaded into dsc_out . false: the letter was not found, no data is loaded to dsc_out "
            },
            "json_type": "function",
            "docstring": "Get the descriptor of a glyph true: descriptor is successfully loaded into dsc_out . false: the letter was not found, no data is loaded to dsc_out ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to font "
                },
                {
                    "name": "dsc_out",
                    "type": {
                        "type": {
                            "name": "lv_font_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the result descriptor here "
                },
                {
                    "name": "letter",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a UNICODE letter code "
                },
                {
                    "name": "letter_next",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the next letter after letter . Used for kerning "
                }
            ]
        },
        {
            "name": "lv_font_glyph_release_draw_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Release the bitmap of a font. You must call :ref:`lv_font_get_glyph_dsc()` to get g_dsc ( :ref:`lv_font_glyph_dsc_t` ) before you can call this function. ",
            "args": [
                {
                    "name": "g_dsc",
                    "type": {
                        "type": {
                            "name": "lv_font_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the glyph descriptor including which font to use, which supply the glyph_index and the format. "
                }
            ]
        },
        {
            "name": "lv_font_get_glyph_width",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width of the glyph "
            },
            "json_type": "function",
            "docstring": "Get the width of a glyph with kerning the width of the glyph ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font "
                },
                {
                    "name": "letter",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a UNICODE letter "
                },
                {
                    "name": "letter_next",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the next letter after letter . Used for kerning "
                }
            ]
        },
        {
            "name": "lv_font_get_line_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the height of a font "
            },
            "json_type": "function",
            "docstring": "Get the line height of a font. All characters fit into this height the height of a font ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font "
                }
            ]
        },
        {
            "name": "lv_font_set_kerning",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Configure the use of kerning information stored in a font ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font "
                },
                {
                    "name": "kerning",
                    "type": {
                        "name": "lv_font_kerning_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_FONT_KERNING_NORMAL (default) or LV_FONT_KERNING_NONE "
                }
            ]
        },
        {
            "name": "lv_font_default",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to LV_FONT_DEFAULT "
            },
            "json_type": "function",
            "docstring": "Just a wrapper around LV_FONT_DEFAULT because it might be more convenient to use a function in some cases pointer to LV_FONT_DEFAULT ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_text_get_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get size of a text ",
            "args": [
                {
                    "name": "size_res",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a 'point_t' variable to store the result "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text "
                },
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to font of the text "
                },
                {
                    "name": "letter_space",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "letter space of the text "
                },
                {
                    "name": "line_space",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "line space of the text "
                },
                {
                    "name": "max_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "max width of the text (break the lines to fit this size). Set COORD_MAX to avoid "
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "settings for the text from :ref:`lv_text_flag_t` "
                }
            ]
        },
        {
            "name": "lv_text_get_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "length of a char_num long text "
            },
            "json_type": "function",
            "docstring": "Give the length of a text with a given font length of a char_num long text ",
            "args": [
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a '\\0' terminate string "
                },
                {
                    "name": "length",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "length of 'txt' in byte count and not characters (\u00c1 is 1 character but 2 bytes in UTF-8) "
                },
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font "
                },
                {
                    "name": "letter_space",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "letter space "
                }
            ]
        },
        {
            "name": "lv_bidi_calculate_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the real text alignment from the a text alignment, base direction and a text. ",
            "args": [
                {
                    "name": "align",
                    "type": {
                        "type": {
                            "name": "lv_text_align_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_TEXT_ALIGN_..., write back the calculated align here (LV_TEXT_ALIGN_LEFT/RIGHT/CENTER) "
                },
                {
                    "name": "base_dir",
                    "type": {
                        "type": {
                            "name": "lv_base_dir_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_BASE_DIR_..., write the calculated base dir here (LV_BASE_DIR_LTR/RTL) "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a text, used with LV_BASE_DIR_AUTO to determine the base direction "
                }
            ]
        },
        {
            "name": "lv_bidi_set_custom_neutrals_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set custom neutrals string ",
            "args": [
                {
                    "name": "neutrals",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "default \" \\t\\n\\r.,:;'\\\"`!?%/\\\\-=()[]{}<>@#&$|\" "
                }
            ]
        },
        {
            "name": "lv_layout_register",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the ID of the new layout "
            },
            "json_type": "function",
            "docstring": "Register a new layout the ID of the new layout ",
            "args": [
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_layout_update_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the layout update callback "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom data that will be passed to cb "
                }
            ]
        },
        {
            "name": "lv_flex_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a flex layout to default values ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_obj_set_flex_flow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set how the item should flow ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object. The parent must have flex layout else nothing will happen. "
                },
                {
                    "name": "flow",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an element of lv_flex_flow_t . "
                }
            ]
        },
        {
            "name": "lv_obj_set_flex_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set how to place (where to align) the items and tracks ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object. The parent must have flex layout else nothing will happen. "
                },
                {
                    "name": "main_place",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "where to place the items on main axis (in their track). Any value of lv_flex_align_t . "
                },
                {
                    "name": "cross_place",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "where to place the item in their track on the cross axis. LV_FLEX_ALIGN_START/END/CENTER "
                },
                {
                    "name": "track_cross_place",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "where to place the tracks in the cross direction. Any value of lv_flex_align_t . "
                }
            ]
        },
        {
            "name": "lv_obj_set_flex_grow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Sets the width or height (on main axis) to grow the object in order fill the free space ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object. The parent must have flex layout else nothing will happen. "
                },
                {
                    "name": "grow",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a value to set how much free space to take proportionally to other growing items. "
                }
            ]
        },
        {
            "name": "lv_grid_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_obj_set_grid_dsc_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "col_dsc",
                    "type": {
                        "name": "int32_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "row_dsc",
                    "type": {
                        "name": "int32_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_grid_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "column_align",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "row_align",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_grid_cell",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the cell of an object. The object's parent needs to have grid layout, else nothing will happen ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "column_align",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the vertical alignment in the cell. LV_GRID_START/END/CENTER/STRETCH "
                },
                {
                    "name": "col_pos",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "column ID "
                },
                {
                    "name": "col_span",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of columns to take (>= 1) "
                },
                {
                    "name": "row_align",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the horizontal alignment in the cell. LV_GRID_START/END/CENTER/STRETCH "
                },
                {
                    "name": "row_pos",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "row ID "
                },
                {
                    "name": "row_span",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of rows to take (>= 1) "
                }
            ]
        },
        {
            "name": "lv_grid_fr",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Just a wrapper to LV_GRID_FR for bindings. ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a style Do not call lv_style_init on styles that already have some properties because this function won't free the used memory, just sets a default state for the style. In other words be sure to initialize styles only once! ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style to initialize "
                }
            ]
        },
        {
            "name": "lv_style_reset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear all properties from a style and free all allocated memories. ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                }
            ]
        },
        {
            "name": "lv_style_is_const",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the style is constant "
            },
            "json_type": "function",
            "docstring": "Check if a style is constant true: the style is constant ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                }
            ]
        },
        {
            "name": "lv_style_register_prop",
            "type": {
                "type": {
                    "name": "lv_style_prop_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a new property ID, or LV_STYLE_PROP_INV if there are no more available. Example:"
            },
            "json_type": "function",
            "docstring": "Register a new style property for custom usage a new property ID, or LV_STYLE_PROP_INV if there are no more available. Example: lv_style_prop_t MY_PROP; static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {  lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }  ...  MY_PROP = lv_style_register_prop();  ...  lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED)); ",
            "args": [
                {
                    "name": "flag",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_get_num_custom_props",
            "type": {
                "type": {
                    "name": "lv_style_prop_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the number of custom properties that have been registered thus far. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_style_remove_prop",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the property was found and removed; false: the property wasn't found "
            },
            "json_type": "function",
            "docstring": "Remove a property from a style true: the property was found and removed; false: the property wasn't found ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a style property ORed with a state. "
                }
            ]
        },
        {
            "name": "lv_style_set_prop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of property in a style. This function shouldn't be used directly by the user. Instead use lv_style_set_<prop_name>() . E.g. lv_style_set_bg_color() ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to style "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the ID of a property (e.g. LV_STYLE_BG_COLOR ) "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_style_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ":ref:`lv_style_value_t` variable in which a field is set according to the type of prop "
                }
            ]
        },
        {
            "name": "lv_style_get_prop",
            "type": {
                "type": {
                    "name": "lv_style_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_INVALID: the property wasn't found in the style ( value is unchanged) LV_RESULT_OK: the property was fond, and value is set accordingly "
            },
            "json_type": "function",
            "docstring": "Get the value of a property LV_RESULT_INVALID: the property wasn't found in the style ( value is unchanged) LV_RESULT_OK: the property was fond, and value is set accordingly  For performance reasons there are no sanity check on style ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the ID of a property "
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_style_value_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_style_value_t` variable to store the value "
                }
            ]
        },
        {
            "name": "lv_style_transition_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a transition descriptor. const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 }; static lv_style_transition_dsc_t trans1;  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL); ",
            "args": [
                {
                    "name": "tr",
                    "type": {
                        "type": {
                            "name": "lv_style_transition_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a transition descriptor to initialize "
                },
                {
                    "name": "props",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "an array with the properties to transition. The last element must be zero. "
                },
                {
                    "name": "path_cb",
                    "type": {
                        "name": "lv_anim_path_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an animation path (ease) callback. If NULL liner path will be used. "
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "duration of the transition in [ms] "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay before the transition in [ms] "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "any custom data that will be saved in the transition animation and will be available when path_cb is called "
                }
            ]
        },
        {
            "name": "lv_style_prop_get_default",
            "type": {
                "type": {
                    "name": "lv_style_value_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the default value "
            },
            "json_type": "function",
            "docstring": "Get the default value of a property the default value ",
            "args": [
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the ID of a property "
                }
            ]
        },
        {
            "name": "lv_style_get_prop_inlined",
            "type": {
                "type": {
                    "name": "lv_style_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_INVALID: the property wasn't found in the style ( value is unchanged) LV_RESULT_OK: the property was fond, and value is set accordingly "
            },
            "json_type": "function",
            "docstring": "Get the value of a property LV_RESULT_INVALID: the property wasn't found in the style ( value is unchanged) LV_RESULT_OK: the property was fond, and value is set accordingly  For performance reasons there are no sanity check on style  This function is the same as :ref:`lv_style_get_prop` but inlined. Use it only on performance critical places ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the ID of a property "
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_style_value_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_style_value_t` variable to store the value "
                }
            ]
        },
        {
            "name": "lv_style_is_empty",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if the style is empty "
            },
            "json_type": "function",
            "docstring": "Checks if a style is empty (has no properties) true if the style is empty ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style "
                }
            ]
        },
        {
            "name": "lv_style_get_prop_group",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the group [0..30] 30 means all the custom properties with index > 120 "
            },
            "json_type": "function",
            "docstring": "Tell the group of a property. If the a property from a group is set in a style the (1 << group) bit of style->has_group is set. It allows early skipping the style if the property is not exists in the style at all. the group [0..30] 30 means all the custom properties with index > 120 ",
            "args": [
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a style property "
                }
            ]
        },
        {
            "name": "lv_style_prop_lookup_flags",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the flags of the property "
            },
            "json_type": "function",
            "docstring": "Get the flags of a built-in or custom property. \n\nthe flags of the property  ",
            "args": [
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a style property "
                }
            ]
        },
        {
            "name": "lv_style_set_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_min_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_max_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_min_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_max_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_length",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_translate_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_translate_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_scale_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_scale_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_pivot_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_pivot_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_skew_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_skew_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_top",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_bottom",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_left",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_right",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_row",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_column",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_margin_top",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_margin_bottom",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_margin_left",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_margin_right",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_grad_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_grad_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_main_stop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_grad_stop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_main_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_grad_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_grad",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_grad_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_image_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_image_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_image_recolor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_image_recolor_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bg_image_tiled",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_border_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_border_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_border_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_border_side",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_border_post",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_outline_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_outline_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_outline_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_outline_pad",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_offset_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_offset_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_spread",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_shadow_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_image_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_image_recolor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_image_recolor_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_dash_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_dash_gap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_rounded",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_line_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_arc_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_arc_rounded",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_arc_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_arc_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_arc_image_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_font",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_letter_space",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_line_space",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_decor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_text_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_radius",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_clip_corner",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_opa_layered",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_color_filter_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_color_filter_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_color_filter_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_anim",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_anim_duration",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transition",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_style_transition_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_blend_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_layout",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_base_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_bitmap_mask_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_rotary_sensitivity",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_flex_flow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_flex_main_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_flex_cross_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_flex_track_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_flex_grow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_column_dsc_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "int32_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_column_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_row_dsc_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "int32_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_row_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_column_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_x_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_column_span",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_row_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_y_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_grid_cell_row_span",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_hor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_ver",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_pad_gap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_margin_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_set_transform_scale",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_style_prop_has_flag",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if the flag is set for this property "
            },
            "json_type": "function",
            "docstring": "Do not pass multiple flags to this function as backwards-compatibility is not guaranteed for that. \n\ntrue if the flag is set for this property  ",
            "args": [
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Property ID "
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Flag "
                }
            ]
        },
        {
            "name": "lv_event_send",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "preprocess",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_add",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "filter",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_remove_dsc",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_event_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_get_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_get_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_dsc_get_cb",
            "type": {
                "type": {
                    "name": "lv_event_cb_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_event_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_dsc_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_event_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_remove",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_remove_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_event_list_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_event_get_target",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the target of the event_code "
            },
            "json_type": "function",
            "docstring": "Get the object originally targeted by the event. It's the same even if the event is bubbled. the target of the event_code ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_current_target",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the current target of the event_code "
            },
            "json_type": "function",
            "docstring": "Get the current target of the event. It's the object which event handler being called. If the event is not bubbled it's the same as \"normal\" target. pointer to the current target of the event_code ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_code",
            "type": {
                "type": {
                    "name": "lv_event_code_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the event code. (E.g. LV_EVENT_CLICKED , LV_EVENT_FOCUSED , etc) "
            },
            "json_type": "function",
            "docstring": "Get the event code of an event the event code. (E.g. LV_EVENT_CLICKED , LV_EVENT_FOCUSED , etc) ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_param",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the parameter "
            },
            "json_type": "function",
            "docstring": "Get the parameter passed when the event was sent pointer to the parameter ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the user_data "
            },
            "json_type": "function",
            "docstring": "Get the user_data passed when the event was registered on the object pointer to the user_data ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_stop_bubbling",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Stop the event from bubbling. This is only valid when called in the middle of an event processing chain. ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_stop_processing",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Stop processing this event. This is only valid when called in the middle of an event processing chain. ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_register_id",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the new event id Example:"
            },
            "json_type": "function",
            "docstring": "Register a new, custom event ID. It can be used the same way as e.g. LV_EVENT_CLICKED to send custom events the new event id Example: uint32_t LV_EVENT_MINE = 0; ...  e = lv_event_register_id();  ...  lv_obj_send_event(obj, LV_EVENT_MINE, &some_data); ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_fs_drv_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a file system driver with default values. It is used to ensure all fields have known values and not memory junk. After it you can set the fields. ",
            "args": [
                {
                    "name": "drv",
                    "type": {
                        "type": {
                            "name": "lv_fs_drv_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to driver variable to initialize "
                }
            ]
        },
        {
            "name": "lv_fs_drv_register",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add a new drive ",
            "args": [
                {
                    "name": "drv",
                    "type": {
                        "type": {
                            "name": "lv_fs_drv_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_fs_drv_t structure which is inited with the corresponding function pointers. Only pointer is saved, so the driver should be static or dynamically allocated. "
                }
            ]
        },
        {
            "name": "lv_fs_get_drv",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_fs_drv_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to a driver or NULL if not found "
            },
            "json_type": "function",
            "docstring": "Give a pointer to a driver from its letter pointer to a driver or NULL if not found ",
            "args": [
                {
                    "name": "letter",
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the driver letter "
                }
            ]
        },
        {
            "name": "lv_fs_is_ready",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: drive is ready; false: drive is not ready "
            },
            "json_type": "function",
            "docstring": "Test if a drive is ready or not. If the ready function was not initialized true will be returned. true: drive is ready; false: drive is not ready ",
            "args": [
                {
                    "name": "letter",
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "letter of the drive "
                }
            ]
        },
        {
            "name": "lv_fs_open",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Open a file LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                },
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "path to the file beginning with the driver letter (e.g. S:/folder/file.txt) "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_fs_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "read: FS_MODE_RD, write: FS_MODE_WR, both: FS_MODE_RD | FS_MODE_WR "
                }
            ]
        },
        {
            "name": "lv_fs_make_path_from_buffer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make a path object for the memory-mapped file compatible with the file system interface ",
            "args": [
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "lv_fs_path_ex_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "path to a lv_fs_path_ex object "
                },
                {
                    "name": "letter",
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the letter of the driver. E.g. LV_FS_MEMFS_LETTER "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "address of the memory buffer "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of the memory buffer in bytes "
                }
            ]
        },
        {
            "name": "lv_fs_close",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Close an already opened file LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                }
            ]
        },
        {
            "name": "lv_fs_read",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Read from a file LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer where the read bytes are stored "
                },
                {
                    "name": "btr",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Bytes To Read "
                },
                {
                    "name": "br",
                    "type": {
                        "type": {
                            "name": "uint32_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of real read bytes (Bytes Read). NULL if unused. "
                }
            ]
        },
        {
            "name": "lv_fs_write",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Write into a file LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer with the bytes to write "
                },
                {
                    "name": "btw",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Bytes To Write "
                },
                {
                    "name": "bw",
                    "type": {
                        "type": {
                            "name": "uint32_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of real written bytes (Bytes Written). NULL if unused. "
                }
            ]
        },
        {
            "name": "lv_fs_seek",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Set the position of the 'cursor' (read write pointer) in a file LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new position expressed in bytes index (0: start of file) "
                },
                {
                    "name": "whence",
                    "type": {
                        "name": "lv_fs_whence_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "tells from where to set position. See lv_fs_whence_t "
                }
            ]
        },
        {
            "name": "lv_fs_tell",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from 'fs_res_t' "
            },
            "json_type": "function",
            "docstring": "Give the position of the read write pointer LV_FS_RES_OK or any error from 'fs_res_t' ",
            "args": [
                {
                    "name": "file_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a :ref:`lv_fs_file_t` variable "
                },
                {
                    "name": "pos",
                    "type": {
                        "type": {
                            "name": "uint32_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to store the position of the read write pointer "
                }
            ]
        },
        {
            "name": "lv_fs_dir_open",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Initialize a 'fs_dir_t' variable for directory reading LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "rddir_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_dir_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a ' :ref:`lv_fs_dir_t` ' variable "
                },
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "path to a directory "
                }
            ]
        },
        {
            "name": "lv_fs_dir_read",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Read the next filename form a directory. The name of the directories will begin with '/' LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "rddir_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_dir_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized 'fs_dir_t' variable "
                },
                {
                    "name": "fn",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer to store the filename "
                },
                {
                    "name": "fn_len",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "length of the buffer to store the filename "
                }
            ]
        },
        {
            "name": "lv_fs_dir_close",
            "type": {
                "type": {
                    "name": "lv_fs_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_FS_RES_OK or any error from lv_fs_res_t enum "
            },
            "json_type": "function",
            "docstring": "Close the directory reading LV_FS_RES_OK or any error from lv_fs_res_t enum ",
            "args": [
                {
                    "name": "rddir_p",
                    "type": {
                        "type": {
                            "name": "lv_fs_dir_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized 'fs_dir_t' variable "
                }
            ]
        },
        {
            "name": "lv_fs_get_letters",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the buffer "
            },
            "json_type": "function",
            "docstring": "Fill a buffer with the letters of existing drivers the buffer ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "buffer to store the letters ('\\0' added after the last letter) "
                }
            ]
        },
        {
            "name": "lv_fs_get_ext",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the beginning extension or empty string if no extension "
            },
            "json_type": "function",
            "docstring": "Return with the extension of the filename pointer to the beginning extension or empty string if no extension ",
            "args": [
                {
                    "name": "fn",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "string with a filename "
                }
            ]
        },
        {
            "name": "lv_fs_up",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the truncated file name "
            },
            "json_type": "function",
            "docstring": "Step up one level the truncated file name ",
            "args": [
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a file name "
                }
            ]
        },
        {
            "name": "lv_fs_get_last",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the beginning of the last element in the path "
            },
            "json_type": "function",
            "docstring": "Get the last element of a path (e.g. U:/folder/file -> file) pointer to the beginning of the last element in the path ",
            "args": [
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a file name "
                }
            ]
        },
        {
            "name": "lv_image_decoder_get_info",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: wasn't able to get info about the image "
            },
            "json_type": "function",
            "docstring": "Get information about an image. Try the created image decoder one by one. Once one is able to get info that info will be used. LV_RESULT_OK: success; LV_RESULT_INVALID: wasn't able to get info about the image ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the image source. Can be 1) File name: E.g. \"S:folder/img1.png\" (The drivers needs to registered via :ref:`lv_fs_drv_register()` ) 2) Variable: Pointer to an :ref:`lv_image_dsc_t` variable 3) Symbol: E.g. LV_SYMBOL_OK "
                },
                {
                    "name": "header",
                    "type": {
                        "type": {
                            "name": "lv_image_header_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the image info will be stored here "
                }
            ]
        },
        {
            "name": "lv_image_decoder_open",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: opened the image. dsc->decoded and dsc->header are set. LV_RESULT_INVALID: none of the registered image decoders were able to open the image. "
            },
            "json_type": "function",
            "docstring": "Open an image. Try the created image decoders one by one. Once one is able to open the image that decoder is saved in dsc  LV_RESULT_OK: opened the image. dsc->decoded and dsc->header are set. LV_RESULT_INVALID: none of the registered image decoders were able to open the image. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "describes a decoding session. Simply a pointer to an lv_image_decoder_dsc_t variable. "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the image source. Can be 1) File name: E.g. \"S:folder/img1.png\" (The drivers needs to registered via :ref:`lv_fs_drv_register()` ) ) 2) Variable: Pointer to an :ref:`lv_image_dsc_t` variable 3) Symbol: E.g. LV_SYMBOL_OK "
                },
                {
                    "name": "args",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_args_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "args about how the image should be opened. "
                }
            ]
        },
        {
            "name": "lv_image_decoder_get_area",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: success; LV_RESULT_INVALID: an error occurred or there is nothing left to decode "
            },
            "json_type": "function",
            "docstring": "Decode full_area pixels incrementally by calling in a loop. Set decoded_area to LV_COORD_MIN on first call. LV_RESULT_OK: success; LV_RESULT_INVALID: an error occurred or there is nothing left to decode ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "image decoder descriptor "
                },
                {
                    "name": "full_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "input parameter. the full area to decode after enough subsequent calls "
                },
                {
                    "name": "decoded_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "input+output parameter. set the values to LV_COORD_MIN for the first call and to reset decoding. the decoded area is stored here after each call. "
                }
            ]
        },
        {
            "name": "lv_image_decoder_close",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Close a decoding session ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to lv_image_decoder_dsc_t used in lv_image_decoder_open "
                }
            ]
        },
        {
            "name": "lv_image_decoder_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_image_decoder_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new image decoder "
            },
            "json_type": "function",
            "docstring": "Create a new image decoder pointer to the new image decoder ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_image_decoder_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete an image decoder ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder "
                }
            ]
        },
        {
            "name": "lv_image_decoder_get_next",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_image_decoder_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the next image decoder or NULL if no more image decoder exists "
            },
            "json_type": "function",
            "docstring": "Get the next image decoder in the linked list of image decoders the next image decoder or NULL if no more image decoder exists ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder or NULL to get the first one "
                }
            ]
        },
        {
            "name": "lv_image_decoder_set_info_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback to get information about the image ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder "
                },
                {
                    "name": "info_cb",
                    "type": {
                        "name": "lv_image_decoder_info_f_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to collect info about an image (fill an :ref:`lv_image_header_t` struct) "
                }
            ]
        },
        {
            "name": "lv_image_decoder_set_open_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback to open an image ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder "
                },
                {
                    "name": "open_cb",
                    "type": {
                        "name": "lv_image_decoder_open_f_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to open an image "
                }
            ]
        },
        {
            "name": "lv_image_decoder_set_get_area_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback to a decoded line of an image ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder "
                },
                {
                    "name": "read_line_cb",
                    "type": {
                        "name": "lv_image_decoder_get_area_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to read a line of an image "
                }
            ]
        },
        {
            "name": "lv_image_decoder_set_close_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback to close a decoding session. E.g. close files and free other resources. ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image decoder "
                },
                {
                    "name": "close_cb",
                    "type": {
                        "name": "lv_image_decoder_close_f_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a function to close a decoding session "
                }
            ]
        },
        {
            "name": "lv_image_decoder_add_to_cache",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "search_key",
                    "type": {
                        "type": {
                            "name": "lv_image_cache_data_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "decoded",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_image_decoder_post_process",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "post processed draw buffer, when it differs with decoded , it's newly allocated. "
            },
            "json_type": "function",
            "docstring": "Check the decoded image, make any modification if decoder args requires. A new draw buf will be allocated if provided decoded is not modifiable or stride mismatch etc.  post processed draw buffer, when it differs with decoded , it's newly allocated. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a decoder descriptor "
                },
                {
                    "name": "decoded",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a decoded image to post process to meet dsc->args requirement. "
                }
            ]
        },
        {
            "name": "lv_draw_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally to initialize the drawing module ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinitialize the drawing module ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_create_unit",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Allocate a new draw unit with the given size and appends it to the list of draw units ",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the size to allocate. E.g. sizeof(my_draw_unit_t) , where the first element of my_draw_unit_t is lv_draw_unit_t . "
                }
            ]
        },
        {
            "name": "lv_draw_add_task",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_task_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created draw task which needs to be further configured e.g. by added a draw descriptor "
            },
            "json_type": "function",
            "docstring": "Add an empty draw task to the draw task list of a layer. the created draw task which needs to be further configured e.g. by added a draw descriptor ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the draw task "
                }
            ]
        },
        {
            "name": "lv_draw_finalize_task_creation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Needs to be called when a draw task is created and configured. It will send an event about the new draw task to the widget and assign it to a draw unit. ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "t",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw task "
                }
            ]
        },
        {
            "name": "lv_draw_dispatch",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Try dispatching draw tasks to draw units ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_dispatch_layer",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "at least one draw task is being rendered (maybe it was taken earlier) "
            },
            "json_type": "function",
            "docstring": "Used internally to try dispatching draw tasks of a specific layer at least one draw task is being rendered (maybe it was taken earlier) ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display on which the dispatching was requested "
                },
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                }
            ]
        },
        {
            "name": "lv_draw_dispatch_wait_for_request",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Wait for a new dispatch request. It's blocking if LV_USE_OS == 0 else it yields ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_wait_for_finish",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Wait for draw finish in case of asynchronous task execution. If LV_USE_OS == 0 it just return. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_dispatch_request",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "When a draw unit finished a draw task it needs to request dispatching to let LVGL assign a new draw task to it ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_get_unit_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the total number of draw units. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_get_next_available_task",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_task_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "tan available draw task or NULL if there is no any "
            },
            "json_type": "function",
            "docstring": "Find and available draw task tan available draw task or NULL if there is no any ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw ctx to search in "
                },
                {
                    "name": "t_prev",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "continue searching from this task "
                },
                {
                    "name": "draw_unit_id",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "check the task where preferred_draw_unit_id equals this value or LV_DRAW_UNIT_NONE "
                }
            ]
        },
        {
            "name": "lv_draw_get_dependent_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of tasks depending on t_check "
            },
            "json_type": "function",
            "docstring": "Tell how many draw task are waiting to be drawn on the area of t_check . It can be used to determine if a GPU shall combine many draw tasks into one or not. If a lot of tasks are waiting for the current ones it makes sense to draw them one-by-one to not block the dependent tasks' rendering number of tasks depending on t_check ",
            "args": [
                {
                    "name": "t_check",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the task whose dependent tasks shall be counted "
                }
            ]
        },
        {
            "name": "lv_draw_layer_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_layer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the new target_layer or NULL on error "
            },
            "json_type": "function",
            "docstring": "Create (allocate) a new layer on a parent layer the new target_layer or NULL on error ",
            "args": [
                {
                    "name": "parent_layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the parent layer to which the layer will be merged when it's rendered "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format of the layer "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the areas of the layer (absolute coordinates) "
                }
            ]
        },
        {
            "name": "lv_draw_layer_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the new target_layer or NULL on error "
            },
            "json_type": "function",
            "docstring": "Initialize a layer which is allocated by the user the new target_layer or NULL on error ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the layer to initialize (its lifetime needs to be managed by the user) "
                },
                {
                    "name": "parent_layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the parent layer to which the layer will be merged when it's rendered "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color format of the layer "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the areas of the layer (absolute coordinates) "
                }
            ]
        },
        {
            "name": "lv_draw_layer_alloc_buf",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the allocated aligned buffer or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Try to allocate a buffer for the layer. pointer to the allocated aligned buffer or NULL on failure ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                }
            ]
        },
        {
            "name": "lv_draw_layer_go_to_xy",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "buf offset to point to the given X and Y coordinate "
            },
            "json_type": "function",
            "docstring": "Got to a pixel at X and Y coordinate on a layer buf offset to point to the given X and Y coordinate ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the target X coordinate "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the target X coordinate "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_type",
            "type": {
                "type": {
                    "name": "lv_draw_task_type_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the draw task type "
            },
            "json_type": "function",
            "docstring": "Get the type of a draw task the draw task type ",
            "args": [
                {
                    "name": "t",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw task to get the type of "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_draw_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a void pointer to the draw descriptor "
            },
            "json_type": "function",
            "docstring": "Get the draw descriptor of a draw task a void pointer to the draw descriptor ",
            "args": [
                {
                    "name": "t",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw task to get the draw descriptor of "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the draw area of a draw task ",
            "args": [
                {
                    "name": "t",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw task to get the draw area of "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the destination where the draw area will be stored "
                }
            ]
        },
        {
            "name": "lv_display_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_display_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to a display object or NULL on error "
            },
            "json_type": "function",
            "docstring": "Create a new display with the given resolution pointer to a display object or NULL on error ",
            "args": [
                {
                    "name": "hor_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "horizontal resolution in pixels "
                },
                {
                    "name": "ver_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "vertical resolution in pixels "
                }
            ]
        },
        {
            "name": "lv_display_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove a display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display "
                }
            ]
        },
        {
            "name": "lv_display_set_default",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a default display. The new screens will be created on it by default. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_get_default",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_display_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the default display "
            },
            "json_type": "function",
            "docstring": "Get the default display pointer to the default display ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_display_get_next",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_display_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the next display or NULL if no more. Gives the first display when the parameter is NULL. "
            },
            "json_type": "function",
            "docstring": "Get the next display. the next display or NULL if no more. Gives the first display when the parameter is NULL. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the current display. NULL to initialize. "
                }
            ]
        },
        {
            "name": "lv_display_set_resolution",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Sets the resolution of a display. LV_EVENT_RESOLUTION_CHANGED event will be sent. Here the native resolution of the device should be set. If the display will be rotated later with lv_display_set_rotation LVGL will swap the hor. and ver. resolution automatically. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "hor_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new horizontal resolution "
                },
                {
                    "name": "ver_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new vertical resolution "
                }
            ]
        },
        {
            "name": "lv_display_set_physical_resolution",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "It's not mandatory to use the whole display for LVGL, however in some cases physical resolution is important. For example the touchpad still sees whole resolution and the values needs to be converted to the active LVGL display area. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "hor_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new physical horizontal resolution, or -1 to assume it's the same as the normal hor. res. "
                },
                {
                    "name": "ver_res",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new physical vertical resolution, or -1 to assume it's the same as the normal hor. res. "
                }
            ]
        },
        {
            "name": "lv_display_set_offset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "If physical resolution is not the same as the normal resolution the offset of the active display area can be set here. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X offset "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y offset "
                }
            ]
        },
        {
            "name": "lv_display_set_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the rotation of this display. LVGL will swap the horizontal and vertical resolutions internally. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                },
                {
                    "name": "rotation",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DISPLAY_ROTATION_0/90/180/270 "
                }
            ]
        },
        {
            "name": "lv_display_set_dpi",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the DPI (dot per inch) of the display. dpi = sqrt(hor_res^2 + ver_res^2) / diagonal\" ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "dpi",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new DPI "
                }
            ]
        },
        {
            "name": "lv_display_get_horizontal_resolution",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the horizontal resolution of the display. "
            },
            "json_type": "function",
            "docstring": "Get the horizontal resolution of a display. the horizontal resolution of the display. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_vertical_resolution",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the vertical resolution of the display "
            },
            "json_type": "function",
            "docstring": "Get the vertical resolution of a display the vertical resolution of the display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_physical_horizontal_resolution",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the physical horizontal resolution of the display "
            },
            "json_type": "function",
            "docstring": "Get the physical horizontal resolution of a display the physical horizontal resolution of the display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_physical_vertical_resolution",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the physical vertical resolution of the display "
            },
            "json_type": "function",
            "docstring": "Get the physical vertical resolution of a display the physical vertical resolution of the display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_offset_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the horizontal offset from the physical display "
            },
            "json_type": "function",
            "docstring": "Get the horizontal offset from the full / physical display the horizontal offset from the physical display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_offset_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the horizontal offset from the physical display "
            },
            "json_type": "function",
            "docstring": "Get the vertical offset from the full / physical display the horizontal offset from the physical display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_rotation",
            "type": {
                "type": {
                    "name": "lv_display_rotation_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current rotation "
            },
            "json_type": "function",
            "docstring": "Get the current rotation of this display. the current rotation ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_dpi",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "dpi of the display "
            },
            "json_type": "function",
            "docstring": "Get the DPI of the display dpi of the display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_set_buffers",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the buffers for a display, similarly to lv_display_set_draw_buffers , but accept the raw buffer pointers. For DIRECT/FULL rending modes, the buffer size must be at least hor_res * ver_res * lv_color_format_get_size(lv_display_get_color_format(disp)) ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "buf1",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "first buffer "
                },
                {
                    "name": "buf2",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "second buffer (can be NULL ) "
                },
                {
                    "name": "buf_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "buffer size in byte "
                },
                {
                    "name": "render_mode",
                    "type": {
                        "name": "lv_display_render_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DISPLAY_RENDER_MODE_PARTIAL/DIRECT/FULL "
                }
            ]
        },
        {
            "name": "lv_display_set_draw_buffers",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the buffers for a display, accept a draw buffer pointer. Normally use lv_display_set_buffers is enough for most cases. Use this function when an existing lv_draw_buf_t is available. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "buf1",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "first buffer "
                },
                {
                    "name": "buf2",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "second buffer (can be NULL ) "
                }
            ]
        },
        {
            "name": "lv_display_set_render_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set display render mode ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "render_mode",
                    "type": {
                        "name": "lv_display_render_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DISPLAY_RENDER_MODE_PARTIAL/DIRECT/FULL "
                }
            ]
        },
        {
            "name": "lv_display_set_flush_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the flush callback which will be called to copy the rendered image to the display. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "flush_cb",
                    "type": {
                        "name": "lv_display_flush_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the flush callback ( px_map contains the rendered image as raw pixel map and it should be copied to area on the display) "
                }
            ]
        },
        {
            "name": "lv_display_set_flush_wait_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback to be used while LVGL is waiting flushing to be finished. It can do any complex logic to wait, including semaphores, mutexes, polling flags, etc. If not set the disp->flushing flag is used which can be cleared with lv_display_flush_ready() ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "wait_cb",
                    "type": {
                        "name": "lv_display_flush_wait_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a callback to call while LVGL is waiting for flush ready. If NULL lv_display_flush_ready() can be used to signal that flushing is ready. "
                }
            ]
        },
        {
            "name": "lv_display_set_color_format",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the color format of the display. To change the endianness of the rendered image in case of RGB565 format (i.e. swap the 2 bytes) call lv_draw_sw_rgb565_swap in the flush_cb ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Possible values are LV_COLOR_FORMAT_RGB565 LV_COLOR_FORMAT_RGB888 LV_COLOR_FORMAT_XRGB888 LV_COLOR_FORMAT_ARGB888 "
                }
            ]
        },
        {
            "name": "lv_display_get_color_format",
            "type": {
                "type": {
                    "name": "lv_color_format_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color format "
            },
            "json_type": "function",
            "docstring": "Get the color format of the display the color format ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_set_tile_cnt",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of tiles for parallel rendering. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "tile_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of tiles (1 =< tile_cnt < 256) "
                }
            ]
        },
        {
            "name": "lv_display_get_tile_cnt",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of tiles "
            },
            "json_type": "function",
            "docstring": "Get the number of tiles used for parallel rendering number of tiles ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_set_antialiasing",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable anti-aliasing for the render engine ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true/false "
                }
            ]
        },
        {
            "name": "lv_display_get_antialiasing",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true/false "
            },
            "json_type": "function",
            "docstring": "Get if anti-aliasing is enabled for a display or not true/false ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_flush_ready",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_flush_is_last",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_is_double_buffered",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_get_screen_active",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the active screen object (loaded by ' :ref:`lv_screen_load()` ') "
            },
            "json_type": "function",
            "docstring": "Return a pointer to the active screen on a display pointer to the active screen object (loaded by ' :ref:`lv_screen_load()` ') ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display which active screen should be get. (NULL to use the default screen) "
                }
            ]
        },
        {
            "name": "lv_display_get_screen_prev",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the previous screen object or NULL if not used now "
            },
            "json_type": "function",
            "docstring": "Return with a pointer to the previous screen. Only used during screen transitions. pointer to the previous screen object or NULL if not used now ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display which previous screen should be get. (NULL to use the default screen) "
                }
            ]
        },
        {
            "name": "lv_display_get_layer_top",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the top layer object "
            },
            "json_type": "function",
            "docstring": "Return the top layer. The top layer is the same on all screens and it is above the normal screen layer. pointer to the top layer object ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display which top layer should be get. (NULL to use the default screen) "
                }
            ]
        },
        {
            "name": "lv_display_get_layer_sys",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the sys layer object "
            },
            "json_type": "function",
            "docstring": "Return the sys. layer. The system layer is the same on all screen and it is above the normal screen and the top layer. pointer to the sys layer object ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display which sys. layer should be retrieved. (NULL to use the default screen) "
                }
            ]
        },
        {
            "name": "lv_display_get_layer_bottom",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the bottom layer object "
            },
            "json_type": "function",
            "docstring": "Return the bottom layer. The bottom layer is the same on all screen and it is under the normal screen layer. It's visible only if the screen is transparent. pointer to the bottom layer object ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display (NULL to use the default screen) "
                }
            ]
        },
        {
            "name": "lv_screen_load",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Load a screen on the default display ",
            "args": [
                {
                    "name": "scr",
                    "type": {
                        "type": {
                            "name": "_lv_obj_t",
                            "type": {
                                "name": "struct",
                                "json_type": "primitive_type"
                            },
                            "json_type": "forward_decl",
                            "docstring": null,
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a screen "
                }
            ]
        },
        {
            "name": "lv_screen_load_anim",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Switch screen with animation ",
            "args": [
                {
                    "name": "scr",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new screen to load "
                },
                {
                    "name": "anim_type",
                    "type": {
                        "name": "lv_screen_load_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "type of the animation from lv_screen_load_anim_t , e.g. LV_SCR_LOAD_ANIM_MOVE_LEFT "
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time of the animation "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay before the transition "
                },
                {
                    "name": "auto_del",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: automatically delete the old screen "
                }
            ]
        },
        {
            "name": "lv_screen_active",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the active screen "
            },
            "json_type": "function",
            "docstring": "Get the active screen of the default display pointer to the active screen ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_layer_top",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the top layer "
            },
            "json_type": "function",
            "docstring": "Get the top layer of the default display pointer to the top layer ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_layer_sys",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the sys layer "
            },
            "json_type": "function",
            "docstring": "Get the system layer of the default display pointer to the sys layer ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_layer_bottom",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the bottom layer "
            },
            "json_type": "function",
            "docstring": "Get the bottom layer of the default display pointer to the bottom layer ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_display_add_event_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add an event handler to the display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an event callback "
                },
                {
                    "name": "filter",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "event code to react or LV_EVENT_ALL "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional user_data "
                }
            ]
        },
        {
            "name": "lv_display_get_event_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of events "
            },
            "json_type": "function",
            "docstring": "Get the number of event attached to a display number of events ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_get_event_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the event descriptor "
            },
            "json_type": "function",
            "docstring": "Get an event descriptor for an event the event descriptor ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the event "
                }
            ]
        },
        {
            "name": "lv_display_delete_event",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: and event was removed; false: no event was removed "
            },
            "json_type": "function",
            "docstring": "Remove an event true: and event was removed; false: no event was removed ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the event to remove "
                }
            ]
        },
        {
            "name": "lv_display_remove_event_cb_with_user_data",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the count of the event removed "
            },
            "json_type": "function",
            "docstring": "Remove an event_cb with user_data the count of the event removed ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the event_cb of the event to remove "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "user_data "
                }
            ]
        },
        {
            "name": "lv_display_send_event",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: disp wasn't deleted in the event. "
            },
            "json_type": "function",
            "docstring": "Send an event to a display LV_RESULT_OK: disp wasn't deleted in the event. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "code",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an event code. LV_EVENT_... "
                },
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional param "
                }
            ]
        },
        {
            "name": "lv_event_get_invalidated_area",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the area to invalidated (can be modified as required) "
            },
            "json_type": "function",
            "docstring": "Get the area to be invalidated. Can be used in LV_EVENT_INVALIDATE_AREA  the area to invalidated (can be modified as required) ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_display_set_theme",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the theme of a display. If there are no user created widgets yet the screens' theme will be updated ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "th",
                    "type": {
                        "type": {
                            "name": "lv_theme_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a theme "
                }
            ]
        },
        {
            "name": "lv_display_get_theme",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the display's theme (can be NULL) "
            },
            "json_type": "function",
            "docstring": "Get the theme of a display the display's theme (can be NULL) ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_get_inactive_time",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "elapsed ticks (milliseconds) since the last activity "
            },
            "json_type": "function",
            "docstring": "Get elapsed time since last user activity on a display (e.g. click) elapsed ticks (milliseconds) since the last activity ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to get the overall smallest inactivity) "
                }
            ]
        },
        {
            "name": "lv_display_trigger_activity",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Manually trigger an activity on a display ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_enable_invalidation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Temporarily enable and disable the invalidation of the display. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable invalidation; false: invalidation "
                }
            ]
        },
        {
            "name": "lv_display_is_invalidation_enabled",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return true if invalidation is enabled "
            },
            "json_type": "function",
            "docstring": "Get display invalidation is enabled. return true if invalidation is enabled ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display (NULL to use the default display) "
                }
            ]
        },
        {
            "name": "lv_display_get_refr_timer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the display refresher timer. (NULL on error) "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the screen refresher timer to modify its parameters with lv_timer_... functions. pointer to the display refresher timer. (NULL on error) ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_delete_refr_timer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete screen refresher timer ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                }
            ]
        },
        {
            "name": "lv_display_set_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_set_driver_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "driver_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_get_driver_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_get_buf_active",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_display_rotate_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Rotate an area in-place according to the display's rotation ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a display "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area to rotate "
                }
            ]
        },
        {
            "name": "lv_dpx",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "n x current_dpi/160 "
            },
            "json_type": "function",
            "docstring": "Scale the given number of pixels (a distance or size) relative to a 160 DPI display considering the DPI of the default display. It ensures that e.g. lv_dpx(100) will have the same physical size regardless to the DPI of the display. n x current_dpi/160 ",
            "args": [
                {
                    "name": "n",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of pixels to scale "
                }
            ]
        },
        {
            "name": "lv_display_dpx",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "n x current_dpi/160 "
            },
            "json_type": "function",
            "docstring": "Scale the given number of pixels (a distance or size) relative to a 160 DPI display considering the DPI of the given display. It ensures that e.g. lv_dpx(100) will have the same physical size regardless to the DPI of the display. n x current_dpi/160 ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a display whose dpi should be considered "
                },
                {
                    "name": "n",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of pixels to scale "
                }
            ]
        },
        {
            "name": "lv_obj_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete an object and all of its children. Also remove the objects from their group and remove all animations (if any). Send LV_EVENT_DELETED to deleted objects. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_clean",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete all children of an object. Also remove the objects from their group and remove all animations (if any). Send LV_EVENT_DELETED to deleted objects. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_delete_delayed",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete an object after some delay ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "delay_ms",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time to wait before delete in milliseconds "
                }
            ]
        },
        {
            "name": "lv_obj_delete_anim_completed_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "A function to be easily used in animation ready callback to delete an object when the animation is ready ",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the animation "
                }
            ]
        },
        {
            "name": "lv_obj_delete_async",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Helper function for asynchronously deleting objects. Useful for cases where you can't delete an object directly in an LV_EVENT_DELETE handler (i.e. parent). :ref:`lv_async_call` ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "object to delete "
                }
            ]
        },
        {
            "name": "lv_obj_set_parent",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the parent of an object. The relative coordinates will be kept. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose parent needs to be changed "
                },
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new parent "
                }
            ]
        },
        {
            "name": "lv_obj_swap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Swap the positions of two objects. When used in listboxes, it can be used to sort the listbox items. ",
            "args": [
                {
                    "name": "obj1",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the first object "
                },
                {
                    "name": "obj2",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the second object "
                }
            ]
        },
        {
            "name": "lv_obj_move_to_index",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "moves the object to the given index in its parent. When used in listboxes, it can be used to sort the listbox items. to move to the background: lv_obj_move_to_index(obj, 0)  to move forward (up): lv_obj_move_to_index(obj, lv_obj_get_index(obj) - 1) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the object to be moved. "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new index in parent. -1 to count from the back "
                }
            ]
        },
        {
            "name": "lv_obj_get_screen",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the object's screen "
            },
            "json_type": "function",
            "docstring": "Get the screen of an object pointer to the object's screen ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_display",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_display_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the object's display "
            },
            "json_type": "function",
            "docstring": "Get the display of the object pointer to the object's display ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_parent",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the parent of the object. (NULL if obj was a screen) "
            },
            "json_type": "function",
            "docstring": "Get the parent of an object the parent of the object. (NULL if obj was a screen) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_child",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the child or NULL if the index was invalid "
            },
            "json_type": "function",
            "docstring": "Get the child of an object by the child's index. pointer to the child or NULL if the index was invalid ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose child should be get "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the child. 0: the oldest (firstly created) child 1: the second oldest child count-1: the youngest -1: the youngest -2: the second youngest "
                }
            ]
        },
        {
            "name": "lv_obj_get_child_by_type",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the child or NULL if the index was invalid "
            },
            "json_type": "function",
            "docstring": "Get the child of an object by the child's index. Consider the children only with a given type. pointer to the child or NULL if the index was invalid ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose child should be get "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the child. 0: the oldest (firstly created) child 1: the second oldest child count-1: the youngest -1: the youngest -2: the second youngest "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the children to check "
                }
            ]
        },
        {
            "name": "lv_obj_get_sibling",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the requested sibling or NULL if there is no such sibling "
            },
            "json_type": "function",
            "docstring": "Return a sibling of an object pointer to the requested sibling or NULL if there is no such sibling ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose sibling should be get "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0: obj itself -1: the first older sibling -2: the next older sibling 1: the first younger sibling 2: the next younger sibling etc "
                }
            ]
        },
        {
            "name": "lv_obj_get_sibling_by_type",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the requested sibling or NULL if there is no such sibling "
            },
            "json_type": "function",
            "docstring": "Return a sibling of an object. Consider the siblings only with a given type. pointer to the requested sibling or NULL if there is no such sibling ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose sibling should be get "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0: obj itself -1: the first older sibling -2: the next older sibling 1: the first younger sibling 2: the next younger sibling etc "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the children to check "
                }
            ]
        },
        {
            "name": "lv_obj_get_child_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of children "
            },
            "json_type": "function",
            "docstring": "Get the number of children the number of children ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_child_count_by_type",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of children "
            },
            "json_type": "function",
            "docstring": "Get the number of children having a given type. the number of children ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the children to check "
                }
            ]
        },
        {
            "name": "lv_obj_get_index",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the child index of the object. E.g. 0: the oldest (firstly created child). (-1 if child could not be found or no parent exists) "
            },
            "json_type": "function",
            "docstring": "Get the index of a child. the child index of the object. E.g. 0: the oldest (firstly created child). (-1 if child could not be found or no parent exists) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_index_by_type",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the child index of the object. E.g. 0: the oldest (firstly created child with the given class). (-1 if child could not be found or no parent exists) "
            },
            "json_type": "function",
            "docstring": "Get the index of a child. Consider the children only with a given type. the child index of the object. E.g. 0: the oldest (firstly created child with the given class). (-1 if child could not be found or no parent exists) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the children to check "
                }
            ]
        },
        {
            "name": "lv_obj_tree_walk",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Iterate through all children of any object. ",
            "args": [
                {
                    "name": "start_obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "start integrating from this object "
                },
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_obj_tree_walk_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "call this callback on the objects "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to any user related data (will be passed to cb ) "
                }
            ]
        },
        {
            "name": "lv_obj_dump_tree",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Iterate through all children of any object and print their ID. ",
            "args": [
                {
                    "name": "start_obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "start integrating from this object "
                }
            ]
        },
        {
            "name": "lv_obj_set_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the position of an object relative to the set alignment. With default alignment it's the distance from the top left corner  E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent  The position is interpreted on the content area of the parent  The values can be set in pixel or in percentage of parent size with lv_pct(v) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new x coordinate "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new y coordinate "
                }
            ]
        },
        {
            "name": "lv_obj_set_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the x coordinate of an object With default alignment it's the distance from the top left corner  E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent  The position is interpreted on the content area of the parent  The values can be set in pixel or in percentage of parent size with lv_pct(v) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new x coordinate "
                }
            ]
        },
        {
            "name": "lv_obj_set_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the y coordinate of an object With default alignment it's the distance from the top left corner  E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent  The position is interpreted on the content area of the parent  The values can be set in pixel or in percentage of parent size with lv_pct(v) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new y coordinate "
                }
            ]
        },
        {
            "name": "lv_obj_set_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the size of an object. possible values are: pixel simple set the size accordingly LV_SIZE_CONTENT set the size to involve all children in the given direction lv_pct(x) to set size in percentage of the parent's content area size (the size without paddings). x should be in [0..1000]% range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new width "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new height "
                }
            ]
        },
        {
            "name": "lv_obj_refr_size",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the size has been changed "
            },
            "json_type": "function",
            "docstring": "Recalculate the size of the object true: the size has been changed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_set_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the width of an object possible values are: pixel simple set the size accordingly LV_SIZE_CONTENT set the size to involve all children in the given direction lv_pct(x) to set size in percentage of the parent's content area size (the size without paddings). x should be in [0..1000]% range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new width "
                }
            ]
        },
        {
            "name": "lv_obj_set_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the height of an object possible values are: pixel simple set the size accordingly LV_SIZE_CONTENT set the size to involve all children in the given direction lv_pct(x) to set size in percentage of the parent's content area size (the size without paddings). x should be in [0..1000]% range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new height "
                }
            ]
        },
        {
            "name": "lv_obj_set_content_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the width reduced by the left and right padding and the border width. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the width without paddings in pixels "
                }
            ]
        },
        {
            "name": "lv_obj_set_content_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the height reduced by the top and bottom padding and the border width. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the height without paddings in pixels "
                }
            ]
        },
        {
            "name": "lv_obj_set_layout",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a layout for an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "layout",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layout descriptor to set "
                }
            ]
        },
        {
            "name": "lv_obj_is_layout_positioned",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: positioned by a layout; false: not positioned by a layout "
            },
            "json_type": "function",
            "docstring": "Test whether the and object is positioned by a layout or not true: positioned by a layout; false: not positioned by a layout ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to test "
                }
            ]
        },
        {
            "name": "lv_obj_mark_layout_as_dirty",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Mark the object for layout update. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose children needs to be updated "
                }
            ]
        },
        {
            "name": "lv_obj_update_layout",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Update the layout of an object. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose children needs to be updated "
                }
            ]
        },
        {
            "name": "lv_obj_set_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Change the alignment of an object. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to align "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "type of alignment (see 'lv_align_t' enum) LV_ALIGN_OUT_... can't be used. "
                }
            ]
        },
        {
            "name": "lv_obj_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Change the alignment of an object and set new coordinates. Equivalent to: lv_obj_set_align(obj, align); lv_obj_set_pos(obj, x_ofs, y_ofs); ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to align "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "type of alignment (see 'lv_align_t' enum) LV_ALIGN_OUT_... can't be used. "
                },
                {
                    "name": "x_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "x coordinate offset after alignment "
                },
                {
                    "name": "y_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "y coordinate offset after alignment "
                }
            ]
        },
        {
            "name": "lv_obj_align_to",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Align an object to another object. if the position or size of base changes obj needs to be aligned manually again ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to align "
                },
                {
                    "name": "base",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to another object (if NULL obj s parent is used). 'obj' will be aligned to it. "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "type of alignment (see 'lv_align_t' enum) "
                },
                {
                    "name": "x_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "x coordinate offset after alignment "
                },
                {
                    "name": "y_ofs",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "y coordinate offset after alignment "
                }
            ]
        },
        {
            "name": "lv_obj_center",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Align an object to the center on its parent. if the parent size changes obj needs to be aligned manually again ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to align "
                }
            ]
        },
        {
            "name": "lv_obj_get_coords",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy the coordinates of an object to an area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an area to store the coordinates "
                }
            ]
        },
        {
            "name": "lv_obj_get_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "distance of obj from the left side of its parent plus the parent's left padding "
            },
            "json_type": "function",
            "docstring": "Get the x coordinate of object. distance of obj from the left side of its parent plus the parent's left padding  The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  Zero return value means the object is on the left padding of the parent, and not on the left edge.  Scrolling of the parent doesn't change the returned value.  The returned value is always the distance from the parent even if obj is positioned by a layout. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_x2",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "distance of obj from the right side of its parent plus the parent's right padding "
            },
            "json_type": "function",
            "docstring": "Get the x2 coordinate of object. distance of obj from the right side of its parent plus the parent's right padding  The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  Zero return value means the object is on the right padding of the parent, and not on the right edge.  Scrolling of the parent doesn't change the returned value.  The returned value is always the distance from the parent even if obj is positioned by a layout. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "distance of obj from the top side of its parent plus the parent's top padding "
            },
            "json_type": "function",
            "docstring": "Get the y coordinate of object. distance of obj from the top side of its parent plus the parent's top padding  The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  Zero return value means the object is on the top padding of the parent, and not on the top edge.  Scrolling of the parent doesn't change the returned value.  The returned value is always the distance from the parent even if obj is positioned by a layout. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_y2",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "distance of obj from the bottom side of its parent plus the parent's bottom padding "
            },
            "json_type": "function",
            "docstring": "Get the y2 coordinate of object. distance of obj from the bottom side of its parent plus the parent's bottom padding  The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  Zero return value means the object is on the bottom padding of the parent, and not on the bottom edge.  Scrolling of the parent doesn't change the returned value.  The returned value is always the distance from the parent even if obj is positioned by a layout. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_x_aligned",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the set x coordinate "
            },
            "json_type": "function",
            "docstring": "Get the actually set x coordinate of object, i.e. the offset from the set alignment the set x coordinate ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_y_aligned",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the set y coordinate "
            },
            "json_type": "function",
            "docstring": "Get the actually set y coordinate of object, i.e. the offset from the set alignment the set y coordinate ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width in pixels "
            },
            "json_type": "function",
            "docstring": "Get the width of an object The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  the width in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the height in pixels "
            },
            "json_type": "function",
            "docstring": "Get the height of an object The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  the height in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_content_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width which still fits into its parent without causing overflow (making the parent scrollable) "
            },
            "json_type": "function",
            "docstring": "Get the width reduced by the left and right padding and the border width. The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  the width which still fits into its parent without causing overflow (making the parent scrollable) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_content_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the height which still fits into the parent without causing overflow (making the parent scrollable) "
            },
            "json_type": "function",
            "docstring": "Get the height reduced by the top and bottom padding and the border width. The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) .  the height which still fits into the parent without causing overflow (making the parent scrollable) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_content_coords",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the area reduced by the paddings and the border width. The position of the object is recalculated only on the next redraw. To force coordinate recalculation call lv_obj_update_layout(obj) . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area which still fits into the parent without causing overflow (making the parent scrollable) "
                }
            ]
        },
        {
            "name": "lv_obj_get_self_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width of the virtually drawn content "
            },
            "json_type": "function",
            "docstring": "Get the width occupied by the \"parts\" of the widget. E.g. the width of all columns of a table. the width of the virtually drawn content  This size independent from the real size of the widget. It just tells how large the internal (\"virtual\") content is. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an objects "
                }
            ]
        },
        {
            "name": "lv_obj_get_self_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the width of the virtually drawn content "
            },
            "json_type": "function",
            "docstring": "Get the height occupied by the \"parts\" of the widget. E.g. the height of all rows of a table. the width of the virtually drawn content  This size independent from the real size of the widget. It just tells how large the internal (\"virtual\") content is. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an objects "
                }
            ]
        },
        {
            "name": "lv_obj_refresh_self_size",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "false: nothing happened; true: refresh happened "
            },
            "json_type": "function",
            "docstring": "Handle if the size of the internal (\"virtual\") content of an object has changed. false: nothing happened; true: refresh happened ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_refr_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_move_to",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_move_children_by",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "x_diff",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "y_diff",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "ignore_floating",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_transform_point",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Transform a point using the angle and zoom style properties of an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose style properties should be used "
                },
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a point to transform, the result will be written back here too "
                },
                {
                    "name": "flags",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed valued of :cpp:enum: lv_obj_point_transform_flag_t "
                }
            ]
        },
        {
            "name": "lv_obj_transform_point_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Transform an array of points using the angle and zoom style properties of an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose style properties should be used "
                },
                {
                    "name": "points",
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "the array of points to transform, the result will be written back here too "
                },
                {
                    "name": "count",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of points in the array "
                },
                {
                    "name": "flags",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed valued of :cpp:enum: lv_obj_point_transform_flag_t "
                }
            ]
        },
        {
            "name": "lv_obj_get_transformed_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Transform an area using the angle and zoom style properties of an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object whose style properties should be used "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an area to transform, the result will be written back here too "
                },
                {
                    "name": "flags",
                    "type": {
                        "name": "lv_obj_point_transform_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed valued of :cpp:enum: lv_obj_point_transform_flag_t "
                }
            ]
        },
        {
            "name": "lv_obj_invalidate_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Mark an area of an object as invalid. The area will be truncated to the object's area and marked for redraw. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area to redraw "
                }
            ]
        },
        {
            "name": "lv_obj_invalidate",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Mark the object as invalid to redrawn its area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_area_is_visible",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true visible; false not visible (hidden, out of parent, on other screen, etc) "
            },
            "json_type": "function",
            "docstring": "Tell whether an area of an object is visible (even partially) now or not true visible; false not visible (hidden, out of parent, on other screen, etc) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the are to check. The visible part of the area will be written back here. "
                }
            ]
        },
        {
            "name": "lv_obj_is_visible",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: visible; false not visible (hidden, out of parent, on other screen, etc) "
            },
            "json_type": "function",
            "docstring": "Tell whether an object is visible (even partially) now or not true: visible; false not visible (hidden, out of parent, on other screen, etc) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_set_ext_click_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the size of an extended clickable area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "extended clickable area in all 4 directions [px] "
                }
            ]
        },
        {
            "name": "lv_obj_get_click_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the an area where to object can be clicked. It's the object's normal area plus the extended click area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the result area here "
                }
            ]
        },
        {
            "name": "lv_obj_hit_test",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: if the object is considered under the point "
            },
            "json_type": "function",
            "docstring": "Hit-test an object given a particular point in screen space. true: if the object is considered under the point ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "object to hit-test "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "screen-space point (absolute coordinate) "
                }
            ]
        },
        {
            "name": "lv_clamp_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the clamped width "
            },
            "json_type": "function",
            "docstring": "Clamp a width between min and max width. If the min/max width is in percentage value use the ref_width the clamped width ",
            "args": [
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "width to clamp "
                },
                {
                    "name": "min_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the minimal width "
                },
                {
                    "name": "max_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the maximal width "
                },
                {
                    "name": "ref_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the reference width used when min/max width is in percentage "
                }
            ]
        },
        {
            "name": "lv_clamp_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the clamped height "
            },
            "json_type": "function",
            "docstring": "Clamp a height between min and max height. If the min/max height is in percentage value use the ref_height the clamped height ",
            "args": [
                {
                    "name": "height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "height to clamp "
                },
                {
                    "name": "min_height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the minimal height "
                },
                {
                    "name": "max_height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the maximal height "
                },
                {
                    "name": "ref_height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the reference height used when min/max height is in percentage "
                }
            ]
        },
        {
            "name": "lv_obj_set_scrollbar_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set how the scrollbars should behave. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_scrollbar_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_SCROLL_MODE_ON/OFF/AUTO/ACTIVE "
                }
            ]
        },
        {
            "name": "lv_obj_set_scroll_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the object in which directions can be scrolled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the allow scroll directions. An element or OR-ed values of lv_dir_t "
                }
            ]
        },
        {
            "name": "lv_obj_set_scroll_snap_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set where to snap the children when scrolling ends horizontally ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the snap align to set from lv_scroll_snap_t "
                }
            ]
        },
        {
            "name": "lv_obj_set_scroll_snap_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set where to snap the children when scrolling ends vertically ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_scroll_snap_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the snap align to set from lv_scroll_snap_t "
                }
            ]
        },
        {
            "name": "lv_obj_get_scrollbar_mode",
            "type": {
                "type": {
                    "name": "lv_scrollbar_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current scroll mode from lv_scrollbar_mode_t "
            },
            "json_type": "function",
            "docstring": "Get the current scroll mode (when to hide the scrollbars) the current scroll mode from lv_scrollbar_mode_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_dir",
            "type": {
                "type": {
                    "name": "lv_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the object in which directions can be scrolled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_snap_x",
            "type": {
                "type": {
                    "name": "lv_scroll_snap_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current snap align from lv_scroll_snap_t "
            },
            "json_type": "function",
            "docstring": "Get where to snap the children when scrolling ends horizontally the current snap align from lv_scroll_snap_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_snap_y",
            "type": {
                "type": {
                    "name": "lv_scroll_snap_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current snap align from lv_scroll_snap_t "
            },
            "json_type": "function",
            "docstring": "Get where to snap the children when scrolling ends vertically the current snap align from lv_scroll_snap_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current scroll position from the left edge. If the object is not scrolled return 0 If scrolled return > 0 If scrolled in (elastic scroll) return < 0 "
            },
            "json_type": "function",
            "docstring": "Get current X scroll position. the current scroll position from the left edge. If the object is not scrolled return 0 If scrolled return > 0 If scrolled in (elastic scroll) return < 0 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current scroll position from the top edge. If the object is not scrolled return 0 If scrolled return > 0 If scrolled inside return < 0 "
            },
            "json_type": "function",
            "docstring": "Get current Y scroll position. the current scroll position from the top edge. If the object is not scrolled return 0 If scrolled return > 0 If scrolled inside return < 0 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_top",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the scrollable area above the object in pixels "
            },
            "json_type": "function",
            "docstring": "Return the height of the area above the object. That is the number of pixels the object can be scrolled down. Normally positive but can be negative when scrolled inside. the scrollable area above the object in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_bottom",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the scrollable area below the object in pixels "
            },
            "json_type": "function",
            "docstring": "Return the height of the area below the object. That is the number of pixels the object can be scrolled down. Normally positive but can be negative when scrolled inside. the scrollable area below the object in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_left",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the scrollable area on the left the object in pixels "
            },
            "json_type": "function",
            "docstring": "Return the width of the area on the left the object. That is the number of pixels the object can be scrolled down. Normally positive but can be negative when scrolled inside. the scrollable area on the left the object in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_right",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the scrollable area on the right the object in pixels "
            },
            "json_type": "function",
            "docstring": "Return the width of the area on the right the object. That is the number of pixels the object can be scrolled down. Normally positive but can be negative when scrolled inside. the scrollable area on the right the object in pixels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_scroll_end",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the X and Y coordinates where the scrolling will end for this object if a scrolling animation is in progress. If no scrolling animation, give the current x or y scroll position. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "end",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to store the result "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_by",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll by a given amount of pixels > 0 value means scroll right/bottom (show the more content on the right/bottom)  e.g. dy = -20 means scroll down 20 px ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll horizontally "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll vertically "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_by_bounded",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll by a given amount of pixels. dx and dy will be limited internally to allow scrolling only on the content area. e.g. dy = -20 means scroll down 20 px ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll "
                },
                {
                    "name": "dx",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll horizontally "
                },
                {
                    "name": "dy",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll vertically "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_to",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll to a given coordinate on an object. x and y will be limited internally to allow scrolling only on the content area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll horizontally "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll vertically "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_to_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll to a given X coordinate on an object. x will be limited internally to allow scrolling only on the content area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll horizontally "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_to_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll to a given Y coordinate on an object y will be limited internally to allow scrolling only on the content area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pixels to scroll vertically "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_to_view",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll to an object until it becomes visible on its parent ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll into view "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_scroll_to_view_recursive",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Scroll to an object until it becomes visible on its parent. Do the same on the parent's parent, and so on. Therefore the object will be scrolled into view even it has nested scrollable parents ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to scroll into view "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: scroll with animation; LV_ANIM_OFF: scroll immediately "
                }
            ]
        },
        {
            "name": "lv_obj_is_scrolling",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: obj is being scrolled "
            },
            "json_type": "function",
            "docstring": "Tell whether an object is being scrolled or not at this moment true: obj is being scrolled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_update_snap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Check the children of obj and scroll obj to fulfill the scroll_snap settings ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an object whose children needs to checked and snapped "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON/OFF "
                }
            ]
        },
        {
            "name": "lv_obj_get_scrollbar_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the area of the scrollbars ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "hor",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to store the area of the horizontal scrollbar "
                },
                {
                    "name": "ver",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to store the area of the vertical scrollbar "
                }
            ]
        },
        {
            "name": "lv_obj_scrollbar_invalidate",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Invalidate the area of the scrollbars ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_readjust_scroll",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Checks if the content is scrolled \"in\" and adjusts it to a normal position. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON/OFF "
                }
            ]
        },
        {
            "name": "lv_obj_add_style",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add a style to an object. lv_obj_add_style(btn, &style_btn, 0); //Default button style lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors to red when pressed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style to add "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed value of parts and state to which the style should be added "
                }
            ]
        },
        {
            "name": "lv_obj_replace_style",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Replaces a style of an object, preserving the order of the style stack (local styles and transitions are ignored). lv_obj_replace_style(obj, &yellow_style, &blue_style, LV_PART_ANY | LV_STATE_ANY); //Replace a specific style lv_obj_replace_style(obj, &yellow_style, &blue_style, LV_PART_MAIN | LV_STATE_PRESSED); //Replace a specific style assigned to the main part when it is pressed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "old_style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style to replace. "
                },
                {
                    "name": "new_style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style to replace the old style with. "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values of states and a part to replace only styles with matching selectors. LV_STATE_ANY and LV_PART_ANY can be used "
                }
            ]
        },
        {
            "name": "lv_obj_remove_style",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove a style from an object. lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from the main part  lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style to remove. Can be NULL to check only the selector "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values of states and a part to remove only styles with matching selectors. LV_STATE_ANY and LV_PART_ANY can be used "
                }
            ]
        },
        {
            "name": "lv_obj_remove_style_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove all styles from an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_report_style_change",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Notify all object if a style is modified ",
            "args": [
                {
                    "name": "style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a style. Only the objects with this style will be notified (NULL to notify all objects) "
                }
            ]
        },
        {
            "name": "lv_obj_refresh_style",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Notify an object and its children about its style is modified. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the part whose style was changed. E.g. LV_PART_ANY , LV_PART_MAIN "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_STYLE_PROP_ANY or an LV_STYLE_... property. It is used to optimize what needs to be refreshed. LV_STYLE_PROP_INV to perform only a style cache update "
                }
            ]
        },
        {
            "name": "lv_obj_enable_style_refresh",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable or disable automatic style refreshing when a new style is added/removed to/from an object or any other style change happens. ",
            "args": [
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable refreshing; false: disable refreshing "
                }
            ]
        },
        {
            "name": "lv_obj_get_style_prop",
            "type": {
                "type": {
                    "name": "lv_style_value_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value of the property. Should be read from the correct field of the :ref:`lv_style_value_t` according to the type of the property. "
            },
            "json_type": "function",
            "docstring": "Get the value of a style property. The current state of the object will be considered. Inherited properties will be inherited. If a property is not set a default value will be returned. the value of the property. Should be read from the correct field of the :ref:`lv_style_value_t` according to the type of the property. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a part from which the property should be get "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the property to get "
                }
            ]
        },
        {
            "name": "lv_obj_has_style_prop",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if the object has the specified selector and property, false otherwise. "
            },
            "json_type": "function",
            "docstring": "Check if an object has a specified style property for a given style selector. true if the object has the specified selector and property, false otherwise. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the style selector to be checked, defining the scope of the style to be examined. "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the property to be checked. "
                }
            ]
        },
        {
            "name": "lv_obj_set_local_style_prop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set local style property on an object's part and state. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the property "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_style_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "value of the property. The correct element should be set according to the type of the property "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed value of parts and state for which the style should be set "
                }
            ]
        },
        {
            "name": "lv_obj_get_local_style_prop",
            "type": {
                "type": {
                    "name": "lv_style_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_style_value_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_remove_local_style_prop",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true the property was found and removed; false: the property was not found "
            },
            "json_type": "function",
            "docstring": "Remove a local style property from a part of an object with a given state. true the property was found and removed; false: the property was not found ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a style property to remove. "
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed value of parts and state for which the style should be removed "
                }
            ]
        },
        {
            "name": "lv_obj_style_apply_color_filter",
            "type": {
                "type": {
                    "name": "lv_style_value_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally for color filtering ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "v",
                    "type": {
                        "name": "lv_style_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_fade_in",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Fade in an an object and all its children. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the object to fade in "
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time of fade "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay to start the animation "
                }
            ]
        },
        {
            "name": "lv_obj_fade_out",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Fade out an an object and all its children. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the object to fade out "
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time of fade "
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "delay to start the animation "
                }
            ]
        },
        {
            "name": "lv_obj_style_get_selector_state",
            "type": {
                "type": {
                    "name": "lv_state_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_style_get_selector_part",
            "type": {
                "type": {
                    "name": "lv_part_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_min_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_max_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_min_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_max_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_length",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_align",
            "type": {
                "type": {
                    "name": "lv_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_translate_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_translate_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_scale_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_scale_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_rotation",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_pivot_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_pivot_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_skew_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_skew_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_top",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_bottom",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_left",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_right",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_row",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_pad_column",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_margin_top",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_margin_bottom",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_margin_left",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_margin_right",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad_dir",
            "type": {
                "type": {
                    "name": "lv_grad_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_main_stop",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad_stop",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_main_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_grad",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_grad_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_src",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_recolor",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_recolor_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_recolor_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bg_image_tiled",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_side",
            "type": {
                "type": {
                    "name": "lv_border_side_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_border_post",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_outline_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_outline_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_outline_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_outline_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_outline_pad",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_offset_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_offset_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_spread",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_shadow_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_image_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_image_recolor",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_image_recolor_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_image_recolor_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_dash_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_dash_gap",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_rounded",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_line_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_rounded",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_arc_image_src",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_color_filtered",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_font",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_letter_space",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_line_space",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_decor",
            "type": {
                "type": {
                    "name": "lv_text_decor_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_text_align",
            "type": {
                "type": {
                    "name": "lv_text_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_radius",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_clip_corner",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_opa_layered",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_color_filter_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_color_filter_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_color_filter_opa",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_anim",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_anim_duration",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transition",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_style_transition_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_blend_mode",
            "type": {
                "type": {
                    "name": "lv_blend_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_layout",
            "type": {
                "type": {
                    "name": "uint16_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_base_dir",
            "type": {
                "type": {
                    "name": "lv_base_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_bitmap_mask_src",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_rotary_sensitivity",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_flex_flow",
            "type": {
                "type": {
                    "name": "lv_flex_flow_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_flex_main_place",
            "type": {
                "type": {
                    "name": "lv_flex_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_flex_cross_place",
            "type": {
                "type": {
                    "name": "lv_flex_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_flex_track_place",
            "type": {
                "type": {
                    "name": "lv_flex_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_flex_grow",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_column_dsc_array",
            "type": {
                "type": {
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_column_align",
            "type": {
                "type": {
                    "name": "lv_grid_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_row_dsc_array",
            "type": {
                "type": {
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_row_align",
            "type": {
                "type": {
                    "name": "lv_grid_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_column_pos",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_x_align",
            "type": {
                "type": {
                    "name": "lv_grid_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_column_span",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_row_pos",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_y_align",
            "type": {
                "type": {
                    "name": "lv_grid_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_grid_cell_row_span",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_min_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_max_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_min_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_max_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_length",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_height",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_translate_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_translate_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_scale_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_scale_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_pivot_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_pivot_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_skew_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_skew_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_top",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_bottom",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_left",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_right",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_row",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_column",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_top",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_bottom",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_left",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_right",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_grad_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_grad_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_main_stop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_grad_stop",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_main_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_grad_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_grad",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_grad_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_image_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_image_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_image_recolor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_image_recolor_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bg_image_tiled",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_border_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_border_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_border_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_border_side",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_border_post",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_outline_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_outline_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_outline_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_outline_pad",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_offset_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_offset_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_spread",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_shadow_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_image_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_image_recolor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_image_recolor_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_dash_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_dash_gap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_rounded",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_line_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_arc_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_arc_rounded",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_arc_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_arc_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_arc_image_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_font",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_letter_space",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_line_space",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_decor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_text_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_radius",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_clip_corner",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_opa_layered",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_color_filter_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_color_filter_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_color_filter_opa",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_anim",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_anim_duration",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transition",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "lv_style_transition_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_blend_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_layout",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_base_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_bitmap_mask_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_rotary_sensitivity",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_flex_flow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_flow_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_flex_main_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_flex_cross_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_flex_track_place",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_flex_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_flex_grow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_column_dsc_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "int32_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_column_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_row_dsc_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "int32_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_row_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_column_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_x_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_column_span",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_row_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_y_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_grid_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_grid_cell_row_span",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_hor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_ver",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_hor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_margin_ver",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_pad_gap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_set_style_transform_scale",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "selector",
                    "type": {
                        "name": "lv_style_selector_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_space_left",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_space_right",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_space_top",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_space_bottom",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_calculate_style_text_align",
            "type": {
                "type": {
                    "name": "lv_text_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_scale_x_safe",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_transform_scale_y_safe",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_style_opa_recursive",
            "type": {
                "type": {
                    "name": "lv_opa_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the final opacity considering the parents' opacity too "
            },
            "json_type": "function",
            "docstring": "Get the opa style property from all parents and multiply and >> 8 them. the final opacity considering the parents' opacity too ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the object whose opacity should be get "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the part whose opacity should be get. Non-MAIN parts will consider the opa of the MAIN part too "
                }
            ]
        },
        {
            "name": "lv_gradient_color_calculate",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Compute the color in the given gradient and fraction Gradient are specified in a virtual [0-255] range, so this function scales the virtual range to the given range ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_grad_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The gradient descriptor to use "
                },
                {
                    "name": "range",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The range to use in computation. "
                },
                {
                    "name": "frac",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The current part used in the range. frac is in [0; range] "
                },
                {
                    "name": "color_out",
                    "type": {
                        "type": {
                            "name": "lv_grad_color_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Calculated gradient color "
                },
                {
                    "name": "opa_out",
                    "type": {
                        "type": {
                            "name": "lv_opa_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Calculated opacity "
                }
            ]
        },
        {
            "name": "lv_gradient_get",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_grad_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get a gradient cache from the given parameters ",
            "args": [
                {
                    "name": "gradient",
                    "type": {
                        "type": {
                            "name": "lv_grad_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_gradient_cleanup",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clean up the gradient item after it was get with lv_grad_get_from_cache . ",
            "args": [
                {
                    "name": "grad",
                    "type": {
                        "type": {
                            "name": "lv_grad_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a gradient "
                }
            ]
        },
        {
            "name": "lv_gradient_init_stops",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize gradient color map from a table ",
            "args": [
                {
                    "name": "grad",
                    "type": {
                        "type": {
                            "name": "lv_grad_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a gradient descriptor "
                },
                {
                    "name": "colors",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "color array "
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "opacity array: if NULL, then LV_OPA_COVER is assumed "
                },
                {
                    "name": "fracs",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "position array (0..255): if NULL, then colors are distributed evenly "
                },
                {
                    "name": "num_stops",
                    "type": {
                        "name": "int",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of gradient stops (1..LV_GRADIENT_MAX_STOPS) "
                }
            ]
        },
        {
            "name": "lv_draw_rect_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a rectangle draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_rect_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_fill_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a fill draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_fill_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_fill_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_fill_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_FILL "
            },
            "json_type": "function",
            "docstring": "Try to get a fill draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_FILL ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_border_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a border draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_border_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_border_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_border_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_BORDER "
            },
            "json_type": "function",
            "docstring": "Try to get a border draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_BORDER ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_box_shadow_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a box shadow draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_box_shadow_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_box_shadow_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_box_shadow_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_BOX_SHADOW "
            },
            "json_type": "function",
            "docstring": "Try to get a box shadow draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_BOX_SHADOW ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_rect",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "The rectangle is a wrapper for fill, border, bg. image and box shadow. Internally fill, border, image and box shadow draw tasks will be created. ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_rect_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized draw descriptor variable "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the rectangle "
                }
            ]
        },
        {
            "name": "lv_draw_label_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a label draw descriptor ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_label_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_label_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_LABEL "
            },
            "json_type": "function",
            "docstring": "Try to get a label draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_LABEL ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_glyph_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a glyph draw descriptor. Used internally. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_label",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Crate a draw task to render a text ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "coordinates of the character "
                }
            ]
        },
        {
            "name": "lv_draw_character",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Crate a draw task to render a single character ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to draw descriptor "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "position of the label "
                },
                {
                    "name": "unicode_letter",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the letter to draw "
                }
            ]
        },
        {
            "name": "lv_draw_label_iterate_characters",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Should be used during rendering the characters to get the position and other parameters of the characters ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "coordinates of the label "
                },
                {
                    "name": "cb",
                    "type": {
                        "name": "lv_draw_glyph_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a callback to call to draw each glyphs one by one "
                }
            ]
        },
        {
            "name": "lv_draw_image_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an image draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_image_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_image_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_IMAGE "
            },
            "json_type": "function",
            "docstring": "Try to get an image draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_IMAGE ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_image",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Create an image draw task coords can be small than the real image area (if only a part of the image is rendered) or can be larger (in case of tiled images). . ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the image "
                }
            ]
        },
        {
            "name": "lv_draw_layer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Create a draw task to blend a layer to another layer coords can be small than the total widget area from which the layer is created (if only a part of the widget was rendered to a layer) ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the layer. "
                }
            ]
        },
        {
            "name": "lv_image_src_get_type",
            "type": {
                "type": {
                    "name": "lv_image_src_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "type of the image source LV_IMAGE_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN "
            },
            "json_type": "function",
            "docstring": "Get the type of an image source type of the image source LV_IMAGE_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source: pointer to an 'lv_image_t' variable (image stored internally and compiled into the code) a path to a file (e.g. \"S:/folder/image.bin\") or a symbol (e.g. LV_SYMBOL_CLOSE) "
                }
            ]
        },
        {
            "name": "lv_draw_line_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a line draw descriptor ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_line_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_line_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_line_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_LINE "
            },
            "json_type": "function",
            "docstring": "Try to get a line draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_LINE ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_line",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Create a line draw task ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_line_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized :ref:`lv_draw_line_dsc_t` variable "
                }
            ]
        },
        {
            "name": "lv_draw_arc_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an arc draw descriptor. ",
            "args": [
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_arc_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_arc_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_arc_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_ARC "
            },
            "json_type": "function",
            "docstring": "Try to get an arc draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_ARC ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_arc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Create an arc draw task. ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_arc_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized draw descriptor variable "
                }
            ]
        },
        {
            "name": "lv_draw_arc_get_area",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get an area the should be invalidated when the arcs angle changed between start_angle and end_ange ",
            "args": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the x coordinate of the center of the arc "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the y coordinate of the center of the arc "
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the radius of the arc "
                },
                {
                    "name": "start_angle",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start angle of the arc (0 deg on the bottom, 90 deg on the right) "
                },
                {
                    "name": "end_angle",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end angle of the arc "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "width of the arc "
                },
                {
                    "name": "rounded",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: the arc is rounded "
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the area to invalidate here "
                }
            ]
        },
        {
            "name": "lv_obj_init_draw_rect_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a rectangle draw descriptor from an object's styles in its current state Only the relevant fields will be set. E.g. if border width == 0 the other border properties won't be evaluated. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object, e.g. LV_PART_MAIN , LV_PART_SCROLLBAR , LV_PART_KNOB , etc "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_rect_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the descriptor to initialize. If an ..._opa field is set to LV_OPA_TRANSP the related properties won't be initialized. Should be initialized with lv_draw_rect_dsc_init(draw_dsc) . "
                }
            ]
        },
        {
            "name": "lv_obj_init_draw_label_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a label draw descriptor from an object's styles in its current state ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object, e.g. LV_PART_MAIN , LV_PART_SCROLLBAR , LV_PART_KNOB , etc "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the descriptor to initialize. If the opa field is set to or the property is equal to LV_OPA_TRANSP the rest won't be initialized. Should be initialized with lv_draw_label_dsc_init(draw_dsc) . "
                }
            ]
        },
        {
            "name": "lv_obj_init_draw_image_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an image draw descriptor from an object's styles in its current state ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object, e.g. LV_PART_MAIN , LV_PART_SCROLLBAR , LV_PART_KNOB , etc "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the descriptor to initialize. Should be initialized with lv_draw_image_dsc_init(draw_dsc) . "
                }
            ]
        },
        {
            "name": "lv_obj_init_draw_line_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a line draw descriptor from an object's styles in its current state ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object, e.g. LV_PART_MAIN , LV_PART_SCROLLBAR , LV_PART_KNOB , etc "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_line_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the descriptor to initialize. Should be initialized with lv_draw_line_dsc_init(draw_dsc) . "
                }
            ]
        },
        {
            "name": "lv_obj_init_draw_arc_dsc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an arc draw descriptor from an object's styles in its current state ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object, e.g. LV_PART_MAIN , LV_PART_SCROLLBAR , LV_PART_KNOB , etc "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_arc_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the descriptor to initialize. Should be initialized with lv_draw_arc_dsc_init(draw_dsc) . "
                }
            ]
        },
        {
            "name": "lv_obj_calculate_ext_draw_size",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the extra size required around the object "
            },
            "json_type": "function",
            "docstring": "Get the required extra size (around the object's part) to draw shadow, outline, value etc. the extra size required around the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "part of the object "
                }
            ]
        },
        {
            "name": "lv_obj_refresh_ext_draw_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Send a 'LV_EVENT_REFR_EXT_DRAW_SIZE' Call the ancestor's event handler to the object to refresh the value of the extended draw size. The result will be saved in obj . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_class_create_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created object "
            },
            "json_type": "function",
            "docstring": "Create an object form a class descriptor pointer to the created object ",
            "args": [
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a class "
                },
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object where the new object should be created "
                }
            ]
        },
        {
            "name": "lv_obj_class_init_obj",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_is_editable",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_is_group_def",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_group_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_group_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new object group "
            },
            "json_type": "function",
            "docstring": "Create a new object group pointer to the new object group ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_group_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete a group object ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_set_default",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a default group. New object are added to this group if it's enabled in their class with add_to_def_group = true ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group (can be NULL ) "
                }
            ]
        },
        {
            "name": "lv_group_get_default",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_group_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the default group "
            },
            "json_type": "function",
            "docstring": "Get the default group pointer to the default group ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_group_add_obj",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add an object to a group ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to add "
                }
            ]
        },
        {
            "name": "lv_group_swap_obj",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Swap 2 object in a group. The object must be in the same group ",
            "args": [
                {
                    "name": "obj1",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "obj2",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to another object "
                }
            ]
        },
        {
            "name": "lv_group_remove_obj",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove an object from its group ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to remove "
                }
            ]
        },
        {
            "name": "lv_group_remove_all_objs",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove all objects from a group ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_focus_obj",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Focus on an object (defocus the current) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to focus on "
                }
            ]
        },
        {
            "name": "lv_group_focus_next",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Focus the next object in a group (defocus the current) ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_focus_prev",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Focus the previous object in a group (defocus the current) ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_focus_freeze",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Do not let to change the focus from the current object ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: freeze, false: release freezing (normal mode) "
                }
            ]
        },
        {
            "name": "lv_group_send_data",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "result of focused object in group. "
            },
            "json_type": "function",
            "docstring": "Send a control character to the focuses object of a group result of focused object in group. ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "c",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a character (use LV_KEY_.. to navigate) "
                }
            ]
        },
        {
            "name": "lv_group_set_focus_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function for a group which will be called when a new object is focused ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "focus_cb",
                    "type": {
                        "name": "lv_group_focus_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the call back function or NULL if unused "
                }
            ]
        },
        {
            "name": "lv_group_set_edge_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a function for a group which will be called when a focus edge is reached ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "edge_cb",
                    "type": {
                        "name": "lv_group_edge_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the call back function or NULL if unused "
                }
            ]
        },
        {
            "name": "lv_group_set_refocus_policy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set whether the next or previous item in a group is focused if the currently focused obj is deleted. ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "policy",
                    "type": {
                        "name": "lv_group_refocus_policy_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new refocus policy enum "
                }
            ]
        },
        {
            "name": "lv_group_set_editing",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Manually set the current mode (edit or navigate). ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to group "
                },
                {
                    "name": "edit",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: edit mode; false: navigate mode "
                }
            ]
        },
        {
            "name": "lv_group_set_wrap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set whether focus next/prev will allow wrapping from first->last or last->first object. ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to group "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: wrapping enabled; false: wrapping disabled "
                }
            ]
        },
        {
            "name": "lv_group_get_focused",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the focused object "
            },
            "json_type": "function",
            "docstring": "Get the focused object or NULL if there isn't one pointer to the focused object ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_get_focus_cb",
            "type": {
                "type": {
                    "name": "lv_group_focus_cb_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the call back function or NULL if not set "
            },
            "json_type": "function",
            "docstring": "Get the focus callback function of a group the call back function or NULL if not set ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_get_edge_cb",
            "type": {
                "type": {
                    "name": "lv_group_edge_cb_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the call back function or NULL if not set "
            },
            "json_type": "function",
            "docstring": "Get the edge callback function of a group the call back function or NULL if not set ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_get_editing",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: edit mode; false: navigate mode "
            },
            "json_type": "function",
            "docstring": "Get the current mode (edit or navigate). true: edit mode; false: navigate mode ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to group "
                }
            ]
        },
        {
            "name": "lv_group_get_wrap",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get whether focus next/prev will allow wrapping from first->last or last->first object. ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to group "
                }
            ]
        },
        {
            "name": "lv_group_get_obj_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of objects in the group "
            },
            "json_type": "function",
            "docstring": "Get the number of object in the group number of objects in the group ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_group_get_obj_by_index",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the object "
            },
            "json_type": "function",
            "docstring": "Get the nth object within a group pointer to the object ",
            "args": [
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "index of object within the group "
                }
            ]
        },
        {
            "name": "lv_group_get_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of groups "
            },
            "json_type": "function",
            "docstring": "Get the number of groups number of groups ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_group_by_index",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_group_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the group "
            },
            "json_type": "function",
            "docstring": "Get a group by its index pointer to the group ",
            "args": [
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "index of the group "
                }
            ]
        },
        {
            "name": "lv_indev_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_indev_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Pointer to the created indev or NULL when allocation failed "
            },
            "json_type": "function",
            "docstring": "Create an indev Pointer to the created indev or NULL when allocation failed ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_indev_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove the provided input device. Make sure not to use the provided input device afterwards anymore. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to delete "
                }
            ]
        },
        {
            "name": "lv_indev_get_next",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_indev_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the next input device or NULL if there are no more. Provide the first input device when the parameter is NULL "
            },
            "json_type": "function",
            "docstring": "Get the next input device. the next input device or NULL if there are no more. Provide the first input device when the parameter is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the current input device. NULL to initialize. "
                }
            ]
        },
        {
            "name": "lv_indev_read",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Read data from an input device. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_read_timer_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Called periodically to read the input devices ",
            "args": [
                {
                    "name": "timer",
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a timer to read "
                }
            ]
        },
        {
            "name": "lv_indev_enable",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable or disable one or all input devices (default enabled) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device or NULL to enable/disable all of them "
                },
                {
                    "name": "enable",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true to enable, false to disable "
                }
            ]
        },
        {
            "name": "lv_indev_active",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_indev_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the currently processed input device or NULL if no input device processing right now "
            },
            "json_type": "function",
            "docstring": "Get the currently processed input device. Can be used in action functions too. pointer to the currently processed input device or NULL if no input device processing right now ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_indev_set_type",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the type of an input device ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "indev_type",
                    "type": {
                        "name": "lv_indev_type_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the input device from lv_indev_type_t ( LV_INDEV_TYPE_... ) "
                }
            ]
        },
        {
            "name": "lv_indev_set_read_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a callback function to read input device data to the indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "read_cb",
                    "type": {
                        "name": "lv_indev_read_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to callback function to read input device data "
                }
            ]
        },
        {
            "name": "lv_indev_set_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set user data to the indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to user data "
                }
            ]
        },
        {
            "name": "lv_indev_set_driver_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set driver data to the indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "driver_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to driver data "
                }
            ]
        },
        {
            "name": "lv_indev_set_display",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Assign a display to the indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "_lv_display_t",
                            "type": {
                                "name": "struct",
                                "json_type": "primitive_type"
                            },
                            "json_type": "forward_decl",
                            "docstring": null,
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an display "
                }
            ]
        },
        {
            "name": "lv_indev_set_long_press_time",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set long press time to indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to input device "
                },
                {
                    "name": "long_press_time",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "time long press time in ms "
                }
            ]
        },
        {
            "name": "lv_indev_set_scroll_limit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set scroll limit to the input device ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "scroll_limit",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of pixels to slide before actually drag the object "
                }
            ]
        },
        {
            "name": "lv_indev_set_scroll_throw",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set scroll throw slow-down to the indev. Greater value means faster slow-down ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "scroll_throw",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the slow-down in [%] "
                }
            ]
        },
        {
            "name": "lv_indev_get_type",
            "type": {
                "type": {
                    "name": "lv_indev_type_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the type of the input device from lv_hal_indev_type_t ( LV_INDEV_TYPE_... ) "
            },
            "json_type": "function",
            "docstring": "Get the type of an input device the type of the input device from lv_hal_indev_type_t ( LV_INDEV_TYPE_... ) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_read_cb",
            "type": {
                "type": {
                    "name": "lv_indev_read_cb_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Pointer to callback function to read input device data or NULL if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get the callback function to read input device data to the indev Pointer to callback function to read input device data or NULL if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_state",
            "type": {
                "type": {
                    "name": "lv_indev_state_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Indev state or LV_INDEV_STATE_RELEASED if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get the indev state Indev state or LV_INDEV_STATE_RELEASED if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_group",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_group_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Pointer to indev assigned group or NULL if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get the indev assigned group Pointer to indev assigned group or NULL if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_display",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_display_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the assigned display or NULL if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the assigned display of the indev pointer to the assigned display or NULL if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the user data or NULL if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the user data of the indev pointer to the user data or NULL if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_driver_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the driver data or NULL if indev is NULL "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the driver data of the indev pointer to the driver data or NULL if indev is NULL ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_press_moved",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: indev is moved while pressed; false: indev is not moved while pressed "
            },
            "json_type": "function",
            "docstring": "Get whether indev is moved while pressed true: indev is moved while pressed; false: indev is not moved while pressed ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_reset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Reset one or all input devices ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device to reset or NULL to reset all of them "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object which triggers the reset. "
                }
            ]
        },
        {
            "name": "lv_indev_stop_processing",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Touch and key related events are sent to the input device first and to the widget after that. If this functions called in an indev event, the event won't be sent to the widget. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_reset_long_press",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Reset the long press state of an input device ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_set_cursor",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a cursor for a pointer input device (for LV_INPUT_TYPE_POINTER and LV_INPUT_TYPE_BUTTON) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "cur_obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to be used as cursor "
                }
            ]
        },
        {
            "name": "lv_indev_set_group",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a destination group for a keypad input device (for LV_INDEV_TYPE_KEYPAD) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "group",
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a group "
                }
            ]
        },
        {
            "name": "lv_indev_set_button_points",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the an array of points for LV_INDEV_TYPE_BUTTON. These points will be assigned to the buttons to press a specific point on the screen ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "points",
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "array of points "
                }
            ]
        },
        {
            "name": "lv_indev_get_point",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the last point of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a point to store the result "
                }
            ]
        },
        {
            "name": "lv_indev_get_gesture_dir",
            "type": {
                "type": {
                    "name": "lv_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "current gesture direct "
            },
            "json_type": "function",
            "docstring": "Get the current gesture direct current gesture direct ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_key",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the last pressed key (0 on error) "
            },
            "json_type": "function",
            "docstring": "Get the last pressed key of an input device (for LV_INDEV_TYPE_KEYPAD) the last pressed key (0 on error) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_short_click_streak",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "short click streak counter "
            },
            "json_type": "function",
            "docstring": "Get the counter for consecutive clicks within a short distance and time. The counter is updated before LV_EVENT_SHORT_CLICKED is fired. short click streak counter ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_scroll_dir",
            "type": {
                "type": {
                    "name": "lv_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_DIR_NONE: no scrolling now LV_DIR_HOR/VER "
            },
            "json_type": "function",
            "docstring": "Check the current scroll direction of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) LV_DIR_NONE: no scrolling now LV_DIR_HOR/VER ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_scroll_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the currently scrolled object or NULL if no scrolling by this indev "
            },
            "json_type": "function",
            "docstring": "Get the currently scrolled object (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) pointer to the currently scrolled object or NULL if no scrolling by this indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_vect",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the movement vector of an input device (for LV_INDEV_TYPE_POINTER and LV_INDEV_TYPE_BUTTON) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a point to store the types.pointer.vector "
                }
            ]
        },
        {
            "name": "lv_indev_wait_release",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Do nothing until the next release ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_active_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to currently active object or NULL if no active object "
            },
            "json_type": "function",
            "docstring": "Gets a pointer to the currently active object in the currently processed input device. pointer to currently active object or NULL if no active object ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_indev_get_read_timer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_timer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the indev read refresher timer. (NULL on error) "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the indev read timer to modify its parameters with lv_timer_... functions. pointer to the indev read refresher timer. (NULL on error) ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the input device's event model: event-driven mode or timer mode. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_indev_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mode of input device "
                }
            ]
        },
        {
            "name": "lv_indev_get_mode",
            "type": {
                "type": {
                    "name": "lv_indev_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the running mode for the specified input device. "
            },
            "json_type": "function",
            "docstring": "Get the input device's running mode. the running mode for the specified input device. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an input device "
                }
            ]
        },
        {
            "name": "lv_indev_search_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the found object or NULL if there was no suitable object "
            },
            "json_type": "function",
            "docstring": "Search the most top, clickable object by a point pointer to the found object or NULL if there was no suitable object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a start object, typically the screen "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a point for searching the most top child "
                }
            ]
        },
        {
            "name": "lv_indev_add_event_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add an event handler to the indev ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an indev "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an event callback "
                },
                {
                    "name": "filter",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "event code to react or LV_EVENT_ALL "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional user_data "
                }
            ]
        },
        {
            "name": "lv_indev_get_event_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of events "
            },
            "json_type": "function",
            "docstring": "Get the number of event attached to an indev number of events ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an indev "
                }
            ]
        },
        {
            "name": "lv_indev_get_event_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the event descriptor "
            },
            "json_type": "function",
            "docstring": "Get an event descriptor for an event the event descriptor ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an indev "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the event "
                }
            ]
        },
        {
            "name": "lv_indev_remove_event",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: and event was removed; false: no event was removed "
            },
            "json_type": "function",
            "docstring": "Remove an event true: and event was removed; false: no event was removed ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an indev "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the event to remove "
                }
            ]
        },
        {
            "name": "lv_indev_remove_event_cb_with_user_data",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the count of the event removed "
            },
            "json_type": "function",
            "docstring": "Remove an event_cb with user_data the count of the event removed ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a indev "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the event_cb of the event to remove "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "user_data "
                }
            ]
        },
        {
            "name": "lv_indev_send_event",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: indev wasn't deleted in the event. "
            },
            "json_type": "function",
            "docstring": "Send an event to an indev LV_RESULT_OK: indev wasn't deleted in the event. ",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an indev "
                },
                {
                    "name": "code",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an event code. LV_EVENT_... "
                },
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional param "
                }
            ]
        },
        {
            "name": "lv_obj_send_event",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: obj was not deleted in the event; LV_RESULT_INVALID: obj was deleted in the event_code "
            },
            "json_type": "function",
            "docstring": "Send an event to the object LV_RESULT_OK: obj was not deleted in the event; LV_RESULT_INVALID: obj was deleted in the event_code ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "event_code",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the type of the event from lv_event_t "
                },
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "arbitrary data depending on the widget type and the event. (Usually NULL ) "
                }
            ]
        },
        {
            "name": "lv_obj_event_base",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: the target object was not deleted in the event; LV_RESULT_INVALID: it was deleted in the event_code "
            },
            "json_type": "function",
            "docstring": "Used by the widgets internally to call the ancestor widget types's event handler LV_RESULT_OK: the target object was not deleted in the event; LV_RESULT_INVALID: it was deleted in the event_code ",
            "args": [
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the class of the widget (NOT the ancestor class) "
                },
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_current_target_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the target of the event_code "
            },
            "json_type": "function",
            "docstring": "Get the current target of the event. It's the object which event handler being called. If the event is not bubbled it's the same as \"original\" target. the target of the event_code ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_event_get_target_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the original target of the event_code "
            },
            "json_type": "function",
            "docstring": "Get the object originally targeted by the event. It's the same even if the event is bubbled. pointer to the original target of the event_code ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the event descriptor "
                }
            ]
        },
        {
            "name": "lv_obj_add_event_cb",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "handler to the event. It can be used in lv_obj_remove_event_dsc . "
            },
            "json_type": "function",
            "docstring": "Add an event handler function for an object. Used by the user to react on event which happens with the object. An object can have multiple event handler. They will be called in the same order as they were added. handler to the event. It can be used in lv_obj_remove_event_dsc . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new event function "
                },
                {
                    "name": "filter",
                    "type": {
                        "name": "lv_event_code_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an event code (e.g. LV_EVENT_CLICKED ) on which the event should be called. LV_EVENT_ALL can be used to receive all the events. "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "custom data will be available in event_cb "
                }
            ]
        },
        {
            "name": "lv_obj_get_event_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_get_event_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_event_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_remove_event",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_remove_event_cb",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_remove_event_dsc",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_event_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_obj_remove_event_cb_with_user_data",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the count of the event removed "
            },
            "json_type": "function",
            "docstring": "Remove an event_cb with user_data the count of the event removed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a obj "
                },
                {
                    "name": "event_cb",
                    "type": {
                        "name": "lv_event_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the event_cb of the event to remove "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "user_data "
                }
            ]
        },
        {
            "name": "lv_event_get_indev",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_indev_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the indev that triggered the event or NULL if called on a not indev related event "
            },
            "json_type": "function",
            "docstring": "Get the input device passed as parameter to indev related events. the indev that triggered the event or NULL if called on a not indev related event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_layer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_layer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to a draw context or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get the draw context which should be the first parameter of the draw functions. Namely: LV_EVENT_DRAW_MAIN/POST , LV_EVENT_DRAW_MAIN/POST_BEGIN , LV_EVENT_DRAW_MAIN/POST_END  pointer to a draw context or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_old_size",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the old absolute area of the object or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get the old area of the object before its size was changed. Can be used in LV_EVENT_SIZE_CHANGED  the old absolute area of the object or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_key",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the triggering key or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get the key passed as parameter to an event. Can be used in LV_EVENT_KEY  the triggering key or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_rotary_diff",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the triggering key or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get the signed rotary encoder diff. passed as parameter to an event. Can be used in LV_EVENT_ROTARY  the triggering key or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_scroll_anim",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the animation that will scroll the object. (can be modified as required) "
            },
            "json_type": "function",
            "docstring": "Get the animation descriptor of a scrolling. Can be used in LV_EVENT_SCROLL_BEGIN  the animation that will scroll the object. (can be modified as required) ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_set_ext_draw_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the new extra draw size. Can be used in LV_EVENT_REFR_EXT_DRAW_SIZE ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The new extra draw size "
                }
            ]
        },
        {
            "name": "lv_event_get_self_size_info",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to :ref:`lv_point_t` or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get a pointer to an :ref:`lv_point_t` variable in which the self size should be saved (width in point->x and height point->y ). Can be used in LV_EVENT_GET_SELF_SIZE  pointer to :ref:`lv_point_t` or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_hit_test_info",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_hit_test_info_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to lv_hit_test_info_t or NULL if called on an unrelated event "
            },
            "json_type": "function",
            "docstring": "Get a pointer to an lv_hit_test_info_t variable in which the hit test result should be saved. Can be used in LV_EVENT_HIT_TEST  pointer to lv_hit_test_info_t or NULL if called on an unrelated event ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_get_cover_area",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "an area with absolute coordinates to check "
            },
            "json_type": "function",
            "docstring": "Get a pointer to an area which should be examined whether the object fully covers it or not. Can be used in LV_EVENT_HIT_TEST  an area with absolute coordinates to check ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_event_set_cover_res",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the result of cover checking. Can be used in LV_EVENT_COVER_CHECK ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                },
                {
                    "name": "res",
                    "type": {
                        "name": "lv_cover_res_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an element of lv_cover_check_info_t "
                }
            ]
        },
        {
            "name": "lv_event_get_draw_task",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_task_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the added draw task "
            },
            "json_type": "function",
            "docstring": "Get the draw task which was just added. Can be used in LV_EVENT_DRAW_TASK_ADDED event  the added draw task ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an event "
                }
            ]
        },
        {
            "name": "lv_obj_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new object "
            },
            "json_type": "function",
            "docstring": "Create a base object (a rectangle) pointer to the new object ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a parent object. If NULL then a screen will be created. "
                }
            ]
        },
        {
            "name": "lv_obj_add_flag",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set one or more flags ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "f",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_obj_flag_t to set. "
                }
            ]
        },
        {
            "name": "lv_obj_remove_flag",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove one or more flags ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "f",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_obj_flag_t to clear. "
                }
            ]
        },
        {
            "name": "lv_obj_update_flag",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set add or remove one or more flags. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "f",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_obj_flag_t to update. "
                },
                {
                    "name": "v",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: add the flags; false: remove the flags "
                }
            ]
        },
        {
            "name": "lv_obj_add_state",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add one or more states to the object. The other state bits will remain unchanged. If specified in the styles, transition animation will be started from the previous state to the current. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the states to add. E.g LV_STATE_PRESSED | LV_STATE_FOCUSED "
                }
            ]
        },
        {
            "name": "lv_obj_remove_state",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove one or more states to the object. The other state bits will remain unchanged. If specified in the styles, transition animation will be started from the previous state to the current. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the states to add. E.g LV_STATE_PRESSED | LV_STATE_FOCUSED "
                }
            ]
        },
        {
            "name": "lv_obj_set_state",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add or remove one or more states to the object. The other state bits will remain unchanged. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the states to add. E.g LV_STATE_PRESSED | LV_STATE_FOCUSED "
                },
                {
                    "name": "v",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: add the states; false: remove the states "
                }
            ]
        },
        {
            "name": "lv_obj_set_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the user_data field of the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new user_data. "
                }
            ]
        },
        {
            "name": "lv_obj_has_flag",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: all flags are set; false: not all flags are set "
            },
            "json_type": "function",
            "docstring": "Check if a given flag or all the given flags are set on an object. true: all flags are set; false: not all flags are set ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "f",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the flag(s) to check (OR-ed values can be used) "
                }
            ]
        },
        {
            "name": "lv_obj_has_flag_any",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: at least one flag is set; false: none of the flags are set "
            },
            "json_type": "function",
            "docstring": "Check if a given flag or any of the flags are set on an object. true: at least one flag is set; false: none of the flags are set ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "f",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the flag(s) to check (OR-ed values can be used) "
                }
            ]
        },
        {
            "name": "lv_obj_get_state",
            "type": {
                "type": {
                    "name": "lv_state_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the state (OR-ed values from lv_state_t ) "
            },
            "json_type": "function",
            "docstring": "Get the state of an object the state (OR-ed values from lv_state_t ) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_has_state",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: obj is in state ; false: obj is not in state "
            },
            "json_type": "function",
            "docstring": "Check if the object is in a given state or not. true: obj is in state ; false: obj is not in state ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a state or combination of states to check "
                }
            ]
        },
        {
            "name": "lv_obj_get_group",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_group_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the pointer to group of the object "
            },
            "json_type": "function",
            "docstring": "Get the group of the object the pointer to group of the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the pointer to the user_data of the object "
            },
            "json_type": "function",
            "docstring": "Get the user_data field of the object the pointer to the user_data of the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_allocate_spec_attr",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Allocate special data for an object if not allocated yet. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_check_type",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: class_p is the obj class. "
            },
            "json_type": "function",
            "docstring": "Check the type of obj. true: class_p is the obj class. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a class to check (e.g. lv_slider_class ) "
                }
            ]
        },
        {
            "name": "lv_obj_has_class",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: obj has the given class "
            },
            "json_type": "function",
            "docstring": "Check if any object has a given class (type). It checks the ancestor classes too. true: obj has the given class ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a class to check (e.g. lv_slider_class ) "
                }
            ]
        },
        {
            "name": "lv_obj_get_class",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_class_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the class (type) of the object "
            },
            "json_type": "function",
            "docstring": "Get the class (type) of the object the class (type) of the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_is_valid",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: valid "
            },
            "json_type": "function",
            "docstring": "Check if any object is still \"alive\". true: valid ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_null_on_delete",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Utility to set an object reference to NULL when it gets deleted. The reference should be in a location that will not become invalid during the object's lifetime, i.e. static or allocated. ",
            "args": [
                {
                    "name": "obj_ptr",
                    "type": {
                        "type": {
                            "type": {
                                "name": "lv_obj_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a pointer to a pointer to an object "
                }
            ]
        },
        {
            "name": "lv_refr_now",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Redraw the invalidated areas now. Normally the redrawing is periodically executed in lv_timer_handler but a long blocking process can prevent the call of lv_timer_handler . In this case if the GUI is updated in the process (e.g. progress bar) this function can be called when the screen should be updated. ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display to refresh. NULL to refresh all displays. "
                }
            ]
        },
        {
            "name": "lv_obj_redraw",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Redrawn on object and all its children using the passed draw context ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer where to draw. "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start object from the redraw should start "
                }
            ]
        },
        {
            "name": "lv_binfont_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to font where to load "
            },
            "json_type": "function",
            "docstring": "Loads a lv_font_t object from a binary font file pointer to font where to load ",
            "args": [
                {
                    "name": "path",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "path to font file "
                }
            ]
        },
        {
            "name": "lv_binfont_destroy",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Frees the memory allocated by the :ref:`lv_binfont_create()` function ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "lv_font_t object created by the lv_binfont_create function "
                }
            ]
        },
        {
            "name": "lv_font_get_bitmap_fmt_txt",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to an A8 bitmap (not necessarily bitmap_out) or NULL if unicode_letter not found "
            },
            "json_type": "function",
            "docstring": "Used as get_glyph_bitmap callback in lvgl's native font format if the font is uncompressed. pointer to an A8 bitmap (not necessarily bitmap_out) or NULL if unicode_letter not found ",
            "args": [
                {
                    "name": "g_dsc",
                    "type": {
                        "type": {
                            "name": "lv_font_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the glyph descriptor including which font to use, which supply the glyph_index and format. "
                },
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a draw buffer that can be used to store the bitmap of the glyph, it's OK not to use it. "
                }
            ]
        },
        {
            "name": "lv_font_get_glyph_dsc_fmt_txt",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: descriptor is successfully loaded into dsc_out . false: the letter was not found, no data is loaded to dsc_out "
            },
            "json_type": "function",
            "docstring": "Used as get_glyph_dsc callback in lvgl's native font format if the font is uncompressed. true: descriptor is successfully loaded into dsc_out . false: the letter was not found, no data is loaded to dsc_out ",
            "args": [
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to font "
                },
                {
                    "name": "dsc_out",
                    "type": {
                        "type": {
                            "name": "lv_font_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the result descriptor here "
                },
                {
                    "name": "unicode_letter",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a UNICODE letter code "
                },
                {
                    "name": "unicode_letter_next",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the unicode letter succeeding the letter under test "
                }
            ]
        },
        {
            "name": "lv_image_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created image "
            },
            "json_type": "function",
            "docstring": "Create an image object pointer to the created image ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new image "
                }
            ]
        },
        {
            "name": "lv_image_set_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the image data to display on the object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "1) pointer to an :ref:`lv_image_dsc_t` descriptor (converted by LVGL's image converter) (e.g. &my_img) or 2) path to an image file (e.g. \"S:/dir/img.bin\")or 3) a SYMBOL (e.g. LV_SYMBOL_OK) "
                }
            ]
        },
        {
            "name": "lv_image_set_offset_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an offset for the source of an image so the image will be displayed from the new origin. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new offset along x axis. "
                }
            ]
        },
        {
            "name": "lv_image_set_offset_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an offset for the source of an image. so the image will be displayed from the new origin. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new offset along y axis. "
                }
            ]
        },
        {
            "name": "lv_image_set_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the rotation angle of the image. The image will be rotated around the set pivot set by :ref:`lv_image_set_pivot()` Note that indexed and alpha only images can't be transformed. if image_align is LV_IMAGE_ALIGN_STRETCH or LV_IMAGE_ALIGN_FIT rotation will be set to 0 automatically. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "angle",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "rotation in degree with 0.1 degree resolution (0..3600: clock wise) "
                }
            ]
        },
        {
            "name": "lv_image_set_pivot",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the rotation center of the image. The image will be rotated around this point. x, y can be set with value of LV_PCT, lv_image_get_pivot will return the true pixel coordinate of pivot in this case. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "rotation center x of the image "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "rotation center y of the image "
                }
            ]
        },
        {
            "name": "lv_image_set_scale",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the zoom factor of the image. Note that indexed and alpha only images can't be transformed. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "zoom",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the zoom factor. Example values: 256 or LV_ZOOM_IMAGE_NONE: no zoom <256: scale down >256: scale up 128: half size 512: double size "
                }
            ]
        },
        {
            "name": "lv_image_set_scale_x",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the horizontal zoom factor of the image. Note that indexed and alpha only images can't be transformed. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "zoom",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the zoom factor. Example values: 256 or LV_ZOOM_IMAGE_NONE: no zoom <256: scale down >256: scale up 128: half size 512: double size "
                }
            ]
        },
        {
            "name": "lv_image_set_scale_y",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the vertical zoom factor of the image. Note that indexed and alpha only images can't be transformed. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "zoom",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the zoom factor. Example values: 256 or LV_ZOOM_IMAGE_NONE: no zoom <256: scale down >256: scale up 128: half size 512: double size "
                }
            ]
        },
        {
            "name": "lv_image_set_blend_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the blend mode of an image. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "blend_mode",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new blend mode "
                }
            ]
        },
        {
            "name": "lv_image_set_antialias",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable/disable anti-aliasing for the transformations (rotate, zoom) or not. The quality is better with anti-aliasing looks better but slower. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "antialias",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: anti-aliased; false: not anti-aliased "
                }
            ]
        },
        {
            "name": "lv_image_set_inner_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the image object size mode. if image_align is LV_IMAGE_ALIGN_STRETCH or LV_IMAGE_ALIGN_FIT rotation, scale and pivot will be overwritten and controlled internally. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_image_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new align mode. "
                }
            ]
        },
        {
            "name": "lv_image_set_bitmap_map_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an A8 bitmap mask for the image. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an :ref:`lv_image_dsc_t` bitmap mask source. "
                }
            ]
        },
        {
            "name": "lv_image_get_src",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the image source (symbol, file name or ::lv-img_dsc_t for C arrays) "
            },
            "json_type": "function",
            "docstring": "Get the source of the image the image source (symbol, file name or ::lv-img_dsc_t for C arrays) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_offset_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "offset X value. "
            },
            "json_type": "function",
            "docstring": "Get the offset's x attribute of the image object. offset X value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image "
                }
            ]
        },
        {
            "name": "lv_image_get_offset_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "offset Y value. "
            },
            "json_type": "function",
            "docstring": "Get the offset's y attribute of the image object. offset Y value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image "
                }
            ]
        },
        {
            "name": "lv_image_get_rotation",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "rotation in 0.1 degrees (0..3600) "
            },
            "json_type": "function",
            "docstring": "Get the rotation of the image. rotation in 0.1 degrees (0..3600)  if image_align is LV_IMAGE_ALIGN_STRETCH or LV_IMAGE_ALIGN_FIT rotation will be set to 0 automatically. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_pivot",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the pivot (rotation center) of the image. If pivot is set with LV_PCT, convert it to px before return. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                },
                {
                    "name": "pivot",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the rotation center here "
                }
            ]
        },
        {
            "name": "lv_image_get_scale",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "zoom factor (256: no zoom) "
            },
            "json_type": "function",
            "docstring": "Get the zoom factor of the image. zoom factor (256: no zoom) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_scale_x",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "zoom factor (256: no zoom) "
            },
            "json_type": "function",
            "docstring": "Get the horizontal zoom factor of the image. zoom factor (256: no zoom) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_scale_y",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "zoom factor (256: no zoom) "
            },
            "json_type": "function",
            "docstring": "Get the vertical zoom factor of the image. zoom factor (256: no zoom) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_blend_mode",
            "type": {
                "type": {
                    "name": "lv_blend_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current blend mode "
            },
            "json_type": "function",
            "docstring": "Get the current blend mode of the image the current blend mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_antialias",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: anti-aliased; false: not anti-aliased "
            },
            "json_type": "function",
            "docstring": "Get whether the transformations (rotate, zoom) are anti-aliased or not true: anti-aliased; false: not anti-aliased ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_inner_align",
            "type": {
                "type": {
                    "name": "lv_image_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "element of lv_image_align_t "
            },
            "json_type": "function",
            "docstring": "Get the size mode of the image element of lv_image_align_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_image_get_bitmap_map_src",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_image_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "an :ref:`lv_image_dsc_t` bitmap mask source. "
            },
            "json_type": "function",
            "docstring": "Get the bitmap mask source. an :ref:`lv_image_dsc_t` bitmap mask source. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image object "
                }
            ]
        },
        {
            "name": "lv_animimg_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created animation image object "
            },
            "json_type": "function",
            "docstring": "Create an animation image objects pointer to the created animation image object ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new button "
                }
            ]
        },
        {
            "name": "lv_animimg_set_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the image animation images source. ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "type": {
                                "name": "void",
                                "json_type": "primitive_type",
                                "quals": [
                                    "const"
                                ]
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a series images "
                },
                {
                    "name": "num",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "images' number "
                }
            ]
        },
        {
            "name": "lv_animimg_start",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Startup the image animation. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_animimg_set_duration",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the image animation duration time. unit:ms ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the duration in milliseconds "
                }
            ]
        },
        {
            "name": "lv_animimg_set_repeat_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the image animation repeatedly play times. ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                },
                {
                    "name": "count",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the number of times to repeat the animation "
                }
            ]
        },
        {
            "name": "lv_animimg_get_src",
            "type": {
                "type": {
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer that will point to a series images "
            },
            "json_type": "function",
            "docstring": "Get the image animation images source. a pointer that will point to a series images ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_animimg_get_src_count",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of source images "
            },
            "json_type": "function",
            "docstring": "Get the image animation images source. the number of source images ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_animimg_get_duration",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the animation duration time "
            },
            "json_type": "function",
            "docstring": "Get the image animation duration time. unit:ms the animation duration time ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_animimg_get_repeat_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the repeat count "
            },
            "json_type": "function",
            "docstring": "Get the image animation repeat play times. the repeat count ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_animimg_get_anim",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_anim_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the animation reference "
            },
            "json_type": "function",
            "docstring": "Get the image animation underlying animation. the animation reference ",
            "args": [
                {
                    "name": "img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an animation image object "
                }
            ]
        },
        {
            "name": "lv_arc_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created arc "
            },
            "json_type": "function",
            "docstring": "Create an arc object pointer to the created arc ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new arc "
                }
            ]
        },
        {
            "name": "lv_arc_set_start_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start angle of an arc. 0 deg: right, 90 bottom, etc. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start angle. (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_end_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the end angle of an arc. 0 deg: right, 90 bottom, etc. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_angles",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start and end angles ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_bg_start_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start angle of an arc background. 0 deg: right, 90 bottom, etc. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_bg_end_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start angle of an arc background. 0 deg: right, 90 bottom etc. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_bg_angles",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the start and end angles of the arc background ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "start",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the start angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                },
                {
                    "name": "end",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the end angle (if LV_USE_FLOAT is enabled it can be fractional too.) "
                }
            ]
        },
        {
            "name": "lv_arc_set_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the rotation for the whole arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "rotation",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "rotation angle "
                }
            ]
        },
        {
            "name": "lv_arc_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the type of arc. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to arc object "
                },
                {
                    "name": "type",
                    "type": {
                        "name": "lv_arc_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "arc's mode "
                }
            ]
        },
        {
            "name": "lv_arc_set_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new value on the arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new value "
                }
            ]
        },
        {
            "name": "lv_arc_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set minimum and the maximum values of an arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the arc object "
                },
                {
                    "name": "min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value "
                }
            ]
        },
        {
            "name": "lv_arc_set_change_rate",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a change rate to limit the speed how fast the arc should reach the pressed point. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "rate",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the change rate "
                }
            ]
        },
        {
            "name": "lv_arc_set_knob_offset",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an offset angle for the knob ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "offset",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "knob offset from main arc in degrees "
                }
            ]
        },
        {
            "name": "lv_arc_get_angle_start",
            "type": {
                "type": {
                    "name": "lv_value_precise_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the start angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) "
            },
            "json_type": "function",
            "docstring": "Get the start angle of an arc. the start angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_angle_end",
            "type": {
                "type": {
                    "name": "lv_value_precise_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the end angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) "
            },
            "json_type": "function",
            "docstring": "Get the end angle of an arc. the end angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_bg_angle_start",
            "type": {
                "type": {
                    "name": "lv_value_precise_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the start angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) "
            },
            "json_type": "function",
            "docstring": "Get the start angle of an arc background. the start angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_bg_angle_end",
            "type": {
                "type": {
                    "name": "lv_value_precise_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the end angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) "
            },
            "json_type": "function",
            "docstring": "Get the end angle of an arc background. the end angle [0..360] (if LV_USE_FLOAT is enabled it can be fractional too.) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value of the arc "
            },
            "json_type": "function",
            "docstring": "Get the value of an arc the value of the arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_min_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the minimum value of the arc "
            },
            "json_type": "function",
            "docstring": "Get the minimum value of an arc the minimum value of the arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_max_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the maximum value of the arc "
            },
            "json_type": "function",
            "docstring": "Get the maximum value of an arc the maximum value of the arc ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_mode",
            "type": {
                "type": {
                    "name": "lv_arc_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "arc's mode "
            },
            "json_type": "function",
            "docstring": "Get whether the arc is type or not. arc's mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_rotation",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "arc's current rotation "
            },
            "json_type": "function",
            "docstring": "Get the rotation for the whole arc arc's current rotation ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_get_knob_offset",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "arc's current knob offset "
            },
            "json_type": "function",
            "docstring": "Get the current knob angle offset arc's current knob offset ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                }
            ]
        },
        {
            "name": "lv_arc_align_obj_to_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Align an object to the current position of the arc (knob) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "obj_to_align",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to align "
                },
                {
                    "name": "r_offset",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "consider the radius larger with this value (< 0: for smaller radius) "
                }
            ]
        },
        {
            "name": "lv_arc_rotate_obj_to_angle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Rotate an object to the current position of the arc (knob) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc object "
                },
                {
                    "name": "obj_to_rotate",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to rotate "
                },
                {
                    "name": "r_offset",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "consider the radius larger with this value (< 0: for smaller radius) "
                }
            ]
        },
        {
            "name": "lv_label_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created button "
            },
            "json_type": "function",
            "docstring": "Create a label object pointer to the created button ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new label. "
                }
            ]
        },
        {
            "name": "lv_label_set_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new text for a label. Memory will be allocated to store the text by the label. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "'\\0' terminated character string. NULL to refresh with the current text. "
                }
            ]
        },
        {
            "name": "lv_label_set_text_fmt",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new formatted text for a label. Memory will be allocated to store the text by the label. lv_label_set_text_fmt(label1, \"%d user\", user_num); ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "fmt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "printf -like format "
                },
                {
                    "name": "...",
                    "type": {
                        "name": "ellipsis",
                        "json_type": "special_type"
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_label_set_text_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a static text. It will not be saved by the label so the 'text' variable has to be 'alive' while the label exists. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text. NULL to refresh with the current text. "
                }
            ]
        },
        {
            "name": "lv_label_set_long_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the behavior of the label with text longer than the object size ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "long_mode",
                    "type": {
                        "name": "lv_label_long_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new mode from 'lv_label_long_mode' enum. In LV_LONG_WRAP/DOT/SCROLL/SCROLL_CIRC the size of the label should be set AFTER this function "
                }
            ]
        },
        {
            "name": "lv_label_set_text_selection_start",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set where text selection should start ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "character index from where selection should start. LV_LABEL_TEXT_SELECTION_OFF for no selection "
                }
            ]
        },
        {
            "name": "lv_label_set_text_selection_end",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set where text selection should end ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "character index where selection should end. LV_LABEL_TEXT_SELECTION_OFF for no selection "
                }
            ]
        },
        {
            "name": "lv_label_get_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the text of the label "
            },
            "json_type": "function",
            "docstring": "Get the text of a label the text of the label ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                }
            ]
        },
        {
            "name": "lv_label_get_long_mode",
            "type": {
                "type": {
                    "name": "lv_label_long_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current long mode "
            },
            "json_type": "function",
            "docstring": "Get the long mode of a label the current long mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                }
            ]
        },
        {
            "name": "lv_label_get_letter_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the relative x and y coordinates of a letter ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "char_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "index of the character [0 ... text length - 1]. Expressed in character index, not byte index (different in UTF-8) "
                },
                {
                    "name": "pos",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the result here (E.g. index = 0 gives 0;0 coordinates if the text if aligned to the left) "
                }
            ]
        },
        {
            "name": "lv_label_get_letter_on",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The index of the letter on the 'pos_p' point (E.g. on 0;0 is the 0. letter if aligned to the left) Expressed in character index and not byte index (different in UTF-8) "
            },
            "json_type": "function",
            "docstring": "Get the index of letter on a relative point of a label. The index of the letter on the 'pos_p' point (E.g. on 0;0 is the 0. letter if aligned to the left) Expressed in character index and not byte index (different in UTF-8) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to label object "
                },
                {
                    "name": "pos_in",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to point with coordinates on a the label "
                },
                {
                    "name": "bidi",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "whether to use bidi processed "
                }
            ]
        },
        {
            "name": "lv_label_is_char_under_pos",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "whether a character is drawn under the point "
            },
            "json_type": "function",
            "docstring": "Check if a character is drawn under a point. whether a character is drawn under the point ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "pos",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Point to check for character under "
                }
            ]
        },
        {
            "name": "lv_label_get_text_selection_start",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "selection start index. LV_LABEL_TEXT_SELECTION_OFF if nothing is selected. "
            },
            "json_type": "function",
            "docstring": "selection start index. LV_LABEL_TEXT_SELECTION_OFF if nothing is selected. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object. "
                }
            ]
        },
        {
            "name": "lv_label_get_text_selection_end",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "selection end index. LV_LABEL_TXT_SEL_OFF if nothing is selected. "
            },
            "json_type": "function",
            "docstring": "selection end index. LV_LABEL_TXT_SEL_OFF if nothing is selected. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object. "
                }
            ]
        },
        {
            "name": "lv_label_ins_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Insert a text to a label. The label text cannot be static. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "character index to insert. Expressed in character index and not byte index. 0: before first char. LV_LABEL_POS_LAST: after last char. "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the text to insert "
                }
            ]
        },
        {
            "name": "lv_label_cut_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete characters from a label. The label text cannot be static. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label object "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "character index from where to cut. Expressed in character index and not byte index. 0: start in front of the first character "
                },
                {
                    "name": "cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of characters to cut "
                }
            ]
        },
        {
            "name": "lv_bar_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created bar "
            },
            "json_type": "function",
            "docstring": "Create a bar object pointer to the created bar ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new bar "
                }
            ]
        },
        {
            "name": "lv_bar_set_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new value on the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new value "
                },
                {
                    "name": "anim",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately "
                }
            ]
        },
        {
            "name": "lv_bar_set_start_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new start value on the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                },
                {
                    "name": "start_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new start value "
                },
                {
                    "name": "anim",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately "
                }
            ]
        },
        {
            "name": "lv_bar_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set minimum and the maximum values of a bar If min is greater than max, the drawing direction becomes to the opposite direction. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the bar object "
                },
                {
                    "name": "min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value "
                }
            ]
        },
        {
            "name": "lv_bar_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the type of bar. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to bar object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_bar_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "bar type from lv_bar_mode_t "
                }
            ]
        },
        {
            "name": "lv_bar_set_orientation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the orientation of bar. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to bar object "
                },
                {
                    "name": "orientation",
                    "type": {
                        "name": "lv_bar_orientation_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "bar orientation from lv_bar_orientation_t "
                }
            ]
        },
        {
            "name": "lv_bar_get_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value of the bar "
            },
            "json_type": "function",
            "docstring": "Get the value of a bar the value of the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                }
            ]
        },
        {
            "name": "lv_bar_get_start_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the start value of the bar "
            },
            "json_type": "function",
            "docstring": "Get the start value of a bar the start value of the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                }
            ]
        },
        {
            "name": "lv_bar_get_min_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the minimum value of the bar "
            },
            "json_type": "function",
            "docstring": "Get the minimum value of a bar the minimum value of the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                }
            ]
        },
        {
            "name": "lv_bar_get_max_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the maximum value of the bar "
            },
            "json_type": "function",
            "docstring": "Get the maximum value of a bar the maximum value of the bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a bar object "
                }
            ]
        },
        {
            "name": "lv_bar_get_mode",
            "type": {
                "type": {
                    "name": "lv_bar_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "bar type from lv_bar_mode_t "
            },
            "json_type": "function",
            "docstring": "Get the type of bar. bar type from lv_bar_mode_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to bar object "
                }
            ]
        },
        {
            "name": "lv_bar_get_orientation",
            "type": {
                "type": {
                    "name": "lv_bar_orientation_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "bar orientation from lv_bar_orientation_t "
            },
            "json_type": "function",
            "docstring": "Get the orientation of bar. bar orientation from lv_bar_orientation_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to bar object "
                }
            ]
        },
        {
            "name": "lv_bar_is_symmetrical",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: in symmetrical mode false : not in "
            },
            "json_type": "function",
            "docstring": "Give the bar is in symmetrical mode or not true: in symmetrical mode false : not in ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to bar object "
                }
            ]
        },
        {
            "name": "lv_button_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created button "
            },
            "json_type": "function",
            "docstring": "Create a button object pointer to the created button ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new button "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created button matrix "
            },
            "json_type": "function",
            "docstring": "Create a button matrix object pointer to the created button matrix ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new button matrix "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_map",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new map. Buttons will be created/deleted according to the map. The button matrix keeps a reference to the map and so the string array must not be deallocated during the life of the matrix. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "map",
                    "type": {
                        "type": {
                            "type": {
                                "name": "char",
                                "json_type": "primitive_type",
                                "quals": [
                                    "const"
                                ]
                            },
                            "json_type": "pointer",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer a string array. The last string has to be: \"\". Use \"\\n\" to make a line break. "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_ctrl_map",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the button control map (hidden, disabled etc.) for a button matrix. The control map array will be copied and so may be deallocated after this function returns. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "ctrl_map",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array of lv_button_ctrl_t control bytes. The length of the array and position of the elements must match the number and order of the individual buttons (i.e. excludes newline entries). An element of the map should look like e.g.: ctrl_map[0] = width | LV_BUTTONMATRIX_CTRL_NO_REPEAT | LV_BUTTONMATRIX_CTRL_TGL_ENABLE "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_selected_button",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the selected buttons ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0 based index of the button to modify. (Not counting new lines) "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_button_ctrl",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the attributes of a button of the button matrix ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0 based index of the button to modify. (Not counting new lines) "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed attributes. E.g. LV_BUTTONMATRIX_CTRL_NO_REPEAT | LV_BUTTONMATRIX_CTRL_CHECKABLE "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_clear_button_ctrl",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear the attributes of a button of the button matrix ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0 based index of the button to modify. (Not counting new lines) "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed attributes. E.g. LV_BUTTONMATRIX_CTRL_NO_REPEAT | LV_BUTTONMATRIX_CTRL_CHECKABLE "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_button_ctrl_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set attributes of all buttons of a button matrix ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "attribute(s) to set from lv_buttonmatrix_ctrl_t . Values can be ORed. "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_clear_button_ctrl_all",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear the attributes of all buttons of a button matrix ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "attribute(s) to set from lv_buttonmatrix_ctrl_t . Values can be ORed. "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_button_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a single button's relative width. This method will cause the matrix be regenerated and is a relatively expensive operation. It is recommended that initial width be specified using lv_buttonmatrix_set_ctrl_map and this method only be used for dynamic changes. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "0 based index of the button to modify. "
                },
                {
                    "name": "width",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "relative width compared to the buttons in the same row. [1..15] "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_set_one_checked",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Make the button matrix like a selector widget (only one button may be checked at a time). LV_BUTTONMATRIX_CTRL_CHECKABLE must be enabled on the buttons to be selected using lv_buttonmatrix_set_ctrl() or :ref:`lv_buttonmatrix_set_button_ctrl_all()` . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "whether \"one check\" mode is enabled "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_get_map",
            "type": {
                "type": {
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current map "
            },
            "json_type": "function",
            "docstring": "Get the current map of a button matrix the current map ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_get_selected_button",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "index of the last released button (LV_BUTTONMATRIX_BUTTON_NONE: if unset) "
            },
            "json_type": "function",
            "docstring": "Get the index of the lastly \"activated\" button by the user (pressed, released, focused etc) Useful in the event_cb to get the text of the button, check if hidden etc. index of the last released button (LV_BUTTONMATRIX_BUTTON_NONE: if unset) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_get_button_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "text of btn_index` button "
            },
            "json_type": "function",
            "docstring": "Get the button's text text of btn_index` button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index a button not counting new line characters. "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_has_button_ctrl",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the control attribute is enabled false: disabled "
            },
            "json_type": "function",
            "docstring": "Get the whether a control value is enabled or disabled for button of a button matrix true: the control attribute is enabled false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of a button not counting new line characters. "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "control values to check (ORed value can be used) "
                }
            ]
        },
        {
            "name": "lv_buttonmatrix_get_one_checked",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: \"one check\" mode is enabled; false: disabled "
            },
            "json_type": "function",
            "docstring": "Tell whether \"one check\" mode is enabled or not. true: \"one check\" mode is enabled; false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Button matrix object "
                }
            ]
        },
        {
            "name": "lv_calendar_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer the created calendar "
            },
            "json_type": "function",
            "docstring": "Create a calendar widget pointer the created calendar ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new calendar "
                }
            ]
        },
        {
            "name": "lv_calendar_set_today_date",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the today's date ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "year",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "today's year "
                },
                {
                    "name": "month",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "today's month [1..12] "
                },
                {
                    "name": "day",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "today's day [1..31] "
                }
            ]
        },
        {
            "name": "lv_calendar_set_showed_date",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the currently showed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "year",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "today's year "
                },
                {
                    "name": "month",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "today's month [1..12] "
                }
            ]
        },
        {
            "name": "lv_calendar_set_highlighted_dates",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the highlighted dates ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "highlighted",
                    "type": {
                        "name": "lv_calendar_date_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an :ref:`lv_calendar_date_t` array containing the dates. Only the pointer will be saved so this variable can't be local which will be destroyed later. "
                },
                {
                    "name": "date_num",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of dates in the array "
                }
            ]
        },
        {
            "name": "lv_calendar_set_day_names",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the name of the days ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "day_names",
                    "type": {
                        "type": {
                            "type": {
                                "name": "char",
                                "json_type": "primitive_type",
                                "quals": [
                                    "const"
                                ]
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array with the names. E.g. const char * days[7] = {\"Sun\", \"Mon\", ...} Only the pointer will be saved so this variable can't be local which will be destroyed later. "
                }
            ]
        },
        {
            "name": "lv_calendar_get_btnmatrix",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to a the button matrix "
            },
            "json_type": "function",
            "docstring": "Get the button matrix object of the calendar. It shows the dates and day names. pointer to a the button matrix ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                }
            ]
        },
        {
            "name": "lv_calendar_get_today_date",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_calendar_date_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "return pointer to an :ref:`lv_calendar_date_t` variable containing the date of today. "
            },
            "json_type": "function",
            "docstring": "Get the today's date return pointer to an :ref:`lv_calendar_date_t` variable containing the date of today. ",
            "args": [
                {
                    "name": "calendar",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                }
            ]
        },
        {
            "name": "lv_calendar_get_showed_date",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_calendar_date_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to an :ref:`lv_calendar_date_t` variable containing the date is being shown. "
            },
            "json_type": "function",
            "docstring": "Get the currently showed pointer to an :ref:`lv_calendar_date_t` variable containing the date is being shown. ",
            "args": [
                {
                    "name": "calendar",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                }
            ]
        },
        {
            "name": "lv_calendar_get_highlighted_dates",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_calendar_date_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to an :ref:`lv_calendar_date_t` array containing the dates. "
            },
            "json_type": "function",
            "docstring": "Get the highlighted dates pointer to an :ref:`lv_calendar_date_t` array containing the dates. ",
            "args": [
                {
                    "name": "calendar",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                }
            ]
        },
        {
            "name": "lv_calendar_get_highlighted_dates_num",
            "type": {
                "type": {
                    "name": "size_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of highlighted days "
            },
            "json_type": "function",
            "docstring": "Get the number of the highlighted dates number of highlighted days ",
            "args": [
                {
                    "name": "calendar",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                }
            ]
        },
        {
            "name": "lv_calendar_get_pressed_date",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: there is a valid pressed date LV_RESULT_INVALID: there is no pressed data "
            },
            "json_type": "function",
            "docstring": "Get the currently pressed day LV_RESULT_OK: there is a valid pressed date LV_RESULT_INVALID: there is no pressed data ",
            "args": [
                {
                    "name": "calendar",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "date",
                    "type": {
                        "type": {
                            "name": "lv_calendar_date_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the pressed date here "
                }
            ]
        },
        {
            "name": "lv_calendar_header_arrow_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created header "
            },
            "json_type": "function",
            "docstring": "Create a calendar header with drop-drowns to select the year and month the created header ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object. "
                }
            ]
        },
        {
            "name": "lv_calendar_header_dropdown_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created header "
            },
            "json_type": "function",
            "docstring": "Create a calendar header with drop-drowns to select the year and month the created header ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object. "
                }
            ]
        },
        {
            "name": "lv_calendar_header_dropdown_set_year_list",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Sets a custom calendar year list ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a calendar object "
                },
                {
                    "name": "years_list",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an const char array with the years list, see lv_dropdown set_options for more information. E.g. `const char * years = \"2023\\n2022\\n2021\\n2020\\n2019\" Only the pointer will be saved so this variable can't be local which will be destroyed later. "
                }
            ]
        },
        {
            "name": "lv_canvas_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created canvas "
            },
            "json_type": "function",
            "docstring": "Create a canvas object pointer to the created canvas ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new canvas "
                }
            ]
        },
        {
            "name": "lv_canvas_set_buffer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a buffer for the canvas. \n\nUse :ref:`lv_canvas_set_draw_buf()` instead if you need to set a buffer with alignment requirement.  ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas object "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "buffer where content of canvas will be. The required size is (lv_image_color_format_get_px_size(cf) * w) / 8 * h) It can be allocated with :ref:`lv_malloc()` or it can be statically allocated array (e.g. static :ref:`lv_color_t` buf[100*50]) or it can be an address in RAM or external SRAM "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "width of canvas "
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "height of canvas "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "color format. LV_COLOR_FORMAT... "
                }
            ]
        },
        {
            "name": "lv_canvas_set_draw_buf",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a draw buffer for the canvas. A draw buffer either can be allocated by :ref:`lv_draw_buf_create()` or defined statically by LV_DRAW_BUF_DEFINE_STATIC . When buffer start address and stride has alignment requirement, it's recommended to use lv_draw_buf_create . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas object "
                },
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw buffer "
                }
            ]
        },
        {
            "name": "lv_canvas_set_px",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a pixel's color and opacity The following color formats are supported LV_COLOR_FORMAT_I1/2/4/8, LV_COLOR_FORMAT_A8, LV_COLOR_FORMAT_RGB565, LV_COLOR_FORMAT_RGB888, LV_COLOR_FORMAT_XRGB8888, LV_COLOR_FORMAT_ARGB8888 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of the pixel "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y coordinate of the pixel "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color "
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the opacity "
                }
            ]
        },
        {
            "name": "lv_canvas_set_palette",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the palette color of a canvas for index format. Valid only for LV_COLOR_FORMAT_I1/2/4/8 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to canvas object "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the palette color to set: for LV_COLOR_FORMAT_I1 : 0..1 for LV_COLOR_FORMAT_I2 : 0..3 for LV_COLOR_FORMAT_I4 : 0..15 for LV_COLOR_FORMAT_I8 : 0..255 "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color32_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color to set "
                }
            ]
        },
        {
            "name": "lv_canvas_get_draw_buf",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_buf_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_canvas_get_px",
            "type": {
                "type": {
                    "name": "lv_color32_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "ARGB8888 color of the pixel "
            },
            "json_type": "function",
            "docstring": "Get a pixel's color and opacity ARGB8888 color of the pixel ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas "
                },
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of the pixel "
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y coordinate of the pixel "
                }
            ]
        },
        {
            "name": "lv_canvas_get_image",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_image_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the image descriptor. "
            },
            "json_type": "function",
            "docstring": "Get the image of the canvas as a pointer to an :ref:`lv_image_dsc_t` variable. pointer to the image descriptor. ",
            "args": [
                {
                    "name": "canvas",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas object "
                }
            ]
        },
        {
            "name": "lv_canvas_get_buf",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the buffer "
            },
            "json_type": "function",
            "docstring": "Return the pointer for the buffer. It's recommended to use this function instead of the buffer form the return value of :ref:`lv_canvas_get_image()` as is can be aligned pointer to the buffer ",
            "args": [
                {
                    "name": "canvas",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas object "
                }
            ]
        },
        {
            "name": "lv_canvas_copy_buf",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy a buffer to the canvas ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas object "
                },
                {
                    "name": "canvas_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area of the canvas to copy "
                },
                {
                    "name": "dest_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer to store the copied data "
                },
                {
                    "name": "dest_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the area of the destination buffer to copy to. If omitted NULL, copy to the whole dest_buf "
                }
            ]
        },
        {
            "name": "lv_canvas_fill_bg",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Fill the canvas with color ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the background color "
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the desired opacity "
                }
            ]
        },
        {
            "name": "lv_canvas_init_layer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a layer to use LVGL's generic draw functions (lv_draw_rect/label/...) on the canvas. Needs to be usd in pair with lv_canvas_finish_layer . ",
            "args": [
                {
                    "name": "canvas",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas "
                },
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer variable to initialize "
                }
            ]
        },
        {
            "name": "lv_canvas_finish_layer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Wait until all the drawings are finished on layer. Needs to be usd in pair with lv_canvas_init_layer . ",
            "args": [
                {
                    "name": "canvas",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a canvas "
                },
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer to finalize "
                }
            ]
        },
        {
            "name": "lv_canvas_buf_size",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Just a wrapper to LV_CANVAS_BUF_SIZE for bindings. ",
            "args": [
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "bpp",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_chart_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created chart "
            },
            "json_type": "function",
            "docstring": "Create a chart object pointer to the created chart ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new chart "
                }
            ]
        },
        {
            "name": "lv_chart_set_type",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new type for a chart ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "type",
                    "type": {
                        "name": "lv_chart_type_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new type of the chart (from 'lv_chart_type_t' enum) "
                }
            ]
        },
        {
            "name": "lv_chart_set_point_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of points on a data line on a chart ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new number of points on the data lines "
                }
            ]
        },
        {
            "name": "lv_chart_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the minimal and maximal y values on an axis ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "axis",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_CHART_AXIS_PRIMARY_Y or LV_CHART_AXIS_SECONDARY_Y "
                },
                {
                    "name": "min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value of the y axis "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value of the y axis "
                }
            ]
        },
        {
            "name": "lv_chart_set_update_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set update mode of the chart object. Affects ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "update_mode",
                    "type": {
                        "name": "lv_chart_update_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the update mode "
                }
            ]
        },
        {
            "name": "lv_chart_set_div_line_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of horizontal and vertical division lines ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "hdiv",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of horizontal division lines "
                },
                {
                    "name": "vdiv",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of vertical division lines "
                }
            ]
        },
        {
            "name": "lv_chart_get_type",
            "type": {
                "type": {
                    "name": "lv_chart_type_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "type of the chart (from 'lv_chart_t' enum) "
            },
            "json_type": "function",
            "docstring": "Get the type of a chart type of the chart (from 'lv_chart_t' enum) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                }
            ]
        },
        {
            "name": "lv_chart_get_point_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "point number on each data line "
            },
            "json_type": "function",
            "docstring": "Get the data point number per data line on chart point number on each data line ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                }
            ]
        },
        {
            "name": "lv_chart_get_x_start_point",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the index of the current x start point in the data array "
            },
            "json_type": "function",
            "docstring": "Get the current index of the x-axis start point in the data array the index of the current x start point in the data array ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                }
            ]
        },
        {
            "name": "lv_chart_get_point_pos_by_id",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the position of a point to the chart. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to series "
                },
                {
                    "name": "id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index. "
                },
                {
                    "name": "p_out",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the result position here "
                }
            ]
        },
        {
            "name": "lv_chart_refresh",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Refresh a chart if its data line has changed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                }
            ]
        },
        {
            "name": "lv_chart_add_series",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_chart_series_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the allocated data series or NULL on failure "
            },
            "json_type": "function",
            "docstring": "Allocate and add a data series to the chart pointer to the allocated data series or NULL on failure ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "color of the data series "
                },
                {
                    "name": "axis",
                    "type": {
                        "name": "lv_chart_axis_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the y axis to which the series should be attached (LV_CHART_AXIS_PRIMARY_Y or LV_CHART_AXIS_SECONDARY_Y) "
                }
            ]
        },
        {
            "name": "lv_chart_remove_series",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deallocate and remove a data series from a chart ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "series",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                }
            ]
        },
        {
            "name": "lv_chart_hide_series",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Hide/Unhide a single series of a chart. ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object. "
                },
                {
                    "name": "series",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a series object "
                },
                {
                    "name": "hide",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: hide the series "
                }
            ]
        },
        {
            "name": "lv_chart_set_series_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Change the color of a series ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object. "
                },
                {
                    "name": "series",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a series object "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new color of the series "
                }
            ]
        },
        {
            "name": "lv_chart_get_series_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color of the series "
            },
            "json_type": "function",
            "docstring": "Get the color of a series the color of the series ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object. "
                },
                {
                    "name": "series",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a series object "
                }
            ]
        },
        {
            "name": "lv_chart_set_x_start_point",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the index of the x-axis start point in the data array. This point will be considers the first (left) point and the other points will be drawn after it. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the x point in the data array "
                }
            ]
        },
        {
            "name": "lv_chart_get_series_next",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_chart_series_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the next series or NULL if there is no more. "
            },
            "json_type": "function",
            "docstring": "Get the next series. the next series or NULL if there is no more. ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the previous series or NULL to get the first "
                }
            ]
        },
        {
            "name": "lv_chart_add_cursor",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_chart_cursor_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created cursor "
            },
            "json_type": "function",
            "docstring": "Add a cursor with a given color pointer to the created cursor ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "color of the cursor "
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "direction of the cursor. LV_DIR_RIGHT/LEFT/TOP/DOWN/HOR/VER/ALL . OR-ed values are possible "
                }
            ]
        },
        {
            "name": "lv_chart_set_cursor_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the coordinate of the cursor with respect to the paddings ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "cursor",
                    "type": {
                        "type": {
                            "name": "lv_chart_cursor_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the cursor "
                },
                {
                    "name": "pos",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new coordinate of cursor relative to the chart "
                }
            ]
        },
        {
            "name": "lv_chart_set_cursor_point",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Stick the cursor to a point ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "cursor",
                    "type": {
                        "type": {
                            "name": "lv_chart_cursor_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the cursor "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a series "
                },
                {
                    "name": "point_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the point's index or LV_CHART_POINT_NONE to not assign to any points. "
                }
            ]
        },
        {
            "name": "lv_chart_get_cursor_point",
            "type": {
                "type": {
                    "name": "lv_point_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "coordinate of the cursor as :ref:`lv_point_t` "
            },
            "json_type": "function",
            "docstring": "Get the coordinate of the cursor with respect to the paddings coordinate of the cursor as :ref:`lv_point_t` ",
            "args": [
                {
                    "name": "chart",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "cursor",
                    "type": {
                        "type": {
                            "name": "lv_chart_cursor_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to cursor "
                }
            ]
        },
        {
            "name": "lv_chart_set_all_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize all data points of a series with a value ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new value for all points. LV_CHART_POINT_NONE can be used to hide the points. "
                }
            ]
        },
        {
            "name": "lv_chart_set_next_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the next point's Y value according to the update mode policy. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new value of the next data "
                }
            ]
        },
        {
            "name": "lv_chart_set_next_value2",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the next point's X and Y value according to the update mode policy. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "x_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new X value of the next data "
                },
                {
                    "name": "y_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new Y value of the next data "
                }
            ]
        },
        {
            "name": "lv_chart_set_value_by_id",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an individual point's y value of a chart's series directly based on its index ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the x point in the array "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "value to assign to array point "
                }
            ]
        },
        {
            "name": "lv_chart_set_value_by_id2",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an individual point's x and y value of a chart's series directly based on its index Can be used only with LV_CHART_TYPE_SCATTER . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the x point in the array "
                },
                {
                    "name": "x_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new X value of the next data "
                },
                {
                    "name": "y_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new Y value of the next data "
                }
            ]
        },
        {
            "name": "lv_chart_set_ext_y_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an external array for the y data points to use for the chart NOTE: It is the users responsibility to make sure the point_cnt matches the external array size. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "array",
                    "type": {
                        "name": "int32_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "external array of points for chart "
                }
            ]
        },
        {
            "name": "lv_chart_set_ext_x_array",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an external array for the x data points to use for the chart NOTE: It is the users responsibility to make sure the point_cnt matches the external array size. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                },
                {
                    "name": "array",
                    "type": {
                        "name": "int32_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "external array of points for chart "
                }
            ]
        },
        {
            "name": "lv_chart_get_y_array",
            "type": {
                "type": {
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the array of values with 'point_count' elements "
            },
            "json_type": "function",
            "docstring": "Get the array of y values of a series the array of values with 'point_count' elements ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                }
            ]
        },
        {
            "name": "lv_chart_get_x_array",
            "type": {
                "type": {
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the array of values with 'point_count' elements "
            },
            "json_type": "function",
            "docstring": "Get the array of x values of a series the array of values with 'point_count' elements ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                },
                {
                    "name": "ser",
                    "type": {
                        "type": {
                            "name": "lv_chart_series_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a data series on 'chart' "
                }
            ]
        },
        {
            "name": "lv_chart_get_pressed_point",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the index of the point [0 .. point count] or LV_CHART_POINT_ID_NONE if no point is being pressed "
            },
            "json_type": "function",
            "docstring": "Get the index of the currently pressed point. It's the same for every series. the index of the point [0 .. point count] or LV_CHART_POINT_ID_NONE if no point is being pressed ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                }
            ]
        },
        {
            "name": "lv_chart_get_first_point_center_offset",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the offset of the center "
            },
            "json_type": "function",
            "docstring": "Get the overall offset from the chart's side to the center of the first point. In case of a bar chart it will be the center of the first column group the offset of the center ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a chart object "
                }
            ]
        },
        {
            "name": "lv_checkbox_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created check box "
            },
            "json_type": "function",
            "docstring": "Create a check box object pointer to the created check box ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new button "
                }
            ]
        },
        {
            "name": "lv_checkbox_set_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the text of a check box. txt will be copied and may be deallocated after this function returns. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a check box "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text of the check box. NULL to refresh with the current text. "
                }
            ]
        },
        {
            "name": "lv_checkbox_set_text_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the text of a check box. txt must not be deallocated during the life of this checkbox. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a check box "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text of the check box. "
                }
            ]
        },
        {
            "name": "lv_checkbox_get_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the text of the check box "
            },
            "json_type": "function",
            "docstring": "Get the text of a check box pointer to the text of the check box ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to check box object "
                }
            ]
        },
        {
            "name": "lv_dropdown_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created drop-down list "
            },
            "json_type": "function",
            "docstring": "Create a drop-down list object pointer to the created drop-down list ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new drop-down list "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set text of the drop-down list's button. If set to NULL the selected option's text will be displayed on the button. If set to a specific text then that text will be shown regardless of the selected option. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text as a string (Only its pointer is saved) "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_options",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the options in a drop-down list from a string. The options will be copied and saved in the object so the options can be destroyed after calling this function ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "options",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a string with ' ' separated options. E.g. \"One\\nTwo\\nThree\" "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_options_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the options in a drop-down list from a static string (global, static or dynamically allocated). Only the pointer of the option string will be saved. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "options",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a static string with ' ' separated options. E.g. \"One\\nTwo\\nThree\" "
                }
            ]
        },
        {
            "name": "lv_dropdown_add_option",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add an options to a drop-down list from a string. Only works for non-static options. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "option",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a string without ' '. E.g. \"Four\" "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the insert position, indexed from 0, LV_DROPDOWN_POS_LAST = end of string "
                }
            ]
        },
        {
            "name": "lv_dropdown_clear_options",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear all options in a drop-down list. Works with both static and dynamic options. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_selected",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the selected option ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "sel_opt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the selected option (0 ... number of option - 1); "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_dir",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the direction of the a drop-down list ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DIR_LEFT/RIGHT/TOP/BOTTOM "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_symbol",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an arrow or other symbol to display when on drop-down list's button. Typically a down caret or arrow. angle and zoom transformation can be applied if the symbol is an image. E.g. when drop down is checked (opened) rotate the symbol by 180 degree ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "symbol",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a text like LV_SYMBOL_DOWN , an image (pointer or path) or NULL to not draw symbol icon "
                }
            ]
        },
        {
            "name": "lv_dropdown_set_selected_highlight",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set whether the selected option in the list should be highlighted or not ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: highlight enabled; false: disabled "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_list",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the list of the drop-down "
            },
            "json_type": "function",
            "docstring": "Get the list of a drop-down to allow styling or other modifications pointer to the list of the drop-down ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the text as string, NULL if no text "
            },
            "json_type": "function",
            "docstring": "Get text of the drop-down list's button. the text as string, NULL if no text ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_options",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the options separated by ' '-s (E.g. \"Option1\\nOption2\\nOption3\") "
            },
            "json_type": "function",
            "docstring": "Get the options of a drop-down list the options separated by ' '-s (E.g. \"Option1\\nOption2\\nOption3\") ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_selected",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "index of the selected option (0 ... number of option - 1); "
            },
            "json_type": "function",
            "docstring": "Get the index of the selected option index of the selected option (0 ... number of option - 1); ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_option_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the total number of options in the list "
            },
            "json_type": "function",
            "docstring": "Get the total number of options the total number of options in the list ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_selected_str",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the current selected option as a string ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down object "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array to store the string "
                },
                {
                    "name": "buf_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of buf in bytes. 0: to ignore it. "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_option_index",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "index of option in the list of all options. -1 if not found. "
            },
            "json_type": "function",
            "docstring": "Get the index of an option. index of option in the list of all options. -1 if not found. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down object "
                },
                {
                    "name": "option",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an option as string "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_symbol",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the symbol or NULL if not enabled "
            },
            "json_type": "function",
            "docstring": "Get the symbol on the drop-down list. Typically a down caret or arrow. the symbol or NULL if not enabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_selected_highlight",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: highlight enabled; false: disabled "
            },
            "json_type": "function",
            "docstring": "Get whether the selected option in the list should be highlighted or not true: highlight enabled; false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_get_dir",
            "type": {
                "type": {
                    "name": "lv_dir_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_DIR_LEF/RIGHT/TOP/BOTTOM "
            },
            "json_type": "function",
            "docstring": "Get the direction of the drop-down list LV_DIR_LEF/RIGHT/TOP/BOTTOM ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_open",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Open the drop.down list ",
            "args": [
                {
                    "name": "dropdown_obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_close",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Close (Collapse) the drop-down list ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to drop-down list object "
                }
            ]
        },
        {
            "name": "lv_dropdown_is_open",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if the list os opened "
            },
            "json_type": "function",
            "docstring": "Tells whether the list is opened or not true if the list os opened ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop-down list object "
                }
            ]
        },
        {
            "name": "lv_imagebutton_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created image button "
            },
            "json_type": "function",
            "docstring": "Create an image button object pointer to the created image button ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new image button "
                }
            ]
        },
        {
            "name": "lv_imagebutton_set_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set images for a state of the image button ",
            "args": [
                {
                    "name": "imagebutton",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image button object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "for which state set the new image "
                },
                {
                    "name": "src_left",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source for the left side of the button (a C array or path to a file) "
                },
                {
                    "name": "src_mid",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source for the middle of the button (ideally 1px wide) (a C array or path to a file) "
                },
                {
                    "name": "src_right",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image source for the right side of the button (a C array or path to a file) "
                }
            ]
        },
        {
            "name": "lv_imagebutton_set_state",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Use this function instead of lv_obj_add/remove_state to set a state manually ",
            "args": [
                {
                    "name": "imagebutton",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image button object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new state "
                }
            ]
        },
        {
            "name": "lv_imagebutton_get_src_left",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the left image source (a C array or path to a file) "
            },
            "json_type": "function",
            "docstring": "Get the left image in a given state pointer to the left image source (a C array or path to a file) ",
            "args": [
                {
                    "name": "imagebutton",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image button object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the state where to get the image (from lv_button_state_t ) ` "
                }
            ]
        },
        {
            "name": "lv_imagebutton_get_src_middle",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the middle image source (a C array or path to a file) "
            },
            "json_type": "function",
            "docstring": "Get the middle image in a given state pointer to the middle image source (a C array or path to a file) ",
            "args": [
                {
                    "name": "imagebutton",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image button object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the state where to get the image (from lv_button_state_t ) ` "
                }
            ]
        },
        {
            "name": "lv_imagebutton_get_src_right",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the left image source (a C array or path to a file) "
            },
            "json_type": "function",
            "docstring": "Get the right image in a given state pointer to the left image source (a C array or path to a file) ",
            "args": [
                {
                    "name": "imagebutton",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an image button object "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_imagebutton_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the state where to get the image (from lv_button_state_t ) ` "
                }
            ]
        },
        {
            "name": "lv_keyboard_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created keyboard "
            },
            "json_type": "function",
            "docstring": "Create a Keyboard object pointer to the created keyboard ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new keyboard "
                }
            ]
        },
        {
            "name": "lv_keyboard_set_textarea",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Assign a Text Area to the Keyboard. The pressed characters will be put there. ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                },
                {
                    "name": "ta",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Text Area object to write there "
                }
            ]
        },
        {
            "name": "lv_keyboard_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new a mode (text or number map) ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mode from 'lv_keyboard_mode_t' "
                }
            ]
        },
        {
            "name": "lv_keyboard_set_popovers",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Show the button title in a popover when pressed. ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "whether \"popovers\" mode is enabled "
                }
            ]
        },
        {
            "name": "lv_keyboard_set_map",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new map for the keyboard ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_keyboard_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "keyboard map to alter 'lv_keyboard_mode_t' "
                },
                {
                    "name": "map",
                    "type": {
                        "type": {
                            "type": {
                                "name": "char",
                                "json_type": "primitive_type",
                                "quals": [
                                    "const"
                                ]
                            },
                            "json_type": "pointer",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a string array to describe the map. See ' :ref:`lv_buttonmatrix_set_map()` ' for more info. "
                },
                {
                    "name": "ctrl_map",
                    "type": {
                        "name": "lv_buttonmatrix_ctrl_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "See ' :ref:`lv_buttonmatrix_set_ctrl_map()` ' for more info. "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_textarea",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the assigned Text Area object "
            },
            "json_type": "function",
            "docstring": "Assign a Text Area to the Keyboard. The pressed characters will be put there. pointer to the assigned Text Area object ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_mode",
            "type": {
                "type": {
                    "name": "lv_keyboard_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current mode from 'lv_keyboard_mode_t' "
            },
            "json_type": "function",
            "docstring": "Set a new a mode (text or number map) the current mode from 'lv_keyboard_mode_t' ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_popovers",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: \"popovers\" mode is enabled; false: disabled "
            },
            "json_type": "function",
            "docstring": "Tell whether \"popovers\" mode is enabled or not. true: \"popovers\" mode is enabled; false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Keyboard object "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_map_array",
            "type": {
                "type": {
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current map "
            },
            "json_type": "function",
            "docstring": "Get the current map of a keyboard the current map ",
            "args": [
                {
                    "name": "kb",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a keyboard object "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_selected_button",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "index of the last released button (LV_BUTTONMATRIX_BUTTON_NONE: if unset) "
            },
            "json_type": "function",
            "docstring": "Get the index of the lastly \"activated\" button by the user (pressed, released, focused etc) Useful in the event_cb to get the text of the button, check if hidden etc. index of the last released button (LV_BUTTONMATRIX_BUTTON_NONE: if unset) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                }
            ]
        },
        {
            "name": "lv_keyboard_get_button_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "text of btn_index` button "
            },
            "json_type": "function",
            "docstring": "Get the button's text text of btn_index` button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to button matrix object "
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index a button not counting new line characters. "
                }
            ]
        },
        {
            "name": "lv_keyboard_def_event_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Default keyboard event to add characters to the Text area and change the map. If a custom event_cb is added to the keyboard this function can be called from it to handle the button clicks ",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the triggering event "
                }
            ]
        },
        {
            "name": "lv_led_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created led "
            },
            "json_type": "function",
            "docstring": "Create a led object pointer to the created led ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new led "
                }
            ]
        },
        {
            "name": "lv_led_set_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the color of the LED ",
            "args": [
                {
                    "name": "led",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a LED object "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the color of the LED "
                }
            ]
        },
        {
            "name": "lv_led_set_brightness",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the brightness of a LED object ",
            "args": [
                {
                    "name": "led",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a LED object "
                },
                {
                    "name": "bright",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_LED_BRIGHT_MIN (max. dark) ... LV_LED_BRIGHT_MAX (max. light) "
                }
            ]
        },
        {
            "name": "lv_led_on",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Light on a LED ",
            "args": [
                {
                    "name": "led",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a LED object "
                }
            ]
        },
        {
            "name": "lv_led_off",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Light off a LED ",
            "args": [
                {
                    "name": "led",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a LED object "
                }
            ]
        },
        {
            "name": "lv_led_toggle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Toggle the state of a LED ",
            "args": [
                {
                    "name": "led",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a LED object "
                }
            ]
        },
        {
            "name": "lv_led_get_brightness",
            "type": {
                "type": {
                    "name": "uint8_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "bright 0 (max. dark) ... 255 (max. light) "
            },
            "json_type": "function",
            "docstring": "Get the brightness of a LED object bright 0 (max. dark) ... 255 (max. light) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to LED object "
                }
            ]
        },
        {
            "name": "lv_line_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created line "
            },
            "json_type": "function",
            "docstring": "Create a line object pointer to the created line ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new line "
                }
            ]
        },
        {
            "name": "lv_line_set_points",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an array of points. The line object will connect these points. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                },
                {
                    "name": "points",
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "array",
                        "quals": [
                            "const"
                        ],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "an array of points. Only the address is saved, so the array needs to be alive while the line exists "
                },
                {
                    "name": "point_num",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of points in 'point_a' "
                }
            ]
        },
        {
            "name": "lv_line_set_points_mutable",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a non-const array of points. Identical to lv_line_set_points except the array may be retrieved by lv_line_get_points_mutable . ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                },
                {
                    "name": "points",
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": null
                    },
                    "json_type": "arg",
                    "docstring": "a non-const array of points. Only the address is saved, so the array needs to be alive while the line exists. "
                },
                {
                    "name": "point_num",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of points in 'point_a' "
                }
            ]
        },
        {
            "name": "lv_line_set_y_invert",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable (or disable) the y coordinate inversion. If enabled then y will be subtracted from the height of the object, therefore the y = 0 coordinate will be on the bottom. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable the y inversion, false:disable the y inversion "
                }
            ]
        },
        {
            "name": "lv_line_get_points",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "const pointer to the array of points "
            },
            "json_type": "function",
            "docstring": "Get the pointer to the array of points. const pointer to the array of points ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                }
            ]
        },
        {
            "name": "lv_line_get_point_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of points in array of points "
            },
            "json_type": "function",
            "docstring": "Get the number of points in the array of points. number of points in array of points ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                }
            ]
        },
        {
            "name": "lv_line_is_point_array_mutable",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: the point array pointer is mutable, false: constant "
            },
            "json_type": "function",
            "docstring": "Check the mutability of the stored point array pointer. true: the point array pointer is mutable, false: constant ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                }
            ]
        },
        {
            "name": "lv_line_get_points_mutable",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the array of points. NULL if not mutable. "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the mutable array of points or NULL if it is not mutable pointer to the array of points. NULL if not mutable. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                }
            ]
        },
        {
            "name": "lv_line_get_y_invert",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: y inversion is enabled, false: disabled "
            },
            "json_type": "function",
            "docstring": "Get the y inversion attribute true: y inversion is enabled, false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a line object "
                }
            ]
        },
        {
            "name": "lv_list_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created list "
            },
            "json_type": "function",
            "docstring": "Create a list object pointer to the created list ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new list "
                }
            ]
        },
        {
            "name": "lv_list_add_text",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created label "
            },
            "json_type": "function",
            "docstring": "Add text to a list pointer to the created label ",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a list, it will be the parent of the new label "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "text of the new label "
                }
            ]
        },
        {
            "name": "lv_list_add_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created button "
            },
            "json_type": "function",
            "docstring": "Add button to a list pointer to the created button ",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a list, it will be the parent of the new button "
                },
                {
                    "name": "icon",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "icon for the button, when NULL it will have no icon "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "text of the new button, when NULL no text will be added "
                }
            ]
        },
        {
            "name": "lv_list_get_button_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "text of btn, if btn doesn't have text \"\" will be returned "
            },
            "json_type": "function",
            "docstring": "Get text of a given list button text of btn, if btn doesn't have text \"\" will be returned ",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a list "
                },
                {
                    "name": "btn",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the button "
                }
            ]
        },
        {
            "name": "lv_list_set_button_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set text of a given list button ",
            "args": [
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a list "
                },
                {
                    "name": "btn",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the button "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the text "
                }
            ]
        },
        {
            "name": "lv_menu_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created menu "
            },
            "json_type": "function",
            "docstring": "Create a menu object pointer to the created menu ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new menu "
                }
            ]
        },
        {
            "name": "lv_menu_page_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created menu page "
            },
            "json_type": "function",
            "docstring": "Create a menu page object pointer to the created menu page ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to menu object "
                },
                {
                    "name": "title",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "pointer to text for title in header (NULL to not display title) "
                }
            ]
        },
        {
            "name": "lv_menu_cont_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created menu cont "
            },
            "json_type": "function",
            "docstring": "Create a menu cont object pointer to the created menu cont ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new menu cont object "
                }
            ]
        },
        {
            "name": "lv_menu_section_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created menu section "
            },
            "json_type": "function",
            "docstring": "Create a menu section object pointer to the created menu section ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new menu section object "
                }
            ]
        },
        {
            "name": "lv_menu_separator_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created menu separator "
            },
            "json_type": "function",
            "docstring": "Create a menu separator object pointer to the created menu separator ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new menu separator object "
                }
            ]
        },
        {
            "name": "lv_menu_set_page",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set menu page to display in main ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                },
                {
                    "name": "page",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu page to set (NULL to clear main and clear menu history) "
                }
            ]
        },
        {
            "name": "lv_menu_set_page_title",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set menu page title ",
            "args": [
                {
                    "name": "page",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu page "
                },
                {
                    "name": "title",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "pointer to text for title in header (NULL to not display title) "
                }
            ]
        },
        {
            "name": "lv_menu_set_page_title_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set menu page title with a static text. It will not be saved by the label so the 'text' variable has to be 'alive' while the page exists. ",
            "args": [
                {
                    "name": "page",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu page "
                },
                {
                    "name": "title",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "arg",
                    "docstring": "pointer to text for title in header (NULL to not display title) "
                }
            ]
        },
        {
            "name": "lv_menu_set_sidebar_page",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set menu page to display in sidebar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                },
                {
                    "name": "page",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu page to set (NULL to clear sidebar) "
                }
            ]
        },
        {
            "name": "lv_menu_set_mode_header",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the how the header should behave and its position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a menu "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_menu_mode_header_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_MENU_HEADER_TOP_FIXED/TOP_UNFIXED/BOTTOM_FIXED "
                }
            ]
        },
        {
            "name": "lv_menu_set_mode_root_back_button",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set whether back button should appear at root ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a menu "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_menu_mode_root_back_button_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_MENU_ROOT_BACK_BUTTON_DISABLED/ENABLED "
                }
            ]
        },
        {
            "name": "lv_menu_set_load_page_event",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add menu to the menu item ",
            "args": [
                {
                    "name": "menu",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the obj "
                },
                {
                    "name": "page",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the page to load when obj is clicked "
                }
            ]
        },
        {
            "name": "lv_menu_get_cur_main_page",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to current page "
            },
            "json_type": "function",
            "docstring": "Get a pointer to menu page that is currently displayed in main pointer to current page ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_get_cur_sidebar_page",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to current page "
            },
            "json_type": "function",
            "docstring": "Get a pointer to menu page that is currently displayed in sidebar pointer to current page ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_get_main_header",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to main header obj "
            },
            "json_type": "function",
            "docstring": "Get a pointer to main header obj pointer to main header obj ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_get_main_header_back_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to main header back btn obj "
            },
            "json_type": "function",
            "docstring": "Get a pointer to main header back btn obj pointer to main header back btn obj ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_get_sidebar_header",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to sidebar header obj "
            },
            "json_type": "function",
            "docstring": "Get a pointer to sidebar header obj pointer to sidebar header obj ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_get_sidebar_header_back_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to sidebar header back btn obj "
            },
            "json_type": "function",
            "docstring": "Get a pointer to sidebar header obj pointer to sidebar header back btn obj ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_menu_back_button_is_root",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if it is a root back btn "
            },
            "json_type": "function",
            "docstring": "Check if an obj is a root back btn true if it is a root back btn ",
            "args": [
                {
                    "name": "menu",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the back button "
                }
            ]
        },
        {
            "name": "lv_menu_clear_history",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear menu history ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the menu "
                }
            ]
        },
        {
            "name": "lv_msgbox_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created message box "
            },
            "json_type": "function",
            "docstring": "Create an empty message box the created message box ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the parent or NULL to create a modal msgbox "
                }
            ]
        },
        {
            "name": "lv_msgbox_add_title",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created title label "
            },
            "json_type": "function",
            "docstring": "Add title to the message box. It also creates a header for the title. the created title label ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                },
                {
                    "name": "title",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text of the tile "
                }
            ]
        },
        {
            "name": "lv_msgbox_add_header_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created button "
            },
            "json_type": "function",
            "docstring": "Add a button to the header of to the message box. It also creates a header. the created button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                },
                {
                    "name": "icon",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the icon of the button "
                }
            ]
        },
        {
            "name": "lv_msgbox_add_text",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created button "
            },
            "json_type": "function",
            "docstring": "Add a text to the content area of message box. Multiple texts will be created below each other. the created button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "text to add "
                }
            ]
        },
        {
            "name": "lv_msgbox_add_footer_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created button "
            },
            "json_type": "function",
            "docstring": "Add a button to the footer of to the message box. It also creates a footer. the created button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text of the button "
                }
            ]
        },
        {
            "name": "lv_msgbox_add_close_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created close button "
            },
            "json_type": "function",
            "docstring": "Add a close button to the message box. It also creates a header. the created close button ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_get_header",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the header, or NULL if not exists "
            },
            "json_type": "function",
            "docstring": "Get the header widget the header, or NULL if not exists ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_get_footer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the footer, or NULL if not exists "
            },
            "json_type": "function",
            "docstring": "Get the footer widget the footer, or NULL if not exists ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_get_content",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the content "
            },
            "json_type": "function",
            "docstring": "Get the content widget the content ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_get_title",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the title, or NULL if it does not exist "
            },
            "json_type": "function",
            "docstring": "Get the title label the title, or NULL if it does not exist ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_close",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Close a message box ",
            "args": [
                {
                    "name": "mbox",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_msgbox_close_async",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Close a message box in the next call of the message box ",
            "args": [
                {
                    "name": "mbox",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a message box "
                }
            ]
        },
        {
            "name": "lv_roller_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created roller "
            },
            "json_type": "function",
            "docstring": "Create a roller object pointer to the created roller ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new roller. "
                }
            ]
        },
        {
            "name": "lv_roller_set_options",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the options on a roller ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to roller object "
                },
                {
                    "name": "options",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a string with ' ' separated options. E.g. \"One\\nTwo\\nThree\" "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_roller_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ROLLER_MODE_NORMAL or LV_ROLLER_MODE_INFINITE "
                }
            ]
        },
        {
            "name": "lv_roller_set_selected",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the selected option ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a roller object "
                },
                {
                    "name": "sel_opt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "index of the selected option (0 ... number of option - 1); "
                },
                {
                    "name": "anim",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: set with animation; LV_ANOM_OFF set immediately "
                }
            ]
        },
        {
            "name": "lv_roller_set_visible_row_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the height to show the given number of rows (options) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a roller object "
                },
                {
                    "name": "row_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of desired visible rows "
                }
            ]
        },
        {
            "name": "lv_roller_get_selected",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "index of the selected option (0 ... number of option - 1); "
            },
            "json_type": "function",
            "docstring": "Get the index of the selected option index of the selected option (0 ... number of option - 1); ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a roller object "
                }
            ]
        },
        {
            "name": "lv_roller_get_selected_str",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the current selected option as a string. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to roller object "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array to store the string "
                },
                {
                    "name": "buf_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of buf in bytes. 0: to ignore it. "
                }
            ]
        },
        {
            "name": "lv_roller_get_options",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the options separated by ' '-s (E.g. \"Option1\\nOption2\\nOption3\") "
            },
            "json_type": "function",
            "docstring": "Get the options of a roller the options separated by ' '-s (E.g. \"Option1\\nOption2\\nOption3\") ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to roller object "
                }
            ]
        },
        {
            "name": "lv_roller_get_option_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the total number of options "
            },
            "json_type": "function",
            "docstring": "Get the total number of options the total number of options ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a roller object "
                }
            ]
        },
        {
            "name": "lv_scale_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created scale "
            },
            "json_type": "function",
            "docstring": "Create an scale object pointer to the created scale ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new scale "
                }
            ]
        },
        {
            "name": "lv_scale_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set scale mode. See lv_scale_mode_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_scale_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new scale mode "
                }
            ]
        },
        {
            "name": "lv_scale_set_total_tick_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set scale total tick count (including minor and major ticks) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                },
                {
                    "name": "total_tick_count",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "New total tick count "
                }
            ]
        },
        {
            "name": "lv_scale_set_major_tick_every",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Sets how often the major tick will be drawn ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                },
                {
                    "name": "major_tick_every",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new count for major tick drawing "
                }
            ]
        },
        {
            "name": "lv_scale_set_label_show",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Sets label visibility ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                },
                {
                    "name": "show_label",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true/false to enable tick label "
                }
            ]
        },
        {
            "name": "lv_scale_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the minimal and maximal values on a scale ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value of the scale "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value of the scale "
                }
            ]
        },
        {
            "name": "lv_scale_set_angle_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set properties specific to round scale ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "angle_range",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the angular range of the scale "
                }
            ]
        },
        {
            "name": "lv_scale_set_rotation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set properties specific to round scale ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "rotation",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the angular offset from the 3 o'clock position (clock-wise) "
                }
            ]
        },
        {
            "name": "lv_scale_set_line_needle_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Point the needle to the corresponding value through the line ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "needle_line",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "needle_line of the scale. The line points will be allocated and managed by the scale unless the line point array was previously set using lv_line_set_points_mutable . "
                },
                {
                    "name": "needle_length",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "length of the needle needle_length>0 needle_length=needle_length; needle_length<0 needle_length=radius-|needle_length|; "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "needle to point to the corresponding value "
                }
            ]
        },
        {
            "name": "lv_scale_set_image_needle_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Point the needle to the corresponding value through the image, image must point to the right. E.g. -O------> ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "needle_img",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "needle_img of the scale "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "needle to point to the corresponding value "
                }
            ]
        },
        {
            "name": "lv_scale_set_text_src",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set custom text source for major ticks labels ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "txt_src",
                    "type": {
                        "type": {
                            "type": {
                                "name": "char",
                                "json_type": "primitive_type",
                                "quals": [
                                    "const"
                                ]
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an array of strings which will be display at major ticks "
                }
            ]
        },
        {
            "name": "lv_scale_set_post_draw",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw the scale after all the children are drawn ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable post draw "
                }
            ]
        },
        {
            "name": "lv_scale_set_draw_ticks_on_top",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw the scale ticks on top of all parts ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable draw ticks on top of all parts "
                }
            ]
        },
        {
            "name": "lv_scale_add_section",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_scale_section_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the new section "
            },
            "json_type": "function",
            "docstring": "Add a section to the given scale pointer to the new section ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                }
            ]
        },
        {
            "name": "lv_scale_section_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the range for the given scale section ",
            "args": [
                {
                    "name": "section",
                    "type": {
                        "type": {
                            "name": "lv_scale_section_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale section object "
                },
                {
                    "name": "minor_range",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "section new minor range "
                },
                {
                    "name": "major_range",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "section new major range "
                }
            ]
        },
        {
            "name": "lv_scale_section_set_style",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the style of the part for the given scale section ",
            "args": [
                {
                    "name": "section",
                    "type": {
                        "type": {
                            "name": "lv_scale_section_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale section object "
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the part for the section, e.g. LV_PART_INDICATOR "
                },
                {
                    "name": "section_part_style",
                    "type": {
                        "type": {
                            "name": "lv_style_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Pointer to the section part style "
                }
            ]
        },
        {
            "name": "lv_scale_get_mode",
            "type": {
                "type": {
                    "name": "lv_scale_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Scale mode "
            },
            "json_type": "function",
            "docstring": "Get scale mode. See lv_scale_mode_t Scale mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                }
            ]
        },
        {
            "name": "lv_scale_get_total_tick_count",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Scale total tick count "
            },
            "json_type": "function",
            "docstring": "Get scale total tick count (including minor and major ticks) Scale total tick count ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                }
            ]
        },
        {
            "name": "lv_scale_get_major_tick_every",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Scale major tick every count "
            },
            "json_type": "function",
            "docstring": "Gets how often the major tick will be drawn Scale major tick every count ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                }
            ]
        },
        {
            "name": "lv_scale_get_label_show",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if tick label is enabled, false otherwise "
            },
            "json_type": "function",
            "docstring": "Gets label visibility true if tick label is enabled, false otherwise ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer the scale object "
                }
            ]
        },
        {
            "name": "lv_scale_get_angle_range",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "Scale angle_range "
            },
            "json_type": "function",
            "docstring": "Get angle range of a round scale Scale angle_range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale object "
                }
            ]
        },
        {
            "name": "lv_scale_get_range_min_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "section minor range "
            },
            "json_type": "function",
            "docstring": "Get the min range for the given scale section section minor range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale section object "
                }
            ]
        },
        {
            "name": "lv_scale_get_range_max_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "section max range "
            },
            "json_type": "function",
            "docstring": "Get the max range for the given scale section section max range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a scale section object "
                }
            ]
        },
        {
            "name": "lv_slider_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created slider "
            },
            "json_type": "function",
            "docstring": "Create a slider object pointer to the created slider ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new slider. "
                }
            ]
        },
        {
            "name": "lv_slider_set_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new value on the slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new value "
                },
                {
                    "name": "anim",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately "
                }
            ]
        },
        {
            "name": "lv_slider_set_left_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new value for the left knob of a slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new value "
                },
                {
                    "name": "anim",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value immediately "
                }
            ]
        },
        {
            "name": "lv_slider_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set minimum and the maximum values of a bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the slider object "
                },
                {
                    "name": "min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value "
                },
                {
                    "name": "max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value "
                }
            ]
        },
        {
            "name": "lv_slider_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the mode of slider. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_slider_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the mode of the slider. See lv_slider_mode_t "
                }
            ]
        },
        {
            "name": "lv_slider_get_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value of the main knob of the slider "
            },
            "json_type": "function",
            "docstring": "Get the value of the main knob of a slider the value of the main knob of the slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_get_left_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the value of the left knob of the slider "
            },
            "json_type": "function",
            "docstring": "Get the value of the left knob of a slider the value of the left knob of the slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_get_min_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the minimum value of the slider "
            },
            "json_type": "function",
            "docstring": "Get the minimum value of a slider the minimum value of the slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_get_max_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the maximum value of the slider "
            },
            "json_type": "function",
            "docstring": "Get the maximum value of a slider the maximum value of the slider ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_is_dragged",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: drag in progress false: not dragged "
            },
            "json_type": "function",
            "docstring": "Give the slider is being dragged or not true: drag in progress false: not dragged ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_get_mode",
            "type": {
                "type": {
                    "name": "lv_slider_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "see lv_slider_mode_t "
            },
            "json_type": "function",
            "docstring": "Get the mode of the slider. see lv_slider_mode_t ",
            "args": [
                {
                    "name": "slider",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider object "
                }
            ]
        },
        {
            "name": "lv_slider_is_symmetrical",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: in symmetrical mode false : not in "
            },
            "json_type": "function",
            "docstring": "Give the slider is in symmetrical mode or not true: in symmetrical mode false : not in ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to slider object "
                }
            ]
        },
        {
            "name": "lv_span_stack_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_span_stack_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_spangroup_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created spangroup "
            },
            "json_type": "function",
            "docstring": "Create a spangroup object pointer to the created spangroup ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new spangroup "
                }
            ]
        },
        {
            "name": "lv_spangroup_new_span",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_span_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created span. "
            },
            "json_type": "function",
            "docstring": "Create a span string descriptor and add to spangroup. pointer to the created span. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_delete_span",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove the span from the spangroup and free memory. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a span. "
                }
            ]
        },
        {
            "name": "lv_span_set_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a new text for a span. Memory will be allocated to store the text by the span. ",
            "args": [
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a span. "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text. "
                }
            ]
        },
        {
            "name": "lv_span_set_text_static",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a static text. It will not be saved by the span so the 'text' variable has to be 'alive' while the span exist. ",
            "args": [
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a span. "
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text. "
                }
            ]
        },
        {
            "name": "lv_spangroup_set_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the align of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "see lv_text_align_t for details. "
                }
            ]
        },
        {
            "name": "lv_spangroup_set_overflow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the overflow of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "overflow",
                    "type": {
                        "name": "lv_span_overflow_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "see lv_span_overflow_t for details. "
                }
            ]
        },
        {
            "name": "lv_spangroup_set_indent",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the indent of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "indent",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the first line indentation "
                }
            ]
        },
        {
            "name": "lv_spangroup_set_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the mode of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "mode",
                    "type": {
                        "name": "lv_span_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "see lv_span_mode_t for details. "
                }
            ]
        },
        {
            "name": "lv_spangroup_set_max_lines",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set maximum lines of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "lines",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "max lines that can be displayed in LV_SPAN_MODE_BREAK mode. < 0 means no limit. "
                }
            ]
        },
        {
            "name": "lv_span_get_style",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_style_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the style. valid as long as the span is valid "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the style of a span pointer to the style. valid as long as the span is valid ",
            "args": [
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the span "
                }
            ]
        },
        {
            "name": "lv_span_get_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the text "
            },
            "json_type": "function",
            "docstring": "Get a pointer to the text of a span pointer to the text ",
            "args": [
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the span "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_child",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_span_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "The child span at index id , or NULL if the ID does not exist "
            },
            "json_type": "function",
            "docstring": "Get a spangroup child by its index. \n\nThe child span at index id , or NULL if the ID does not exist  ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "The spangroup object "
                },
                {
                    "name": "id",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the child. 0: the oldest (firstly created) child 1: the second oldest child count-1: the youngest -1: the youngest -2: the second youngest "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_span_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the span count of the spangroup. "
            },
            "json_type": "function",
            "docstring": "Get number of spans the span count of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the spangroup object to get the child count of. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_align",
            "type": {
                "type": {
                    "name": "lv_text_align_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the align value. "
            },
            "json_type": "function",
            "docstring": "Get the align of the spangroup. the align value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_overflow",
            "type": {
                "type": {
                    "name": "lv_span_overflow_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the overflow value. "
            },
            "json_type": "function",
            "docstring": "Get the overflow of the spangroup. the overflow value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_indent",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the indent value. "
            },
            "json_type": "function",
            "docstring": "Get the indent of the spangroup. the indent value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_mode",
            "type": {
                "type": {
                    "name": "lv_span_mode_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the mode of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_max_lines",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the max lines value. "
            },
            "json_type": "function",
            "docstring": "Get maximum lines of the spangroup. the max lines value. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_max_line_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get max line height of all span in the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_expand_width",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "text content width or max_width. "
            },
            "json_type": "function",
            "docstring": "Get the text content width when all span of spangroup on a line. text content width or max_width. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "max_width",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "if text content width >= max_width, return max_width to reduce computation, if max_width == 0, returns the text content width. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_expand_height",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the text content height with width fixed. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the width of the span group. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_span_coords",
            "type": {
                "type": {
                    "name": "lv_span_coords_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the span's coords in the spangroup. "
            },
            "json_type": "function",
            "docstring": "Get the span's coords in the spangroup. Before calling this function, please make sure that the layout of span group has been updated. Like calling :ref:`lv_obj_update_layout()` like function. +--------+\n|Heading +--->------------------+\n|  Pos   |   |     Heading      |\n+--------+---+------------------+\n|                               |\n|                               |\n|                               |\n|            Middle   +--------+|\n|                     |Trailing||\n|                   +-|  Pos   ||\n|                   | +--------+|\n+-------------------v-----------+\n|     Trailing      |\n+-------------------+  the span's coords in the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "span",
                    "type": {
                        "type": {
                            "name": "lv_span_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a span. "
                }
            ]
        },
        {
            "name": "lv_spangroup_get_span_by_point",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_span_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the span under the point or NULL if not found. "
            },
            "json_type": "function",
            "docstring": "Get the span object by point. pointer to the span under the point or NULL if not found. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                },
                {
                    "name": "point",
                    "type": {
                        "type": {
                            "name": "lv_point_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to point containing absolute coordinates "
                }
            ]
        },
        {
            "name": "lv_spangroup_refr_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Update the mode of the spangroup. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spangroup object. "
                }
            ]
        },
        {
            "name": "lv_textarea_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created text area "
            },
            "json_type": "function",
            "docstring": "Create a text area object pointer to the created text area ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new text area "
                }
            ]
        },
        {
            "name": "lv_textarea_add_char",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Insert a character to the current cursor position. To add a wide char, e.g. '\u00c1' use lv_text_encoded_conv_wc('\u00c1 ) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "c",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a character (e.g. 'a ) "
                }
            ]
        },
        {
            "name": "lv_textarea_add_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Insert a text to the current cursor position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "a '\\0' terminated string to insert "
                }
            ]
        },
        {
            "name": "lv_textarea_delete_char",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete a the left character from the current cursor position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_delete_char_forward",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Delete the right character from the current cursor position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_set_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the text of a text area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the text "
                }
            ]
        },
        {
            "name": "lv_textarea_set_placeholder_text",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the placeholder text of a text area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the text "
                }
            ]
        },
        {
            "name": "lv_textarea_set_cursor_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the cursor position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new cursor position in character index < 0 : index from the end of the text LV_TEXTAREA_CURSOR_LAST: go after the last character "
                }
            ]
        },
        {
            "name": "lv_textarea_set_cursor_click_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable/Disable the positioning of the cursor by clicking the text on the text area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable click positions; false: disable "
                }
            ]
        },
        {
            "name": "lv_textarea_set_password_mode",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable/Disable password mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: enable, false: disable "
                }
            ]
        },
        {
            "name": "lv_textarea_set_password_bullet",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the replacement characters to show in password mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "bullet",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the replacement text "
                }
            ]
        },
        {
            "name": "lv_textarea_set_one_line",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Configure the text area to one line or back to normal ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: one line, false: normal "
                }
            ]
        },
        {
            "name": "lv_textarea_set_accepted_chars",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a list of characters. Only these characters will be accepted by the text area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "list of characters. Only the pointer is saved. E.g. \"+-.,0123456789\" "
                }
            ]
        },
        {
            "name": "lv_textarea_set_max_length",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set max length of a Text Area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "num",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the maximal number of characters can be added ( lv_textarea_set_text ignores it) "
                }
            ]
        },
        {
            "name": "lv_textarea_set_insert_replace",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "In LV_EVENT_INSERT the text which planned to be inserted can be replaced by another text. It can be used to add automatic formatting to the text area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a new string to insert. If \"\" no text will be added. The variable must be live after the event_cb exists. (Should be global or static ) "
                }
            ]
        },
        {
            "name": "lv_textarea_set_text_selection",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Enable/disable selection mode. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "en",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true or false to enable/disable selection mode "
                }
            ]
        },
        {
            "name": "lv_textarea_set_password_show_time",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set how long show the password before changing it to '*' ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "show time in milliseconds. 0: hide immediately. "
                }
            ]
        },
        {
            "name": "lv_textarea_set_align",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deprecated Use the normal text_align style property instead Set the label's alignment. It sets where the label is aligned (in one line mode it can be smaller than the text area) and how the lines of the area align in case of multiline text area ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the align mode from :ref:`lv_text_align_t` "
                }
            ]
        },
        {
            "name": "lv_textarea_get_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the text "
            },
            "json_type": "function",
            "docstring": "Get the text of a text area. In password mode it gives the real text (not '*'s). pointer to the text ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_placeholder_text",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the text "
            },
            "json_type": "function",
            "docstring": "Get the placeholder text of a text area pointer to the text ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_label",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the label object "
            },
            "json_type": "function",
            "docstring": "Get the label of a text area pointer to the label object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_cursor_pos",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the cursor position "
            },
            "json_type": "function",
            "docstring": "Get the current cursor position in character index the cursor position ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_cursor_click_pos",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: enable click positions; false: disable "
            },
            "json_type": "function",
            "docstring": "Get whether the cursor click positioning is enabled or not. true: enable click positions; false: disable ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_password_mode",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: password mode is enabled, false: disabled "
            },
            "json_type": "function",
            "docstring": "Get the password mode attribute true: password mode is enabled, false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_password_bullet",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the replacement text "
            },
            "json_type": "function",
            "docstring": "Get the replacement characters to show in password mode pointer to the replacement text ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_one_line",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: one line configuration is enabled, false: disabled "
            },
            "json_type": "function",
            "docstring": "Get the one line configuration attribute true: one line configuration is enabled, false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_accepted_chars",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "list of accented characters. "
            },
            "json_type": "function",
            "docstring": "Get a list of accepted characters. list of accented characters. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_max_length",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the maximal number of characters to be add "
            },
            "json_type": "function",
            "docstring": "Get max length of a Text Area. the maximal number of characters to be add ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_text_is_selected",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "whether text is selected or not "
            },
            "json_type": "function",
            "docstring": "Find whether text is selected or not. whether text is selected or not ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_text_selection",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: selection mode is enabled, false: disabled "
            },
            "json_type": "function",
            "docstring": "Find whether selection mode is enabled. true: selection mode is enabled, false: disabled ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_password_show_time",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "show time in milliseconds. 0: hide immediately. "
            },
            "json_type": "function",
            "docstring": "Set how long show the password before changing it to '*' show time in milliseconds. 0: hide immediately. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_get_current_char",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a the character or 0 "
            },
            "json_type": "function",
            "docstring": "Get a the character from the current cursor position a the character or 0 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_clear_selection",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear the selection on the text area. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_cursor_right",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the cursor one character right ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_cursor_left",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the cursor one character left ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_cursor_down",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the cursor one line down ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_textarea_cursor_up",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the cursor one line up ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a text area object "
                }
            ]
        },
        {
            "name": "lv_spinbox_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created spinbox "
            },
            "json_type": "function",
            "docstring": "Create a spinbox object pointer to the created spinbox ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set spinbox value ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "v",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "value to be set "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_rollover",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set spinbox rollover function ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "rollover",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true or false to enable or disable (default) "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_digit_format",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set spinbox digit format (digit count and decimal format) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "digit_count",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of digit excluding the decimal separator and the sign "
                },
                {
                    "name": "sep_pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of digit before the decimal point. If 0, decimal point is not shown "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_step",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set spinbox step ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "step",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "steps on increment/decrement. Can be 1, 10, 100, 1000, etc the digit that will change. "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_range",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set spinbox value range ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "range_min",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "maximum value, inclusive "
                },
                {
                    "name": "range_max",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "minimum value, inclusive "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_cursor_pos",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set cursor position to a specific digit for edition ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "pos",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "selected position in spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_set_digit_step_direction",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set direction of digit step when clicking an encoder button while in editing mode ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                },
                {
                    "name": "direction",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the direction (LV_DIR_RIGHT or LV_DIR_LEFT) "
                }
            ]
        },
        {
            "name": "lv_spinbox_get_rollover",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get spinbox rollover function status ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_get_value",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "value integer value of the spinbox "
            },
            "json_type": "function",
            "docstring": "Get the spinbox numeral value (user has to convert to float according to its digit format) value integer value of the spinbox ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_get_step",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "value integer step value of the spinbox "
            },
            "json_type": "function",
            "docstring": "Get the spinbox step value (user has to convert to float according to its digit format) value integer step value of the spinbox ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_step_next",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Select next lower digit for edition by dividing the step by 10 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_step_prev",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Select next higher digit for edition by multiplying the step by 10 ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_increment",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Increment spinbox value by one step ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinbox_decrement",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Decrement spinbox value by one step ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to spinbox "
                }
            ]
        },
        {
            "name": "lv_spinner_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created spinner "
            },
            "json_type": "function",
            "docstring": "Create a spinner widget the created spinner ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new spinner. "
                }
            ]
        },
        {
            "name": "lv_spinner_set_anim_params",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the animation time and arc length of the spinner ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a spinner "
                },
                {
                    "name": "t",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the animation time in milliseconds "
                },
                {
                    "name": "angle",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the angle of the arc in degrees "
                }
            ]
        },
        {
            "name": "lv_switch_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created switch "
            },
            "json_type": "function",
            "docstring": "Create a switch object pointer to the created switch ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new switch "
                }
            ]
        },
        {
            "name": "lv_switch_set_orientation",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the orientation of switch. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to switch object "
                },
                {
                    "name": "orientation",
                    "type": {
                        "name": "lv_switch_orientation_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "switch orientation from lv_switch_orientation_t "
                }
            ]
        },
        {
            "name": "lv_switch_get_orientation",
            "type": {
                "type": {
                    "name": "lv_switch_orientation_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "switch orientation from lv_switch_orientation_t "
            },
            "json_type": "function",
            "docstring": "Get the orientation of switch. switch orientation from lv_switch_orientation_t ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to switch object "
                }
            ]
        },
        {
            "name": "lv_table_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created table "
            },
            "json_type": "function",
            "docstring": "Create a table object pointer to the created table ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new table "
                }
            ]
        },
        {
            "name": "lv_table_set_cell_value",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of a cell. New roes/columns are added automatically if required ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "text to display in the cell. It will be copied and saved so this variable is not required after this function call. "
                }
            ]
        },
        {
            "name": "lv_table_set_cell_value_fmt",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of a cell. Memory will be allocated to store the text by the table. New roes/columns are added automatically if required ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "fmt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "printf -like format "
                },
                {
                    "name": "...",
                    "type": {
                        "name": "ellipsis",
                        "json_type": "special_type"
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_table_set_row_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of rows ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                },
                {
                    "name": "row_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of rows "
                }
            ]
        },
        {
            "name": "lv_table_set_column_count",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the number of columns ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                },
                {
                    "name": "col_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of columns. "
                }
            ]
        },
        {
            "name": "lv_table_set_column_width",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the width of a column ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                },
                {
                    "name": "col_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. LV_TABLE_COL_MAX -1] "
                },
                {
                    "name": "w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "width of the column "
                }
            ]
        },
        {
            "name": "lv_table_add_cell_ctrl",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add control bits to the cell. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_table_cell_ctrl_t "
                }
            ]
        },
        {
            "name": "lv_table_clear_cell_ctrl",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Clear control bits of the cell. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_table_cell_ctrl_t "
                }
            ]
        },
        {
            "name": "lv_table_set_cell_user_data",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add custom user data to the cell. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the new user_data. Should be allocated by lv_malloc , and it will be freed automatically when the table is deleted or when the cell is dropped due to lower row or column count. "
                }
            ]
        },
        {
            "name": "lv_table_set_selected_cell",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the selected cell ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the cell row to select "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the cell column to select "
                }
            ]
        },
        {
            "name": "lv_table_get_cell_value",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "text in the cell "
            },
            "json_type": "function",
            "docstring": "Get the value of a cell. text in the cell ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                }
            ]
        },
        {
            "name": "lv_table_get_row_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of rows. "
            },
            "json_type": "function",
            "docstring": "Get the number of rows. number of rows. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                }
            ]
        },
        {
            "name": "lv_table_get_column_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "number of columns. "
            },
            "json_type": "function",
            "docstring": "Get the number of columns. number of columns. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                }
            ]
        },
        {
            "name": "lv_table_get_column_width",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "width of the column "
            },
            "json_type": "function",
            "docstring": "Get the width of a column width of the column ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "table pointer to a Table object "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. LV_TABLE_COL_MAX -1] "
                }
            ]
        },
        {
            "name": "lv_table_has_cell_ctrl",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true: all control bits are set; false: not all control bits are set "
            },
            "json_type": "function",
            "docstring": "Get whether a cell has the control bits true: all control bits are set; false: not all control bits are set ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_table_cell_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "OR-ed values from lv_table_cell_ctrl_t "
                }
            ]
        },
        {
            "name": "lv_table_get_selected_cell",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get the selected cell (pressed and or focused) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a table object "
                },
                {
                    "name": "row",
                    "type": {
                        "type": {
                            "name": "uint32_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to variable to store the selected row (LV_TABLE_CELL_NONE: if no cell selected) "
                },
                {
                    "name": "col",
                    "type": {
                        "type": {
                            "name": "uint32_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to variable to store the selected column (LV_TABLE_CELL_NONE: if no cell selected) "
                }
            ]
        },
        {
            "name": "lv_table_get_cell_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Get custom user data to the cell. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a Table object "
                },
                {
                    "name": "row",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the row [0 .. row_cnt -1] "
                },
                {
                    "name": "col",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "id of the column [0 .. col_cnt -1] "
                }
            ]
        },
        {
            "name": "lv_tabview_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created tabview "
            },
            "json_type": "function",
            "docstring": "Create a tabview widget the created tabview ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a parent widget "
                }
            ]
        },
        {
            "name": "lv_tabview_add_tab",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the widget where the content of the tab can be created "
            },
            "json_type": "function",
            "docstring": "Add a tab to the tabview the widget where the content of the tab can be created ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                },
                {
                    "name": "name",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the name of the tab, it will be displayed on the tab bar "
                }
            ]
        },
        {
            "name": "lv_tabview_rename_tab",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Change the name of the tab ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the tab to rename "
                },
                {
                    "name": "new_name",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new name as a string "
                }
            ]
        },
        {
            "name": "lv_tabview_set_active",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Show a tab ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                },
                {
                    "name": "idx",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the index of the tab to show "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON/OFF "
                }
            ]
        },
        {
            "name": "lv_tabview_set_tab_bar_position",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the position of the tab bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DIR_TOP/BOTTOM/LEFT/RIGHT "
                }
            ]
        },
        {
            "name": "lv_tabview_set_tab_bar_size",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the width or height of the tab bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to tabview widget "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of the tab bar in pixels or percentage. will be used as width or height based on the position of the tab bar) "
                }
            ]
        },
        {
            "name": "lv_tabview_get_tab_count",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the number of tabs "
            },
            "json_type": "function",
            "docstring": "Get the number of tabs the number of tabs ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                }
            ]
        },
        {
            "name": "lv_tabview_get_tab_active",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the zero based index of the current tab "
            },
            "json_type": "function",
            "docstring": "Get the current tab's index the zero based index of the current tab ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                }
            ]
        },
        {
            "name": "lv_tabview_get_content",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the main container widget "
            },
            "json_type": "function",
            "docstring": "Get the widget where the container of each tab is created the main container widget ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                }
            ]
        },
        {
            "name": "lv_tabview_get_tab_bar",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the tab bar "
            },
            "json_type": "function",
            "docstring": "Get the tab bar where the buttons are created the tab bar ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a tabview widget "
                }
            ]
        },
        {
            "name": "lv_tileview_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created tileview "
            },
            "json_type": "function",
            "docstring": "Create a tileview object pointer to the created tileview ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object, it will be the parent of the new tileview "
                }
            ]
        },
        {
            "name": "lv_tileview_add_tile",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the added tile object "
            },
            "json_type": "function",
            "docstring": "Add a tile to the tileview pointer to the added tile object ",
            "args": [
                {
                    "name": "tv",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the tileview object "
                },
                {
                    "name": "col_id",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "column id of the tile "
                },
                {
                    "name": "row_id",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "row id of the tile "
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "direction to move to the next tile "
                }
            ]
        },
        {
            "name": "lv_tileview_set_tile",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the active tile in the tileview. ",
            "args": [
                {
                    "name": "tv",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "tile_obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the tile object to be set as active "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "animation enable flag (LV_ANIM_ON or LV_ANIM_OFF) "
                }
            ]
        },
        {
            "name": "lv_tileview_set_tile_by_index",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the active tile by index in the tileview ",
            "args": [
                {
                    "name": "tv",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the tileview object "
                },
                {
                    "name": "col_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "column id of the tile to be set as active "
                },
                {
                    "name": "row_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "row id of the tile to be set as active "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "animation enable flag (LV_ANIM_ON or LV_ANIM_OFF) "
                }
            ]
        },
        {
            "name": "lv_tileview_get_tile_active",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the currently active tile object "
            },
            "json_type": "function",
            "docstring": "Get the currently active tile in the tileview pointer to the currently active tile object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the tileview object "
                }
            ]
        },
        {
            "name": "lv_win_create",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the created window "
            },
            "json_type": "function",
            "docstring": "Create a window widget the created window ",
            "args": [
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a parent widget "
                }
            ]
        },
        {
            "name": "lv_win_add_title",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the widget where the content of the title can be created "
            },
            "json_type": "function",
            "docstring": "Add a title to the window the widget where the content of the title can be created ",
            "args": [
                {
                    "name": "win",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "txt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the text of the title "
                }
            ]
        },
        {
            "name": "lv_win_add_button",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the widget where the content of the button can be created "
            },
            "json_type": "function",
            "docstring": "Add a button to the window the widget where the content of the button can be created ",
            "args": [
                {
                    "name": "win",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "icon",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an icon to be displayed on the button "
                },
                {
                    "name": "btn_w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "width of the button "
                }
            ]
        },
        {
            "name": "lv_win_get_header",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the header of the window "
            },
            "json_type": "function",
            "docstring": "Get the header of the window the header of the window ",
            "args": [
                {
                    "name": "win",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a window widget "
                }
            ]
        },
        {
            "name": "lv_win_get_content",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the content of the window "
            },
            "json_type": "function",
            "docstring": "Get the content of the window the content of the window ",
            "args": [
                {
                    "name": "win",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a window widget "
                }
            ]
        },
        {
            "name": "lv_subject_init_int",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an integer type subject ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "initial value "
                }
            ]
        },
        {
            "name": "lv_subject_set_int",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of an integer subject. It will notify all the observers as well. ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new value "
                }
            ]
        },
        {
            "name": "lv_subject_get_int",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value "
            },
            "json_type": "function",
            "docstring": "Get the current value of an integer subject the current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_get_previous_int",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the current value "
            },
            "json_type": "function",
            "docstring": "Get the previous value of an integer subject the current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_init_string",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a string type subject the string subject stores the whole string, not only a pointer ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer to store the string "
                },
                {
                    "name": "prev_buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a buffer to store the previous string, can be NULL if not used "
                },
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of the buffer "
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "initial value as a string, e.g. \"hello\" "
                }
            ]
        },
        {
            "name": "lv_subject_copy_string",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Copy a string to a subject. It will notify all the observers as well. ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the new string "
                }
            ]
        },
        {
            "name": "lv_subject_get_string",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the buffer containing the current value "
            },
            "json_type": "function",
            "docstring": "Get the current value of an string subject pointer to the buffer containing the current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_get_previous_string",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the buffer containing the current value "
            },
            "json_type": "function",
            "docstring": "Get the previous value of an string subject pointer to the buffer containing the current value  NULL will be returned if NULL was passed in :ref:`lv_subject_init_string()` as prev_buf ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_init_pointer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an pointer type subject ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "value",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "initial value "
                }
            ]
        },
        {
            "name": "lv_subject_set_pointer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of a pointer subject. It will notify all the observers as well. ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "ptr",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new value "
                }
            ]
        },
        {
            "name": "lv_subject_get_pointer",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "current value "
            },
            "json_type": "function",
            "docstring": "Get the current value of a pointer subject current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_get_previous_pointer",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "current value "
            },
            "json_type": "function",
            "docstring": "Get the previous value of a pointer subject current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_init_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an color type subject ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "initial value "
                }
            ]
        },
        {
            "name": "lv_subject_set_color",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set the value of a color subject. It will notify all the observers as well. ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "new value "
                }
            ]
        },
        {
            "name": "lv_subject_get_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "current value "
            },
            "json_type": "function",
            "docstring": "Get the current value of a color subject current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_get_previous_color",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "current value "
            },
            "json_type": "function",
            "docstring": "Get the previous value of a color subject current value ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_init_group",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a subject group ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "list",
                    "type": {
                        "type": {
                            "type": {
                                "name": "lv_subject_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "list of other subject addresses, any of these changes subject will be notified "
                },
                {
                    "name": "list_len",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of elements in list "
                }
            ]
        },
        {
            "name": "lv_subject_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove all the observers from a subject and free all allocated memories in it objects added with lv_subject_add_observer_obj should be already deleted or removed manually. ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                }
            ]
        },
        {
            "name": "lv_subject_get_group_element",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_subject_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer a subject from the list, or NULL if the index is out of bounds "
            },
            "json_type": "function",
            "docstring": "Get an element from the subject group's list pointer a subject from the list, or NULL if the index is out of bounds ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "index",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "index of the element to get "
                }
            ]
        },
        {
            "name": "lv_subject_add_observer",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Add an observer to a subject. When the subject changes observer_cb will be called. pointer to the created observer ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "observer_cb",
                    "type": {
                        "name": "lv_observer_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "callback to call "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional user data "
                }
            ]
        },
        {
            "name": "lv_subject_add_observer_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Add an observer to a subject for an object. When the object is deleted, it will be removed from the subject automatically. pointer to the created observer ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "observer_cb",
                    "type": {
                        "name": "lv_observer_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "callback to call "
                },
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional user data "
                }
            ]
        },
        {
            "name": "lv_subject_add_observer_with_target",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Add an observer to a subject and also save a target. pointer to the created observer ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the subject "
                },
                {
                    "name": "observer_cb",
                    "type": {
                        "name": "lv_observer_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "callback to call "
                },
                {
                    "name": "target",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to any data "
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional user data "
                }
            ]
        },
        {
            "name": "lv_observer_remove",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove an observer from its subject ",
            "args": [
                {
                    "name": "observer",
                    "type": {
                        "type": {
                            "name": "lv_observer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an observer "
                }
            ]
        },
        {
            "name": "lv_obj_remove_from_subject",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove the observers of an object from a subject or all subjects This function can be used e.g. when an object's subject(s) needs to be replaced by other subject(s) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the object whose observers should be removed "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the subject to remove the object from, or NULL to remove from all subjects "
                }
            ]
        },
        {
            "name": "lv_observer_get_target",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the saved target "
            },
            "json_type": "function",
            "docstring": "Get the target of an observer pointer to the saved target ",
            "args": [
                {
                    "name": "observer",
                    "type": {
                        "type": {
                            "name": "lv_observer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an observer "
                }
            ]
        },
        {
            "name": "lv_observer_get_target_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_obj_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the saved object target "
            },
            "json_type": "function",
            "docstring": "Get the target object of the observer. It's the same as lv_observer_get_target and added only for semantic reasons pointer to the saved object target ",
            "args": [
                {
                    "name": "observer",
                    "type": {
                        "type": {
                            "name": "lv_observer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an observer "
                }
            ]
        },
        {
            "name": "lv_observer_get_user_data",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "void pointer to the saved user data "
            },
            "json_type": "function",
            "docstring": "Get the user data of the observer. void pointer to the saved user data ",
            "args": [
                {
                    "name": "observer",
                    "type": {
                        "type": {
                            "name": "lv_observer_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an observer "
                }
            ]
        },
        {
            "name": "lv_subject_notify",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Notify all observers of subject ",
            "args": [
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_obj_bind_flag_if_eq",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Set an object flag if an integer subject's value is equal to a reference value, clear the flag otherwise pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "flag to set or clear (e.g. LV_OBJ_FLAG_HIDDEN ) "
                },
                {
                    "name": "ref_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "reference value to compare the subject's value with "
                }
            ]
        },
        {
            "name": "lv_obj_bind_flag_if_not_eq",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Set an object flag if an integer subject's value is not equal to a reference value, clear the flag otherwise pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_obj_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "flag to set or clear (e.g. LV_OBJ_FLAG_HIDDEN ) "
                },
                {
                    "name": "ref_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "reference value to compare the subject's value with "
                }
            ]
        },
        {
            "name": "lv_obj_bind_state_if_eq",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Set an object state if an integer subject's value is equal to a reference value, clear the flag otherwise pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "state to set or clear (e.g. LV_STATE_CHECKED ) "
                },
                {
                    "name": "ref_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "reference value to compare the subject's value with "
                }
            ]
        },
        {
            "name": "lv_obj_bind_state_if_not_eq",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Set an object state if an integer subject's value is not equal to a reference value, clear the flag otherwise pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "state to set or clear (e.g. LV_STATE_CHECKED ) "
                },
                {
                    "name": "ref_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "reference value to compare the subject's value with "
                }
            ]
        },
        {
            "name": "lv_obj_bind_checked",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Set an integer subject to 1 when an object is checked and set it 0 when unchecked. pointer to the created observer  Ensure the object's LV_OBJ_FLAG_CHECKABLE flag is set ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_label_bind_text",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Bind an integer, string, or pointer subject to a label. pointer to the created observer  fmt == NULL can be used only with string and pointer subjects.  if the subject is a pointer must point to a \\0 terminated string. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a label "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                },
                {
                    "name": "fmt",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "optional format string with 1 format specifier (e.g. \"%d \u00b0C\") or NULL to bind the value directly. "
                }
            ]
        },
        {
            "name": "lv_arc_bind_value",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Bind an integer subject to an arc's value pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an arc "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_slider_bind_value",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Bind an integer subject to a slider's value pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a slider "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_roller_bind_value",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Bind an integer subject to a roller's value pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a roller "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_dropdown_bind_value",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_observer_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the created observer "
            },
            "json_type": "function",
            "docstring": "Bind an integer subject to a dropdown's value pointer to the created observer ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a drop down "
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a subject "
                }
            ]
        },
        {
            "name": "lv_gridnav_add",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Add grid navigation feature to an object. It expects the children to be arranged into a grid-like layout. Although it's not required to have pixel perfect alignment. This feature makes possible to use keys to navigate among the children and focus them. The keys other than arrows and press/release related events are forwarded to the focused child. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object on which navigation should be applied. "
                },
                {
                    "name": "ctrl",
                    "type": {
                        "name": "lv_gridnav_ctrl_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "control flags from lv_gridnav_ctrl_t . "
                }
            ]
        },
        {
            "name": "lv_gridnav_remove",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Remove the grid navigation support from an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_gridnav_set_focused",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Manually focus an object on gridnav container ",
            "args": [
                {
                    "name": "cont",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a gridnav container "
                },
                {
                    "name": "to_focus",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object to focus "
                },
                {
                    "name": "anim_en",
                    "type": {
                        "name": "lv_anim_enable_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_ANIM_ON/OFF "
                }
            ]
        },
        {
            "name": "lv_bin_decoder_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize the binary image decoder module ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_bin_decoder_info",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: the info is successfully stored in header ; LV_RESULT_INVALID: unknown format or other error. "
            },
            "json_type": "function",
            "docstring": "Get info about a lvgl binary image LV_RESULT_OK: the info is successfully stored in header ; LV_RESULT_INVALID: unknown format or other error. ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the decoder where this function belongs "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "image descriptor containing the source and type of the image and other info. "
                },
                {
                    "name": "header",
                    "type": {
                        "type": {
                            "name": "lv_image_header_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "store the image data here "
                }
            ]
        },
        {
            "name": "lv_bin_decoder_get_area",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "full_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "decoded_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_bin_decoder_open",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "LV_RESULT_OK: the info is successfully stored in header ; LV_RESULT_INVALID: unknown format or other error. "
            },
            "json_type": "function",
            "docstring": "Open a lvgl binary image LV_RESULT_OK: the info is successfully stored in header ; LV_RESULT_INVALID: unknown format or other error. ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the decoder where this function belongs "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to decoder descriptor. src , style are already initialized in it. "
                }
            ]
        },
        {
            "name": "lv_bin_decoder_close",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Close the pending decoding. Free resources etc. ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the decoder the function associated with "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to decoder descriptor "
                }
            ]
        },
        {
            "name": "lv_fs_stdio_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_triangle_dsc_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a triangle draw descriptor ",
            "args": [
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_triangle_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_task_get_triangle_dsc",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_draw_triangle_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_TRIANGLE "
            },
            "json_type": "function",
            "docstring": "Try to get a triangle draw descriptor from a draw task. the task's draw descriptor or NULL if the task is not of type LV_DRAW_TASK_TYPE_TRIANGLE ",
            "args": [
                {
                    "name": "task",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw task "
                }
            ]
        },
        {
            "name": "lv_draw_triangle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Create a triangle draw task ",
            "args": [
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a layer "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_triangle_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized :ref:`lv_draw_triangle_dsc_t` object "
                }
            ]
        },
        {
            "name": "lv_draw_sw_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize the SW renderer. Called in internally. It creates as many SW renderers as defined in LV_DRAW_SW_DRAW_UNIT_CNT ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_sw_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinitialize the SW renderers ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_sw_fill",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Fill an area using SW render. Handle gradient and radius. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_fill_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the rectangle "
                }
            ]
        },
        {
            "name": "lv_draw_sw_border",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw border with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_border_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the rectangle "
                }
            ]
        },
        {
            "name": "lv_draw_sw_box_shadow",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw box shadow with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_box_shadow_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the rectangle for which the box shadow should be drawn "
                }
            ]
        },
        {
            "name": "lv_draw_sw_image",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw an image with SW render. It handles image decoding, tiling, transformations, and recoloring. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the image "
                }
            ]
        },
        {
            "name": "lv_draw_sw_label",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw a label with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the label "
                }
            ]
        },
        {
            "name": "lv_draw_sw_arc",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw an arc with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_arc_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the arc "
                }
            ]
        },
        {
            "name": "lv_draw_sw_line",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw a line with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_line_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_sw_layer",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Blend a layer with SW render ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the layer "
                }
            ]
        },
        {
            "name": "lv_draw_sw_triangle",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Draw a triangle with SW render. ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_triangle_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_rect",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Mask out a rectangle with radius from a current layer ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_mask_rect_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the draw descriptor "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the coordinates of the mask "
                }
            ]
        },
        {
            "name": "lv_draw_sw_transform",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Used internally to get a transformed are of an image ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dest_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "area to calculate, i.e. get this area from the transformed image "
                },
                {
                    "name": "src_buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source buffer "
                },
                {
                    "name": "src_w",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source buffer width in pixels "
                },
                {
                    "name": "src_h",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source buffer height in pixels "
                },
                {
                    "name": "src_stride",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source buffer stride in bytes "
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "draw descriptor "
                },
                {
                    "name": "sup",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_sup_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "supplementary data "
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "color format of the source buffer "
                },
                {
                    "name": "dest_buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the destination buffer "
                }
            ]
        },
        {
            "name": "lv_draw_sw_rgb565_swap",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Swap the upper and lower byte of an RGB565 buffer. Might be required if a 8bit parallel port or an SPI port send the bytes in the wrong order. The bytes will be swapped in place. ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to buffer "
                },
                {
                    "name": "buf_size_px",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "number of pixels in the buffer "
                }
            ]
        },
        {
            "name": "lv_draw_sw_i1_invert",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Invert a draw buffer in the I1 color format. Conventionally, a bit is set to 1 during blending if the luminance is greater than 127. Depending on the display controller used, you might want to have different behavior. The inversion will be performed in place. ",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the buffer to be inverted "
                },
                {
                    "name": "buf_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "size of the buffer in bytes "
                }
            ]
        },
        {
            "name": "lv_draw_sw_rotate",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Rotate a buffer into another buffer ",
            "args": [
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the source buffer "
                },
                {
                    "name": "dest",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the destination buffer "
                },
                {
                    "name": "src_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source width in pixels "
                },
                {
                    "name": "src_height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source height in pixels "
                },
                {
                    "name": "src_stride",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "source stride in bytes (number of bytes in a row) "
                },
                {
                    "name": "dest_stride",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "destination stride in bytes (number of bytes in a row) "
                },
                {
                    "name": "rotation",
                    "type": {
                        "name": "lv_display_rotation_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_DISPLAY_ROTATION_0/90/180/270 "
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "LV_COLOR_FORMAT_RGB565/RGB888/XRGB8888/ARGB8888 "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_apply",
            "type": {
                "type": {
                    "name": "lv_draw_sw_mask_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": "masks",
                    "type": {
                        "type": {
                            "type": {
                                "name": "void",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "pointer",
                            "quals": []
                        },
                        "json_type": "array",
                        "dim": null,
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "mask_buf",
                    "type": {
                        "type": {
                            "name": "lv_opa_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "abs_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "abs_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "len",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_free_param",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Free the data from the parameter. It's called inside lv_draw_sw_mask_remove_id and lv_draw_sw_mask_remove_custom Needs to be called only in special cases when the mask is not added by lv_draw_mask_add and not removed by lv_draw_mask_remove_id or lv_draw_mask_remove_custom ",
            "args": [
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a mask parameter "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_line_points_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a line mask from two points. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_line_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_draw_mask_param_t to initialize "
                },
                {
                    "name": "p1x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of the first point of the line "
                },
                {
                    "name": "p1y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y coordinate of the first point of the line "
                },
                {
                    "name": "p2x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of the second point of the line "
                },
                {
                    "name": "p2y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "y coordinate of the second point of the line "
                },
                {
                    "name": "side",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "and element of lv_draw_mask_line_side_t to describe which side to keep. With LV_DRAW_MASK_LINE_SIDE_LEFT/RIGHT and horizontal line all pixels are kept With LV_DRAW_MASK_LINE_SIDE_TOP/BOTTOM and vertical line all pixels are kept "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_line_angle_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a line mask from a point and an angle. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_line_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_draw_mask_param_t to initialize "
                },
                {
                    "name": "px",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of a point of the line "
                },
                {
                    "name": "py",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of a point of the line "
                },
                {
                    "name": "angle",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "right 0 deg, bottom: 90 "
                },
                {
                    "name": "side",
                    "type": {
                        "name": "lv_draw_sw_mask_line_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "an element of lv_draw_mask_line_side_t to describe which side to keep. With LV_DRAW_MASK_LINE_SIDE_LEFT/RIGHT and horizontal line all pixels are kept With LV_DRAW_MASK_LINE_SIDE_TOP/BOTTOM and vertical line all pixels are kept "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_angle_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize an angle mask. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_angle_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_draw_mask_param_t to initialize "
                },
                {
                    "name": "vertex_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "X coordinate of the angle vertex (absolute coordinates) "
                },
                {
                    "name": "vertex_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "Y coordinate of the angle vertex (absolute coordinates) "
                },
                {
                    "name": "start_angle",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "start angle in degrees. 0 deg on the right, 90 deg, on the bottom "
                },
                {
                    "name": "end_angle",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "end angle "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_radius_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a fade mask. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_radius_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an lv_draw_mask_radius_param_t to initialize "
                },
                {
                    "name": "rect",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "coordinates of the rectangle to affect (absolute coordinates) "
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "radius of the rectangle "
                },
                {
                    "name": "inv",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "true: keep the pixels inside the rectangle; keep the pixels outside of the rectangle "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_fade_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a fade mask. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_fade_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_draw_mask_param_t to initialize "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "coordinates of the area to affect (absolute coordinates) "
                },
                {
                    "name": "opa_top",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "opacity on the top "
                },
                {
                    "name": "y_top",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "at which coordinate start to change to opacity to opa_bottom "
                },
                {
                    "name": "opa_bottom",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "opacity at the bottom "
                },
                {
                    "name": "y_bottom",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "at which coordinate reach opa_bottom . "
                }
            ]
        },
        {
            "name": "lv_draw_sw_mask_map_init",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Initialize a map mask. ",
            "args": [
                {
                    "name": "param",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_mask_map_param_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a lv_draw_mask_param_t to initialize "
                },
                {
                    "name": "coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "coordinates of the map (absolute coordinates) "
                },
                {
                    "name": "map",
                    "type": {
                        "type": {
                            "name": "lv_opa_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "array of bytes with the mask values "
                }
            ]
        },
        {
            "name": "lv_draw_sw_blend",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Call the blend function of the layer . ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a draw unit "
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_sw_blend_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an initialized blend descriptor "
                }
            ]
        },
        {
            "name": "lv_theme_get_from_obj",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the theme of the object's display (can be NULL) "
            },
            "json_type": "function",
            "docstring": "Get the theme assigned to the display of the object the theme of the object's display (can be NULL) ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a theme object "
                }
            ]
        },
        {
            "name": "lv_theme_apply",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Apply the active theme on an object ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_set_parent",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set a base theme for a theme. The styles from the base them will be added before the styles of the current theme. Arbitrary long chain of themes can be created by setting base themes. ",
            "args": [
                {
                    "name": "new_theme",
                    "type": {
                        "type": {
                            "name": "lv_theme_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to theme which base should be set "
                },
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_theme_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the base theme "
                }
            ]
        },
        {
            "name": "lv_theme_set_apply_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Set an apply callback for a theme. The apply callback is used to add styles to different objects ",
            "args": [
                {
                    "name": "theme",
                    "type": {
                        "type": {
                            "name": "lv_theme_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to theme which callback should be set "
                },
                {
                    "name": "apply_cb",
                    "type": {
                        "name": "lv_theme_apply_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to the callback "
                }
            ]
        },
        {
            "name": "lv_theme_get_font_small",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the font "
            },
            "json_type": "function",
            "docstring": "Get the small font of the theme pointer to the font ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_get_font_normal",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the font "
            },
            "json_type": "function",
            "docstring": "Get the normal font of the theme pointer to the font ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_get_font_large",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_font_t",
                        "json_type": "lvgl_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "pointer to the font "
            },
            "json_type": "function",
            "docstring": "Get the subtitle font of the theme pointer to the font ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_get_color_primary",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Get the primary color of the theme the color ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_get_color_secondary",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "the color "
            },
            "json_type": "function",
            "docstring": "Get the secondary color of the theme the color ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_theme_default_init",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to reference this theme later "
            },
            "json_type": "function",
            "docstring": "Initialize the theme a pointer to reference this theme later ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display "
                },
                {
                    "name": "color_primary",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the primary color of the theme "
                },
                {
                    "name": "color_secondary",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "the secondary color for the theme "
                },
                {
                    "name": "dark",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font to use. "
                }
            ]
        },
        {
            "name": "lv_theme_default_get",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to default theme, or NULL if this is not initialized "
            },
            "json_type": "function",
            "docstring": "Get default theme a pointer to default theme, or NULL if this is not initialized ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_default_is_inited",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if default theme is initialized, false otherwise "
            },
            "json_type": "function",
            "docstring": "Check if default theme is initialized true if default theme is initialized, false otherwise ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_default_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinitialize the default theme ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_mono_init",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to reference this theme later "
            },
            "json_type": "function",
            "docstring": "Initialize the theme a pointer to reference this theme later ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display "
                },
                {
                    "name": "dark_bg",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to a font to use. "
                }
            ]
        },
        {
            "name": "lv_theme_mono_is_inited",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if default theme is initialized, false otherwise "
            },
            "json_type": "function",
            "docstring": "Check if the theme is initialized true if default theme is initialized, false otherwise ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_mono_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinitialize the mono theme ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_simple_init",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to reference this theme later "
            },
            "json_type": "function",
            "docstring": "Initialize the theme a pointer to reference this theme later ",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to display to attach the theme "
                }
            ]
        },
        {
            "name": "lv_theme_simple_is_inited",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "true if default theme is initialized, false otherwise "
            },
            "json_type": "function",
            "docstring": "Check if the theme is initialized true if default theme is initialized, false otherwise ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_simple_get",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_theme_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": "a pointer to simple theme, or NULL if this is not initialized "
            },
            "json_type": "function",
            "docstring": "Get simple theme a pointer to simple theme, or NULL if this is not initialized ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_theme_simple_deinit",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Deinitialize the simple theme ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_task_handler",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_obj_move_foreground",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the object to the foreground. It will look like if it was created as the last child of its parent. It also means it can cover any of the siblings. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_obj_move_background",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "Move the object to the background. It will look like if it was created as the first child of its parent. It also means any of the siblings can cover the object. ",
            "args": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "pointer to an object "
                }
            ]
        },
        {
            "name": "lv_version_major",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_version_minor",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_version_patch",
            "type": {
                "type": {
                    "name": "int",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        },
        {
            "name": "lv_version_info",
            "type": {
                "type": {
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": [
                            "const"
                        ]
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ]
        }
    ],
    "function_pointers": [
        {
            "name": "lv_log_print_g_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Log print function. Receives a string buffer to print\". ",
            "args": [
                {
                    "name": "level",
                    "type": {
                        "name": "lv_log_level_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_tick_get_cb_t",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_delay_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "ms",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_timer_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Timers execute this type of functions. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_timer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_timer_handler_resume_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Timer handler resume this type of function. ",
            "args": [
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_async_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Type for async callback. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_path_cb_t",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Get the current value during an animation ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": [
                        "const"
                    ]
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_exec_xcb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Generic prototype of \"animator\" functions. First parameter is the variable to animate. Second parameter is the value to set. Compatible with lv_xxx_set_yyy(obj, value) functions The x in _xcb_t means it's not a fully generic prototype because it doesn't receive lv_anim_t * as its first argument ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_custom_exec_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Same as lv_anim_exec_xcb_t but receives lv_anim_t * as the first parameter. It's more consistent but less convenient. Might be used by binding generator functions. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_completed_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Callback to call when the animation is ready ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_start_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Callback to call when the animation really stars (considering delay ) ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_get_value_cb_t",
            "type": {
                "type": {
                    "name": "int32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Callback used when the animation values are relative to get the current value ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_deleted_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Callback used when the animation is deleted ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_anim_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_rb_compare_t",
            "type": {
                "type": {
                    "name": "lv_rb_compare_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "b",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_color_filter_cb_t",
            "type": {
                "type": {
                    "name": "lv_color_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "_lv_color_filter_dsc_t",
                            "type": {
                                "name": "struct",
                                "json_type": "primitive_type"
                            },
                            "json_type": "forward_decl",
                            "docstring": null,
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": [
                        "const"
                    ]
                },
                {
                    "name": null,
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_buf_malloc_cb",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_buf_free_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_buf_align_cb",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_buf_cache_operation_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_buf_width_to_stride_cb",
            "type": {
                "type": {
                    "name": "uint32_t",
                    "json_type": "stdlib_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_iter_next_cb",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "instance",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "context",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "elem",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_iter_inspect_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "elem",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_create_cb_t",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_free_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "node",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_compare_cb_t",
            "type": {
                "type": {
                    "name": "lv_cache_compare_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "a",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "b",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_alloc_cb_t",
            "type": {
                "type": {
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache instance allocation function, used by the cache class to allocate memory for cache instances. It should return a pointer to the allocated instance. ",
            "args": [
                {
                    "name": null,
                    "type": {
                        "name": "void",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_init_cb_t",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache instance initialization function, used by the cache class to initialize the cache instance. It should return true if the initialization is successful, false otherwise. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_destroy_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache instance destruction function, used by the cache class to destroy the cache instance. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_get_cb_t",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache get function, used by the cache class to get a cache entry by its key. NULL if the key is not found. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_add_cb_t",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache add function, used by the cache class to add a cache entry with a given key. This function only cares about how to add the entry, it doesn't check if the entry already exists and doesn't care about is it a victim or not. the added cache entry, or NULL if the entry is not added. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_remove_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache remove function, used by the cache class to remove a cache entry from the cache but doesn't free the memory.. This function only cares about how to remove the entry, it doesn't care about is it a victim or not. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_drop_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache drop function, used by the cache class to remove a cache entry from the cache and free the memory. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_drop_all_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache drop all function, used by the cache class to remove all cache entries from the cache and free the memory. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_get_victim_cb",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_cache_entry_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache get victim function, used by the cache class to get a victim entry to be evicted. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_reserve_cond_cb",
            "type": {
                "type": {
                    "name": "lv_cache_reserve_cond_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache reserve condition function, used by the cache class to check if a new entry can be added to the cache without exceeding its maximum size. See lv_cache_reserve_cond_res_t for the possible results. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_iter_create_cb",
            "type": {
                "type": {
                    "type": {
                        "name": "lv_iter_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "pointer",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "The cache iterator creation function, used by the cache class to create an iterator for the cache. A pointer to the created iterator, or NULL if the iterator cannot be created. ",
            "args": [
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_layout_update_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_event_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_decoder_info_f_t",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Get info from an image and store in the header  LV_RESULT_OK: info written correctly; LV_RESULT_INVALID: failed ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "header",
                    "type": {
                        "type": {
                            "name": "lv_image_header_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_decoder_open_f_t",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Open an image for decoding. Prepare it as it is required to read it later ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_decoder_get_area_cb_t",
            "type": {
                "type": {
                    "name": "lv_result_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Decode full_area pixels incrementally by calling in a loop. Set decoded_area values to LV_COORD_MIN on first call. Required only if the \"open\" function can't return with the whole decoded pixel array. LV_RESULT_OK: ok; LV_RESULT_INVALID: failed or there is nothing left to decode ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "full_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "decoded_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_decoder_close_f_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Close the pending decoding. Free resources etc. ",
            "args": [
                {
                    "name": "decoder",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_display_flush_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "px_map",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_display_flush_wait_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "disp",
                    "type": {
                        "type": {
                            "name": "lv_display_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_tree_walk_cb_t",
            "type": {
                "type": {
                    "name": "lv_obj_tree_walk_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_glyph_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Passed as a parameter to lv_draw_label_iterate_characters to draw the characters one by one ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "fill_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_fill_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "fill_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_image_core_cb",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "PErform the actual rendering of a decoded image ",
            "args": [
                {
                    "name": "draw_unit",
                    "type": {
                        "type": {
                            "name": "lv_draw_unit_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "draw_dsc",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "decoder_dsc",
                    "type": {
                        "type": {
                            "name": "lv_image_decoder_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "sup",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_sup_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "img_coords",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "clipped_img_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_obj_class_event_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "class_p",
                    "type": {
                        "type": {
                            "name": "lv_obj_class_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "e",
                    "type": {
                        "type": {
                            "name": "lv_event_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_group_focus_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_group_edge_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_group_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        },
        {
            "name": "lv_indev_read_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "indev",
                    "type": {
                        "type": {
                            "name": "lv_indev_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "lv_indev_data_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_buttonmatrix_button_draw_cb_t",
            "type": {
                "type": {
                    "name": "bool",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": "btnm",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "draw_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "clip_area",
                    "type": {
                        "type": {
                            "name": "lv_area_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_observer_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "Callback called when the observed value changes ",
            "args": [
                {
                    "name": "observer",
                    "type": {
                        "type": {
                            "name": "lv_observer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "subject",
                    "type": {
                        "type": {
                            "name": "lv_subject_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_xcb_t",
            "type": {
                "type": {
                    "name": "lv_draw_sw_mask_res_t",
                    "json_type": "lvgl_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "A common callback type for every mask type. Used internally by the library. ",
            "args": [
                {
                    "name": "mask_buf",
                    "type": {
                        "type": {
                            "name": "lv_opa_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "abs_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "abs_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "len",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                },
                {
                    "name": "p",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_theme_apply_cb_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "ret_type",
                "docstring": ""
            },
            "json_type": "function_pointer",
            "docstring": "",
            "args": [
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_theme_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                },
                {
                    "name": null,
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "arg",
                    "docstring": "",
                    "quals": []
                }
            ],
            "quals": []
        }
    ],
    "structures": [
        {
            "name": "lv_mem_monitor_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "total_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "free_cnt",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "free_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "free_biggest_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "used_cnt",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "max_used",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "used_pct",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "frag_pct",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_ll_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "n_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "head",
                    "type": {
                        "type": {
                            "name": "lv_ll_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "tail",
                    "type": {
                        "type": {
                            "name": "lv_ll_node_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_sqrt_res_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "i",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "f",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_array_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "capacity",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "element_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_anim_bezier3_para_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "x1",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y1",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "x2",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y2",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_anim_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "var",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "exec_cb",
                    "type": {
                        "name": "lv_anim_exec_xcb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "custom_exec_cb",
                    "type": {
                        "name": "lv_anim_custom_exec_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "start_cb",
                    "type": {
                        "name": "lv_anim_start_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "completed_cb",
                    "type": {
                        "name": "lv_anim_completed_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "deleted_cb",
                    "type": {
                        "name": "lv_anim_deleted_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "get_value_cb",
                    "type": {
                        "name": "lv_anim_get_value_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "path_cb",
                    "type": {
                        "name": "lv_anim_path_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "start_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "current_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "end_value",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "duration",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "act_time",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "playback_delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "playback_duration",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "repeat_delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "repeat_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "parameter",
                    "type": {
                        "name": "_lv_anim_path_para_t",
                        "type": {
                            "name": "union",
                            "json_type": "primitive_type"
                        },
                        "json_type": "union",
                        "docstring": "",
                        "fields": [
                            {
                                "name": "bezier3",
                                "type": {
                                    "name": "lv_anim_bezier3_para_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "last_timer_run",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "playback_now",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "run_round",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "start_cb_called",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "early_apply",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_point_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_point_precise_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "x",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_area_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "x1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y1",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "x2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "y2",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_grad_color_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "blue",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "green",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "red",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_color16_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "blue",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "5",
                    "docstring": ""
                },
                {
                    "name": "green",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "6",
                    "docstring": ""
                },
                {
                    "name": "red",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "5",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_color32_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "blue",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "green",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "red",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "alpha",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_color_hsv_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "h",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "s",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "v",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_color16a_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "lumi",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "alpha",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_color_filter_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "filter_cb",
                    "type": {
                        "name": "lv_color_filter_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_image_header_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "magic",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "8",
                    "docstring": ""
                },
                {
                    "name": "cf",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "8",
                    "docstring": ""
                },
                {
                    "name": "flags",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "16",
                    "docstring": ""
                },
                {
                    "name": "w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "16",
                    "docstring": ""
                },
                {
                    "name": "h",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "16",
                    "docstring": ""
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "16",
                    "docstring": ""
                },
                {
                    "name": "reserved_2",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "16",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_yuv_plane_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "buf",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "stride",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_img_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "header",
                    "type": {
                        "name": "lv_image_header_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "data_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "reserved",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_draw_buf_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "header",
                    "type": {
                        "name": "lv_image_header_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "data_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "data",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "unaligned_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "handlers",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_handlers_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_ops_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "compare_cb",
                    "type": {
                        "name": "lv_cache_compare_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "create_cb",
                    "type": {
                        "name": "lv_cache_create_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "free_cb",
                    "type": {
                        "name": "lv_cache_free_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "clz",
                    "type": {
                        "type": {
                            "name": "lv_cache_class_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "node_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "max_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ops",
                    "type": {
                        "name": "lv_cache_ops_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "lock",
                    "type": {
                        "name": "lv_mutex_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "name",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_class_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "alloc_cb",
                    "type": {
                        "name": "lv_cache_alloc_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "init_cb",
                    "type": {
                        "name": "lv_cache_init_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "destroy_cb",
                    "type": {
                        "name": "lv_cache_destroy_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "get_cb",
                    "type": {
                        "name": "lv_cache_get_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "add_cb",
                    "type": {
                        "name": "lv_cache_add_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "remove_cb",
                    "type": {
                        "name": "lv_cache_remove_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "drop_cb",
                    "type": {
                        "name": "lv_cache_drop_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "drop_all_cb",
                    "type": {
                        "name": "lv_cache_drop_all_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "get_victim_cb",
                    "type": {
                        "name": "lv_cache_get_victim_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "reserve_cond_cb",
                    "type": {
                        "name": "lv_cache_reserve_cond_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "iter_create_cb",
                    "type": {
                        "name": "lv_cache_iter_create_cb",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_cache_slot_size_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_glyph_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "resolved_font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "adv_w",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "box_w",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "box_h",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_x",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_y",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "format",
                    "type": {
                        "name": "lv_font_glyph_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "is_placeholder",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "gid",
                    "type": {
                        "name": "gid",
                        "type": {
                            "name": "union",
                            "json_type": "primitive_type"
                        },
                        "json_type": "union",
                        "docstring": "",
                        "fields": [
                            {
                                "name": "index",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            },
                            {
                                "name": "src",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "entry",
                    "type": {
                        "type": {
                            "name": "lv_cache_entry_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_font_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "get_glyph_dsc",
                    "type": {
                        "name": "get_glyph_dsc",
                        "type": {
                            "type": {
                                "name": "bool",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_font_t",
                                        "json_type": "lvgl_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": [
                                    "const"
                                ]
                            },
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_font_glyph_dsc_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            },
                            {
                                "name": "letter",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "letter_next",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "get_glyph_bitmap",
                    "type": {
                        "name": "get_glyph_bitmap",
                        "type": {
                            "type": {
                                "type": {
                                    "name": "void",
                                    "json_type": "primitive_type",
                                    "quals": [
                                        "const"
                                    ]
                                },
                                "json_type": "pointer",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_font_glyph_dsc_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            },
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_draw_buf_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "release_glyph",
                    "type": {
                        "name": "release_glyph",
                        "type": {
                            "type": {
                                "name": "void",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_font_t",
                                        "json_type": "lvgl_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": [
                                    "const"
                                ]
                            },
                            {
                                "name": null,
                                "type": {
                                    "type": {
                                        "name": "lv_font_glyph_dsc_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": "",
                                "quals": []
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "line_height",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "base_line",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "subpx",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "2",
                    "docstring": ""
                },
                {
                    "name": "kerning",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "underline_position",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "underline_thickness",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dsc",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "fallback",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_gradient_stop_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "frac",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_grad_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "stops",
                    "type": {
                        "name": "lv_gradient_stop_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": "2"
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "stops_count",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dir",
                    "type": {
                        "name": "lv_grad_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "3",
                    "docstring": ""
                },
                {
                    "name": "extend",
                    "type": {
                        "name": "lv_grad_extend_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "2",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_style_transition_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "props",
                    "type": {
                        "type": {
                            "name": "lv_style_prop_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "path_xcb",
                    "type": {
                        "name": "lv_anim_path_cb_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "time",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "delay",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_style_const_prop_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "prop",
                    "type": {
                        "name": "lv_style_prop_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_style_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_style_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "values_and_props",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "has_group",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "prop_cnt",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_event_list_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "array",
                    "type": {
                        "name": "lv_array_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "is_traversing",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "has_marked_deleting",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_drv_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "letter",
                    "type": {
                        "name": "char",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "cache_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ready_cb",
                    "type": {
                        "name": "ready_cb",
                        "type": {
                            "type": {
                                "name": "bool",
                                "json_type": "primitive_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "open_cb",
                    "type": {
                        "name": "open_cb",
                        "type": {
                            "type": {
                                "type": {
                                    "name": "void",
                                    "json_type": "primitive_type",
                                    "quals": []
                                },
                                "json_type": "pointer",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "path",
                                "type": {
                                    "type": {
                                        "name": "char",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "mode",
                                "type": {
                                    "name": "lv_fs_mode_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "close_cb",
                    "type": {
                        "name": "close_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "file_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "read_cb",
                    "type": {
                        "name": "read_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "file_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "buf",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "btr",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "br",
                                "type": {
                                    "type": {
                                        "name": "uint32_t",
                                        "json_type": "stdlib_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "write_cb",
                    "type": {
                        "name": "write_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "file_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "buf",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "btw",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "bw",
                                "type": {
                                    "type": {
                                        "name": "uint32_t",
                                        "json_type": "stdlib_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "seek_cb",
                    "type": {
                        "name": "seek_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "file_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "pos",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "whence",
                                "type": {
                                    "name": "lv_fs_whence_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "tell_cb",
                    "type": {
                        "name": "tell_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "file_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "pos_p",
                                "type": {
                                    "type": {
                                        "name": "uint32_t",
                                        "json_type": "stdlib_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dir_open_cb",
                    "type": {
                        "name": "dir_open_cb",
                        "type": {
                            "type": {
                                "type": {
                                    "name": "void",
                                    "json_type": "primitive_type",
                                    "quals": []
                                },
                                "json_type": "pointer",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "path",
                                "type": {
                                    "type": {
                                        "name": "char",
                                        "json_type": "primitive_type",
                                        "quals": [
                                            "const"
                                        ]
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dir_read_cb",
                    "type": {
                        "name": "dir_read_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "rddir_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "fn",
                                "type": {
                                    "type": {
                                        "name": "char",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "fn_len",
                                "type": {
                                    "name": "uint32_t",
                                    "json_type": "stdlib_type",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dir_close_cb",
                    "type": {
                        "name": "dir_close_cb",
                        "type": {
                            "type": {
                                "name": "lv_fs_res_t",
                                "json_type": "lvgl_type",
                                "quals": []
                            },
                            "json_type": "ret_type",
                            "docstring": ""
                        },
                        "json_type": "function_pointer",
                        "docstring": "",
                        "args": [
                            {
                                "name": "drv",
                                "type": {
                                    "type": {
                                        "name": "lv_fs_drv_t",
                                        "json_type": "lvgl_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            },
                            {
                                "name": "rddir_p",
                                "type": {
                                    "type": {
                                        "name": "void",
                                        "json_type": "primitive_type",
                                        "quals": []
                                    },
                                    "json_type": "pointer",
                                    "quals": []
                                },
                                "json_type": "arg",
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_file_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "file_d",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "drv",
                    "type": {
                        "type": {
                            "name": "lv_fs_drv_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "cache",
                    "type": {
                        "type": {
                            "name": "lv_fs_file_cache_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_fs_dir_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "dir_d",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "drv",
                    "type": {
                        "type": {
                            "name": "lv_fs_drv_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "_lv_layer_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": null,
            "fields": [
                {
                    "name": "draw_buf",
                    "type": {
                        "type": {
                            "name": "lv_draw_buf_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "buf_area",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color_format",
                    "type": {
                        "name": "lv_color_format_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "_clip_area",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "phy_clip_area",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "draw_task_head",
                    "type": {
                        "type": {
                            "name": "lv_draw_task_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "parent",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "next",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "all_tasks_added",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_dsc_base_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "obj",
                    "type": {
                        "type": {
                            "name": "lv_obj_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "part",
                    "type": {
                        "name": "lv_part_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "id1",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "id2",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "layer",
                    "type": {
                        "type": {
                            "name": "lv_layer_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dsc_size",
                    "type": {
                        "name": "size_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_rect_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_grad",
                    "type": {
                        "name": "lv_grad_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_symbol_font",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_recolor",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_recolor_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_image_tiled",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "border_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "border_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "border_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "border_side",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "5",
                    "docstring": ""
                },
                {
                    "name": "border_post",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "outline_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "outline_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "outline_pad",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "outline_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_offset_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_offset_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_spread",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "shadow_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_fill_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "grad",
                    "type": {
                        "name": "lv_grad_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_border_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "side",
                    "type": {
                        "name": "lv_border_side_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "5",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_box_shadow_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "spread",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_cover",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_label_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "text",
                    "type": {
                        "type": {
                            "name": "char",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "font",
                    "type": {
                        "type": {
                            "name": "lv_font_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "sel_start",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "sel_end",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "sel_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "sel_bg_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "line_space",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "letter_space",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bidi_dir",
                    "type": {
                        "name": "lv_base_dir_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "align",
                    "type": {
                        "name": "lv_text_align_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "flag",
                    "type": {
                        "name": "lv_text_flag_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "decor",
                    "type": {
                        "name": "lv_text_decor_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "3",
                    "docstring": ""
                },
                {
                    "name": "blend_mode",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "3",
                    "docstring": ""
                },
                {
                    "name": "text_local",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "hint",
                    "type": {
                        "type": {
                            "name": "lv_draw_label_hint_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_image_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "header",
                    "type": {
                        "name": "lv_image_header_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "rotation",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "scale_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "scale_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "skew_x",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "skew_y",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "pivot",
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "recolor",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "recolor_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "blend_mode",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "4",
                    "docstring": ""
                },
                {
                    "name": "antialias",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "tile",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "sup",
                    "type": {
                        "type": {
                            "name": "lv_draw_image_sup_t",
                            "json_type": "lvgl_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "image_area",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "clip_radius",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bitmap_mask_src",
                    "type": {
                        "type": {
                            "name": "lv_image_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_line_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "p1",
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "p2",
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dash_width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "dash_gap",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "blend_mode",
                    "type": {
                        "name": "lv_blend_mode_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "2",
                    "docstring": ""
                },
                {
                    "name": "round_start",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "round_end",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "raw_end",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_arc_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "width",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "start_angle",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "end_angle",
                    "type": {
                        "name": "lv_value_precise_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "center",
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "radius",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "img_src",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "rounded",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_indev_data_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "point",
                    "type": {
                        "name": "lv_point_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "key",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "btn_id",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "enc_diff",
                    "type": {
                        "name": "int16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "state",
                    "type": {
                        "name": "lv_indev_state_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "continue_reading",
                    "type": {
                        "name": "bool",
                        "json_type": "primitive_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_glyph_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "bitmap_index",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "20",
                    "docstring": ""
                },
                {
                    "name": "adv_w",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "12",
                    "docstring": ""
                },
                {
                    "name": "box_w",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "box_h",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_x",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ofs_y",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_cmap_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "range_start",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "range_length",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "glyph_id_start",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "unicode_list",
                    "type": {
                        "type": {
                            "name": "uint16_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "glyph_id_ofs_list",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "list_length",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "type",
                    "type": {
                        "name": "lv_font_fmt_txt_cmap_type_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_kern_pair_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "glyph_ids",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "values",
                    "type": {
                        "type": {
                            "name": "int8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "pair_cnt",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "30",
                    "docstring": ""
                },
                {
                    "name": "glyph_ids_size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "2",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_kern_classes_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "class_pair_values",
                    "type": {
                        "type": {
                            "name": "int8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "left_class_mapping",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "right_class_mapping",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "left_class_cnt",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "right_class_cnt",
                    "type": {
                        "name": "uint8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_font_fmt_txt_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "glyph_bitmap",
                    "type": {
                        "type": {
                            "name": "uint8_t",
                            "json_type": "stdlib_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "glyph_dsc",
                    "type": {
                        "type": {
                            "name": "lv_font_fmt_txt_glyph_dsc_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "cmaps",
                    "type": {
                        "type": {
                            "name": "lv_font_fmt_txt_cmap_t",
                            "json_type": "lvgl_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "kern_dsc",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "kern_scale",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "cmap_num",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "9",
                    "docstring": ""
                },
                {
                    "name": "bpp",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "4",
                    "docstring": ""
                },
                {
                    "name": "kern_classes",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "bitmap_format",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "2",
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_calendar_date_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "year",
                    "type": {
                        "name": "uint16_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "month",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "day",
                    "type": {
                        "name": "int8_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_span_coords_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "Coords of a span ",
            "fields": [
                {
                    "name": "heading",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "middle",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "trailing",
                    "type": {
                        "name": "lv_area_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_subject_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "subs_ll",
                    "type": {
                        "name": "lv_ll_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "type",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "4",
                    "docstring": ""
                },
                {
                    "name": "size",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "28",
                    "docstring": ""
                },
                {
                    "name": "value",
                    "type": {
                        "name": "lv_subject_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "prev_value",
                    "type": {
                        "name": "lv_subject_value_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "notify_restart_query",
                    "type": {
                        "name": "uint32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": "1",
                    "docstring": ""
                },
                {
                    "name": "user_data",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": []
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_draw_triangle_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "struct",
            "docstring": "",
            "fields": [
                {
                    "name": "base",
                    "type": {
                        "name": "lv_draw_dsc_base_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_opa",
                    "type": {
                        "name": "lv_opa_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "bg_grad",
                    "type": {
                        "name": "lv_grad_dsc_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "p",
                    "type": {
                        "name": "lv_point_precise_t",
                        "json_type": "array",
                        "quals": [],
                        "dim": "3"
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        }
    ],
    "unions": [
        {
            "name": "lv_yuv_buf_t",
            "type": {
                "name": "union",
                "json_type": "primitive_type"
            },
            "json_type": "union",
            "docstring": "",
            "fields": [
                {
                    "name": "yuv",
                    "type": {
                        "name": "lv_yuv_plane_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "planar",
                    "type": {
                        "name": "planar",
                        "type": {
                            "name": "struct",
                            "json_type": "primitive_type"
                        },
                        "json_type": "struct",
                        "docstring": "",
                        "fields": [
                            {
                                "name": "y",
                                "type": {
                                    "name": "lv_yuv_plane_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            },
                            {
                                "name": "u",
                                "type": {
                                    "name": "lv_yuv_plane_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            },
                            {
                                "name": "v",
                                "type": {
                                    "name": "lv_yuv_plane_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "semi_planar",
                    "type": {
                        "name": "semi_planar",
                        "type": {
                            "name": "struct",
                            "json_type": "primitive_type"
                        },
                        "json_type": "struct",
                        "docstring": "",
                        "fields": [
                            {
                                "name": "y",
                                "type": {
                                    "name": "lv_yuv_plane_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            },
                            {
                                "name": "uv",
                                "type": {
                                    "name": "lv_yuv_plane_t",
                                    "json_type": "lvgl_type",
                                    "quals": []
                                },
                                "json_type": "field",
                                "bitsize": null,
                                "docstring": ""
                            }
                        ],
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_style_value_t",
            "type": {
                "name": "union",
                "json_type": "primitive_type"
            },
            "json_type": "union",
            "docstring": "",
            "fields": [
                {
                    "name": "num",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "ptr",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        },
        {
            "name": "lv_subject_value_t",
            "type": {
                "name": "union",
                "json_type": "primitive_type"
            },
            "json_type": "union",
            "docstring": "",
            "fields": [
                {
                    "name": "num",
                    "type": {
                        "name": "int32_t",
                        "json_type": "stdlib_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "pointer",
                    "type": {
                        "type": {
                            "name": "void",
                            "json_type": "primitive_type",
                            "quals": [
                                "const"
                            ]
                        },
                        "json_type": "pointer",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                },
                {
                    "name": "color",
                    "type": {
                        "name": "lv_color_t",
                        "json_type": "lvgl_type",
                        "quals": []
                    },
                    "json_type": "field",
                    "bitsize": null,
                    "docstring": ""
                }
            ],
            "quals": []
        }
    ],
    "variables": [
        {
            "name": "lv_color_filter_shade",
            "type": {
                "name": "lv_color_filter_dsc_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_cache_class_lru_rb_count",
            "type": {
                "name": "lv_cache_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_cache_class_lru_rb_size",
            "type": {
                "name": "lv_cache_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_8",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_10",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_12",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_14",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_16",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_18",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_20",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_22",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_24",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_26",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_28",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_30",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_32",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_34",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_36",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_38",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_40",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_42",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_44",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_46",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_48",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_montserrat_28_compressed",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_dejavu_16_persian_hebrew",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_simsun_16_cjk",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_unscii_8",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_font_unscii_16",
            "type": {
                "name": "lv_font_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_style_const_prop_id_inv",
            "type": {
                "name": "lv_style_prop_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_obj_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "Make the base object's class publicly available. ",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_image_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_animimg_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_arc_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_label_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_bar_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_button_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_buttonmatrix_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_calendar_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_calendar_header_arrow_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_calendar_header_dropdown_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_canvas_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_chart_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_checkbox_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_dropdown_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_dropdownlist_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_imagebutton_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_keyboard_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_led_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_line_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_list_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_list_text_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_list_button_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_page_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_cont_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_section_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_separator_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_sidebar_cont_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_main_cont_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_sidebar_header_cont_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_menu_main_header_cont_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_header_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_content_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_footer_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_header_button_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_footer_button_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_msgbox_backdrop_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_roller_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_scale_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_slider_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_spangroup_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_textarea_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_spinbox_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_spinner_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_switch_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_table_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_tabview_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_tileview_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_tileview_tile_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        },
        {
            "name": "lv_win_class",
            "type": {
                "name": "lv_obj_class_t",
                "json_type": "lvgl_type",
                "quals": [
                    "const"
                ]
            },
            "json_type": "variable",
            "docstring": "",
            "quals": [
                "const"
            ],
            "storage": [
                "extern"
            ]
        }
    ],
    "typedefs": [
        {
            "name": "lv_uintptr_t",
            "type": {
                "name": "uintptr_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_intptr_t",
            "type": {
                "name": "intptr_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_value_precise_t",
            "type": {
                "name": "int32_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_state_t",
            "type": {
                "name": "uint16_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_part_t",
            "type": {
                "name": "uint32_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_opa_t",
            "type": {
                "name": "uint8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_style_prop_t",
            "type": {
                "name": "uint8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_prop_id_t",
            "type": {
                "name": "uint32_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_mem_pool_t",
            "type": {
                "type": {
                    "name": "void",
                    "json_type": "primitive_type",
                    "quals": []
                },
                "json_type": "pointer"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_log_level_t",
            "type": {
                "name": "int8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_ll_node_t",
            "type": {
                "name": "uint8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "Dummy type to make handling easier ",
            "quals": []
        },
        {
            "name": "lv_rb_compare_res_t",
            "type": {
                "name": "int8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_flags_t",
            "type": {
                "name": "_lvimage_flags_t",
                "json_type": "lvgl_type"
            },
            "json_type": "typedef",
            "docstring": ""
        },
        {
            "name": "lv_mutex_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_thread_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_thread_sync_t",
            "type": {
                "name": "int",
                "json_type": "primitive_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_cache_compare_res_t",
            "type": {
                "name": "int8_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_style_selector_t",
            "type": {
                "name": "uint32_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_coord_t",
            "type": {
                "name": "int32_t",
                "json_type": "stdlib_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_res_t",
            "type": {
                "name": "lv_result_t",
                "json_type": "lvgl_type",
                "quals": []
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_disp_t",
            "type": {
                "name": "lv_display_t",
                "json_type": "lvgl_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_disp_rotation_t",
            "type": {
                "name": "lv_display_rotation_t",
                "json_type": "lvgl_type",
                "quals": []
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_disp_render_t",
            "type": {
                "name": "lv_display_render_mode_t",
                "json_type": "lvgl_type",
                "quals": []
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_anim_ready_cb_t",
            "type": {
                "name": "lv_anim_completed_cb_t",
                "json_type": "lvgl_type"
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_scr_load_anim_t",
            "type": {
                "name": "lv_screen_load_anim_t",
                "json_type": "lvgl_type",
                "quals": []
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_btnmatrix_ctrl_t",
            "type": {
                "name": "lv_buttonmatrix_ctrl_t",
                "json_type": "lvgl_type",
                "quals": []
            },
            "json_type": "typedef",
            "docstring": "",
            "quals": []
        }
    ],
    "forward_decls": [
        {
            "name": "lv_obj_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "Typedefs from various lvgl modules. They are defined here to avoid circular dependencies. ",
            "quals": []
        },
        {
            "name": "lv_obj_class_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_group_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_display_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_layer_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_unit_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_task_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_indev_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_event_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_timer_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_theme_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_anim_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_font_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_decoder_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_decoder_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fragment_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fragment_class_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fragment_managed_states_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_profiler_builtin_config_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_rb_node_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_rb_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_color_filter_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_event_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fs_file_cache_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fs_path_ex_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_decoder_args_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_cache_data_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_header_cache_data_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_mask_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_grad_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_label_hint_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_glyph_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_image_sup_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_mask_rect_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_obj_style_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_obj_style_transition_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_hit_test_info_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_cover_check_info_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_obj_spec_attr_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_image_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_animimg_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_arc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_label_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_bar_anim_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_bar_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_button_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_buttonmatrix_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_calendar_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_canvas_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_chart_series_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_chart_cursor_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_chart_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_checkbox_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_dropdown_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_dropdown_list_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_imagebutton_src_info_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_imagebutton_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_keyboard_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_led_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_line_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_menu_load_page_event_data_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_menu_history_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_menu_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_menu_page_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_msgbox_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_roller_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_scale_section_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_scale_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_slider_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_span_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_spangroup_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_textarea_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_spinbox_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_switch_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_table_cell_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_table_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_tabview_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_tileview_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_tileview_tile_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_win_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_observer_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_monkey_config_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_ime_pinyin_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_file_explorer_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_barcode_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_gif_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_qrcode_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_freetype_outline_vector_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_freetype_outline_event_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_fpoint_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_matrix_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_path_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_gradient_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_fill_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_stroke_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_draw_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_vector_task_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_vector_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_xkb_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_libinput_event_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_libinput_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_unit_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_common_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_line_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_angle_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_radius_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_fade_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_mask_map_param_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_blend_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_blend_fill_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_sw_blend_image_dsc_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_buf_handlers_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_rlottie_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_ffmpeg_player_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_glfw_window_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_glfw_texture_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_array_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_iter_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_draw_buf_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_anim_timeline_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        },
        {
            "name": "lv_cache_entry_t",
            "type": {
                "name": "struct",
                "json_type": "primitive_type"
            },
            "json_type": "forward_decl",
            "docstring": "",
            "quals": []
        }
    ],
    "macros": [
        {
            "name": "ZERO_MEM_SENTINEL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xa1b2c3d4 "
        },
        {
            "name": "LV_GLOBAL_DEFAULT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(&lv_global) "
        },
        {
            "name": "LV_ASSERT_OBJ",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "obj_p",
                "obj_class"
            ],
            "initializer": "do{}while(0) "
        },
        {
            "name": "LV_TRACE_OBJ_CREATE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "LV_LOG_TRACE(__VA_ARGS__) "
        },
        {
            "name": "LV_HOR_RES",
            "json_type": "macro",
            "docstring": "The horizontal resolution of the currently active display. ",
            "params": null,
            "initializer": "lv_display_get_horizontal_resolution ( lv_display_get_default ()) "
        },
        {
            "name": "LV_VER_RES",
            "json_type": "macro",
            "docstring": "The vertical resolution of the currently active display. ",
            "params": null,
            "initializer": "lv_display_get_vertical_resolution ( lv_display_get_default ()) "
        },
        {
            "name": "LV_DPX_CALC",
            "json_type": "macro",
            "docstring": "Same as Android's DIP. (Different name is chosen to avoid mistype between LV_DPI and LV_DIP) 1 dip is 1 px on a 160 DPI screen 1 dip is 2 px on a 320 DPI screen https://stackoverflow.com/questions/2025282/what-is-the-difference-between-px-dip-dp-and-sp ",
            "params": [
                "dpi",
                "n"
            ],
            "initializer": "((n) == 0 ? 0 :LV_MAX((( (dpi) * (n) + 80) / 160), 1)) /*+80 for rounding*/ "
        },
        {
            "name": "LV_DPX",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "n"
            ],
            "initializer": "LV_DPX_CALC ( lv_display_get_dpi (NULL), n) "
        },
        {
            "name": "LV_INV_BUF_SIZE",
            "json_type": "macro",
            "docstring": "Buffer size for invalid areas ",
            "params": null,
            "initializer": "32 "
        },
        {
            "name": "LV_DRAW_UNIT_NONE",
            "json_type": "macro",
            "docstring": "Modified by NXP in 2024 ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_UNIT_IDLE",
            "json_type": "macro",
            "docstring": "The draw unit is idle, new dispatching might be requested to try again ",
            "params": null,
            "initializer": "-1 "
        },
        {
            "name": "LV_STRIDE_AUTO",
            "json_type": "macro",
            "docstring": "Use this value to let LVGL calculate stride automatically ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_BUF_STRIDE",
            "json_type": "macro",
            "docstring": "Stride alignment for draw buffers. It may vary between different color formats and hardware. Refine it to suit your needs. ",
            "params": [
                "w",
                "cf"
            ],
            "initializer": "LV_ROUND_UP (((w) * LV_COLOR_FORMAT_GET_BPP (cf) + 7) / 8, LV_DRAW_BUF_STRIDE_ALIGN) "
        },
        {
            "name": "LV_DRAW_BUF_SIZE",
            "json_type": "macro",
            "docstring": "Allocate a slightly larger buffer, so we can adjust the start address to meet alignment ",
            "params": [
                "w",
                "h",
                "cf"
            ],
            "initializer": "( LV_DRAW_BUF_STRIDE (w, cf) * (h) + LV_DRAW_BUF_ALIGN + \\\n     LV_COLOR_INDEXED_PALETTE_SIZE(cf) * sizeof( lv_color32_t )) "
        },
        {
            "name": "LV_DRAW_BUF_DEFINE_STATIC",
            "json_type": "macro",
            "docstring": "Define a static draw buffer with the given width, height, and color format. Stride alignment is set to LV_DRAW_BUF_STRIDE_ALIGN. \n\nFor platform that needs special buffer alignment, call LV_DRAW_BUF_INIT_STATIC.  ",
            "params": [
                "name",
                "_w",
                "_h",
                "_cf"
            ],
            "initializer": "static uint8_t buf_##name[ LV_DRAW_BUF_SIZE (_w, _h, _cf)]; \\\n    static lv_draw_buf_t name = { \\\n                                  .header = { \\\n                                              .magic = LV_IMAGE_HEADER_MAGIC , \\\n                                              .cf = (_cf), \\\n                                              .flags = LV_IMAGE_FLAGS_MODIFIABLE , \\\n                                              .w = (_w), \\\n                                              .h = (_h), \\\n                                              .stride = LV_DRAW_BUF_STRIDE (_w, _cf), \\\n                                              .reserved_2 = 0, \\\n                                            }, \\\n                                  .data_size = sizeof(buf_##name), \\\n                                  .data = buf_##name, \\\n                                  .unaligned_data = buf_##name, \\\n                                } "
        },
        {
            "name": "LV_DRAW_BUF_INIT_STATIC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "name"
            ],
            "initializer": "do { \\ lv_image_header_t * header = &name.header; \\ lv_draw_buf_init (&name, header->w, header->h, ( lv_color_format_t )header->cf, header->stride, buf_##name, sizeof(buf_##name)); \\\n        lv_draw_buf_set_flag(&name, LV_IMAGE_FLAGS_MODIFIABLE ); \\\n    } while(0) "
        },
        {
            "name": "LV_DRAW_LABEL_NO_TXT_SEL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(0xFFFF) "
        },
        {
            "name": "LV_RADIUS_CIRCLE",
            "json_type": "macro",
            "docstring": "A very big radius to always draw as circle ",
            "params": null,
            "initializer": "0x7FFF "
        },
        {
            "name": "LV_IMAGE_HEADER_MAGIC",
            "json_type": "macro",
            "docstring": "Magic number for lvgl image, 9 means lvgl version 9 It must be neither a valid ASCII character nor larger than 0x80. See lv_image_src_get_type . ",
            "params": null,
            "initializer": "(0x19) "
        },
        {
            "name": "LVGL_HIDDEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB565",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_rgb565_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB565_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_rgb565_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB565_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_rgb565_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB565_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_rgb565_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB565",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb565_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB565_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb565_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB565_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb565_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB565_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb565_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB565",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb565_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB565_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb565_with_opa_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB565_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb565_with_mask_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB565_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb565_mix_mask_opa_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB565",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb565_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB565_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb565_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB565_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb565_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB565_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb565_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_color_blend_to_rgb888_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_color_blend_to_rgb888_with_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_color_blend_to_rgb888_with_mask_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_RGB888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_color_blend_to_rgb888_mix_mask_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb888_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb888_with_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb888_with_mask_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_RGB888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_rgb565_blend_normal_to_rgb888_mix_mask_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb888_neon(dsc, dst_px_size, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb888_with_opa_neon(dsc, dst_px_size, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb888_with_mask_neon(dsc, dst_px_size, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_RGB888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_rgb888_mix_mask_opa_neon(dsc, dst_px_size, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb888_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb888_with_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb888_with_mask_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_RGB888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "dst_px_size"
            ],
            "initializer": "lv_argb8888_blend_normal_to_rgb888_mix_mask_opa_neon(dsc, dst_px_size) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_ARGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_argb8888_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_ARGB8888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_argb8888_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_ARGB8888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_argb8888_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_COLOR_BLEND_TO_ARGB8888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_color_blend_to_argb8888_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_ARGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_argb8888_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_ARGB8888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_argb8888_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_ARGB8888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_argb8888_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB565_BLEND_NORMAL_TO_ARGB8888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_rgb565_blend_normal_to_argb8888_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_ARGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_argb8888_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_ARGB8888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_argb8888_with_opa_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_ARGB8888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_argb8888_with_mask_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_RGB888_BLEND_NORMAL_TO_ARGB8888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc",
                "src_px_size"
            ],
            "initializer": "lv_rgb888_blend_normal_to_argb8888_mix_mask_opa_neon(dsc, src_px_size) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_ARGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_argb8888_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_ARGB8888_WITH_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_argb8888_with_opa_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_ARGB8888_WITH_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_argb8888_with_mask_neon(dsc) "
        },
        {
            "name": "LV_DRAW_SW_ARGB8888_BLEND_NORMAL_TO_ARGB8888_MIX_MASK_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dsc"
            ],
            "initializer": "lv_argb8888_blend_normal_to_argb8888_mix_mask_opa_neon(dsc) "
        },
        {
            "name": "LV_GRAD_LEFT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_PCT(0) "
        },
        {
            "name": "LV_GRAD_RIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_PCT(100) "
        },
        {
            "name": "LV_GRAD_TOP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_PCT(0) "
        },
        {
            "name": "LV_GRAD_BOTTOM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_PCT(100) "
        },
        {
            "name": "LV_GRAD_CENTER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_PCT(50) "
        },
        {
            "name": "LV_MASK_ID_INV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(-1) "
        },
        {
            "name": "LV_MASK_MAX_NUM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "16 "
        },
        {
            "name": "LV_FONT_DECLARE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "font_name"
            ],
            "initializer": "LV_ATTRIBUTE_EXTERN_DATA extern const lv_font_t font_name; "
        },
        {
            "name": "LV_SYMBOL_BULLET",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xE2\\x80\\xA2\" /*20042, 0x2022*/ "
        },
        {
            "name": "LV_SYMBOL_AUDIO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x81\" /*61441, 0xF001*/ "
        },
        {
            "name": "LV_SYMBOL_VIDEO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x88\" /*61448, 0xF008*/ "
        },
        {
            "name": "LV_SYMBOL_LIST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x8B\" /*61451, 0xF00B*/ "
        },
        {
            "name": "LV_SYMBOL_OK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x8C\" /*61452, 0xF00C*/ "
        },
        {
            "name": "LV_SYMBOL_CLOSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x8D\" /*61453, 0xF00D*/ "
        },
        {
            "name": "LV_SYMBOL_POWER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x91\" /*61457, 0xF011*/ "
        },
        {
            "name": "LV_SYMBOL_SETTINGS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x93\" /*61459, 0xF013*/ "
        },
        {
            "name": "LV_SYMBOL_HOME",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x95\" /*61461, 0xF015*/ "
        },
        {
            "name": "LV_SYMBOL_DOWNLOAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x99\" /*61465, 0xF019*/ "
        },
        {
            "name": "LV_SYMBOL_DRIVE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\x9C\" /*61468, 0xF01C*/ "
        },
        {
            "name": "LV_SYMBOL_REFRESH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\xA1\" /*61473, 0xF021*/ "
        },
        {
            "name": "LV_SYMBOL_MUTE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\xA6\" /*61478, 0xF026*/ "
        },
        {
            "name": "LV_SYMBOL_VOLUME_MID",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\xA7\" /*61479, 0xF027*/ "
        },
        {
            "name": "LV_SYMBOL_VOLUME_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\xA8\" /*61480, 0xF028*/ "
        },
        {
            "name": "LV_SYMBOL_IMAGE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x80\\xBE\" /*61502, 0xF03E*/ "
        },
        {
            "name": "LV_SYMBOL_TINT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x83\" /*61507, 0xF043*/ "
        },
        {
            "name": "LV_SYMBOL_PREV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x88\" /*61512, 0xF048*/ "
        },
        {
            "name": "LV_SYMBOL_PLAY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x8B\" /*61515, 0xF04B*/ "
        },
        {
            "name": "LV_SYMBOL_PAUSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x8C\" /*61516, 0xF04C*/ "
        },
        {
            "name": "LV_SYMBOL_STOP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x8D\" /*61517, 0xF04D*/ "
        },
        {
            "name": "LV_SYMBOL_NEXT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x91\" /*61521, 0xF051*/ "
        },
        {
            "name": "LV_SYMBOL_EJECT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x92\" /*61522, 0xF052*/ "
        },
        {
            "name": "LV_SYMBOL_LEFT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x93\" /*61523, 0xF053*/ "
        },
        {
            "name": "LV_SYMBOL_RIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\x94\" /*61524, 0xF054*/ "
        },
        {
            "name": "LV_SYMBOL_PLUS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xA7\" /*61543, 0xF067*/ "
        },
        {
            "name": "LV_SYMBOL_MINUS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xA8\" /*61544, 0xF068*/ "
        },
        {
            "name": "LV_SYMBOL_EYE_OPEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xAE\" /*61550, 0xF06E*/ "
        },
        {
            "name": "LV_SYMBOL_EYE_CLOSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB0\" /*61552, 0xF070*/ "
        },
        {
            "name": "LV_SYMBOL_WARNING",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB1\" /*61553, 0xF071*/ "
        },
        {
            "name": "LV_SYMBOL_SHUFFLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB4\" /*61556, 0xF074*/ "
        },
        {
            "name": "LV_SYMBOL_UP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB7\" /*61559, 0xF077*/ "
        },
        {
            "name": "LV_SYMBOL_DOWN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB8\" /*61560, 0xF078*/ "
        },
        {
            "name": "LV_SYMBOL_LOOP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xB9\" /*61561, 0xF079*/ "
        },
        {
            "name": "LV_SYMBOL_DIRECTORY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x81\\xBB\" /*61563, 0xF07B*/ "
        },
        {
            "name": "LV_SYMBOL_UPLOAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x82\\x93\" /*61587, 0xF093*/ "
        },
        {
            "name": "LV_SYMBOL_CALL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x82\\x95\" /*61589, 0xF095*/ "
        },
        {
            "name": "LV_SYMBOL_CUT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\x84\" /*61636, 0xF0C4*/ "
        },
        {
            "name": "LV_SYMBOL_COPY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\x85\" /*61637, 0xF0C5*/ "
        },
        {
            "name": "LV_SYMBOL_SAVE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\x87\" /*61639, 0xF0C7*/ "
        },
        {
            "name": "LV_SYMBOL_BARS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\x89\" /*61641, 0xF0C9*/ "
        },
        {
            "name": "LV_SYMBOL_ENVELOPE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\xA0\" /*61664, 0xF0E0*/ "
        },
        {
            "name": "LV_SYMBOL_CHARGE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\xA7\" /*61671, 0xF0E7*/ "
        },
        {
            "name": "LV_SYMBOL_PASTE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\xAA\" /*61674, 0xF0EA*/ "
        },
        {
            "name": "LV_SYMBOL_BELL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x83\\xB3\" /*61683, 0xF0F3*/ "
        },
        {
            "name": "LV_SYMBOL_KEYBOARD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x84\\x9C\" /*61724, 0xF11C*/ "
        },
        {
            "name": "LV_SYMBOL_GPS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x84\\xA4\" /*61732, 0xF124*/ "
        },
        {
            "name": "LV_SYMBOL_FILE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x85\\x9B\" /*61787, 0xF158*/ "
        },
        {
            "name": "LV_SYMBOL_WIFI",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x87\\xAB\" /*61931, 0xF1EB*/ "
        },
        {
            "name": "LV_SYMBOL_BATTERY_FULL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x89\\x80\" /*62016, 0xF240*/ "
        },
        {
            "name": "LV_SYMBOL_BATTERY_3",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x89\\x81\" /*62017, 0xF241*/ "
        },
        {
            "name": "LV_SYMBOL_BATTERY_2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x89\\x82\" /*62018, 0xF242*/ "
        },
        {
            "name": "LV_SYMBOL_BATTERY_1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x89\\x83\" /*62019, 0xF243*/ "
        },
        {
            "name": "LV_SYMBOL_BATTERY_EMPTY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x89\\x84\" /*62020, 0xF244*/ "
        },
        {
            "name": "LV_SYMBOL_USB",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x8a\\x87\" /*62087, 0xF287*/ "
        },
        {
            "name": "LV_SYMBOL_BLUETOOTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x8a\\x93\" /*62099, 0xF293*/ "
        },
        {
            "name": "LV_SYMBOL_TRASH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x8B\\xAD\" /*62189, 0xF2ED*/ "
        },
        {
            "name": "LV_SYMBOL_EDIT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x8C\\x84\" /*62212, 0xF304*/ "
        },
        {
            "name": "LV_SYMBOL_BACKSPACE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x95\\x9A\" /*62810, 0xF55A*/ "
        },
        {
            "name": "LV_SYMBOL_SD_CARD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\x9F\\x82\" /*63426, 0xF7C2*/ "
        },
        {
            "name": "LV_SYMBOL_NEW_LINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xEF\\xA2\\xA2\" /*63650, 0xF8A2*/ "
        },
        {
            "name": "LV_SYMBOL_DUMMY",
            "json_type": "macro",
            "docstring": "Invalid symbol at (U+F8FF). If written before a string then lv_img will show it as a label ",
            "params": null,
            "initializer": "\"\\xEF\\xA3\\xBF\" "
        },
        {
            "name": "LV_FLEX_COLUMN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(1 << 0) "
        },
        {
            "name": "LV_FLEX_WRAP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(1 << 2) "
        },
        {
            "name": "LV_FLEX_REVERSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(1 << 3) "
        },
        {
            "name": "LV_GRID_FR",
            "json_type": "macro",
            "docstring": "Can be used track size to make the track fill the free space. a special track size ",
            "params": [
                "x"
            ],
            "initializer": "( LV_COORD_MAX - 100 + x) "
        },
        {
            "name": "LV_GRID_CONTENT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "( LV_COORD_MAX - 101) "
        },
        {
            "name": "LV_GRID_TEMPLATE_LAST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "( LV_COORD_MAX ) "
        },
        {
            "name": "CODE128_FNC1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "'\\xf1' "
        },
        {
            "name": "CODE128_FNC2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "'\\xf2' "
        },
        {
            "name": "CODE128_FNC3",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "'\\xf3' "
        },
        {
            "name": "CODE128_FNC4",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "'\\xf4' "
        },
        {
            "name": "FT_CONFIG_OPTION_ENVIRONMENT_PROPERTIES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_INLINE_MULFIX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_USE_LZW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_USE_ZLIB",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_USE_PNG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_POSTSCRIPT_NAMES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_ADOBE_GLYPH_LIST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_INCREMENTAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_RENDER_POOL_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "16384L "
        },
        {
            "name": "FT_MAX_MODULES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "32 "
        },
        {
            "name": "FT_CONFIG_OPTION_SVG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "FT_CONFIG_OPTION_ERROR_STRINGS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_EMBEDDED_BITMAPS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_COLOR_LAYERS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_POSTSCRIPT_NAMES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_SFNT_NAMES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_0",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_4",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_6",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_10",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_12",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_13",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_CMAP_FORMAT_14",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_BYTECODE_INTERPRETER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_SUBPIXEL_HINTING",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "TT_CONFIG_OPTION_GX_VAR_SUPPORT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_BDF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1000000L "
        },
        {
            "name": "T1_MAX_DICT_DEPTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "5 "
        },
        {
            "name": "T1_MAX_SUBRS_CALLS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "16 "
        },
        {
            "name": "T1_MAX_CHARSTRINGS_OPERANDS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "256 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "500 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "400 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1000 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "275 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1667 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "275 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2333 "
        },
        {
            "name": "CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "AF_CONFIG_OPTION_CJK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "AF_CONFIG_OPTION_INDIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_USE_BYTECODE_INTERPRETER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "TT_SUPPORT_COLRV1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "GIFDEC_FILL_BG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dst",
                "w",
                "h",
                "stride",
                "color",
                "opa"
            ],
            "initializer": "_gifdec_fill_bg_mve(dst, w, h, stride, color, opa) "
        },
        {
            "name": "GIFDEC_RENDER_FRAME",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "dst",
                "w",
                "h",
                "stride",
                "frame",
                "pattern",
                "tindex"
            ],
            "initializer": "_gifdec_render_frame_mve(dst, w, h, stride, frame, pattern, tindex) "
        },
        {
            "name": "qrcodegen_VERSION_MIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "qrcodegen_VERSION_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "40 "
        },
        {
            "name": "qrcodegen_BUFFER_LEN_FOR_VERSION",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "n"
            ],
            "initializer": "((((n) * 4 + 17) * ((n) * 4 + 17) + 7) / 8 + 1) "
        },
        {
            "name": "qrcodegen_BUFFER_LEN_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "qrcodegen_BUFFER_LEN_FOR_VERSION(qrcodegen_VERSION_MAX) "
        },
        {
            "name": "THORVG_SW_RASTER_SUPPORT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "THORVG_SVG_LOADER_SUPPORT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_USE_LOTTIE "
        },
        {
            "name": "THORVG_LOTTIE_LOADER_SUPPORT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_USE_LOTTIE "
        },
        {
            "name": "THORVG_VERSION_STRING",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"0.13.5\" "
        },
        {
            "name": "LV_CONF_INTERNAL_H",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_OS_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_OS_PTHREAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_OS_FREERTOS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_OS_CMSIS_RTOS2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_OS_RTTHREAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_OS_WINDOWS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "5 "
        },
        {
            "name": "LV_OS_MQX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "6 "
        },
        {
            "name": "LV_OS_CUSTOM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "255 "
        },
        {
            "name": "LV_STDLIB_BUILTIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_STDLIB_CLIB",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_STDLIB_MICROPYTHON",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_STDLIB_RTTHREAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_STDLIB_CUSTOM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "255 "
        },
        {
            "name": "LV_DRAW_SW_ASM_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_SW_ASM_NEON",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_ASM_HELIUM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_DRAW_SW_ASM_CUSTOM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "255 "
        },
        {
            "name": "LV_CONF_KCONFIG_H",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "__LV_TO_STR_AUX",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "x"
            ],
            "initializer": "#x "
        },
        {
            "name": "__LV_TO_STR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "x"
            ],
            "initializer": "__LV_TO_STR_AUX(x) "
        },
        {
            "name": "LV_CONF_H",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_COLOR_DEPTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "32 "
        },
        {
            "name": "LV_USE_STDLIB_MALLOC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STDLIB_BUILTIN "
        },
        {
            "name": "LV_USE_STDLIB_STRING",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STDLIB_BUILTIN "
        },
        {
            "name": "LV_USE_STDLIB_SPRINTF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STDLIB_BUILTIN "
        },
        {
            "name": "LV_MEM_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(16 * 1024U * 1024U)          /*[bytes]*/ "
        },
        {
            "name": "LV_MEM_POOL_EXPAND_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_MEM_ADR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0     /*0: unused*/ "
        },
        {
            "name": "LV_DEF_REFR_PERIOD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "33      /*[ms]*/ "
        },
        {
            "name": "LV_DPI_DEF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "130     /*[px/inch]*/ "
        },
        {
            "name": "LV_USE_OS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_OS_NONE "
        },
        {
            "name": "LV_DRAW_BUF_STRIDE_ALIGN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_BUF_ALIGN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_USE_DRAW_SW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_DRAW_UNIT_CNT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_DRAW_ARM2D_SYNC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_SW_LAYER_SIMPLE_BUF_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(24 * 1024)   /*[bytes]*/ "
        },
        {
            "name": "LV_DRAW_SW_COMPLEX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SHADOW_CACHE_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_SW_CIRCLE_CACHE_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_USE_DRAW_SW_ASM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DRAW_SW_ASM_NONE "
        },
        {
            "name": "LV_USE_DRAW_VGLITE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_PXP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_DAVE2D",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_SDL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_VG_LITE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LOG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_LEVEL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_LOG_LEVEL_WARN "
        },
        {
            "name": "LV_LOG_PRINTF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_USE_TIMESTAMP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_USE_FILE_LINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_MEM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_TIMER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_INDEV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_DISP_REFR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_EVENT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_OBJ_CREATE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_LAYOUT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_ANIM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_TRACE_CACHE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_ASSERT_NULL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Check if the parameter is NULL. (Very fast, recommended)*/ "
        },
        {
            "name": "LV_USE_ASSERT_MALLOC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Checks is the memory is successfully allocated or no. (Very fast, recommended)*/ "
        },
        {
            "name": "LV_USE_ASSERT_STYLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0   /*Check if the styles are properly initialized. (Very fast, recommended)*/ "
        },
        {
            "name": "LV_USE_ASSERT_MEM_INTEGRITY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0   /*Check the integrity of `lv_mem` after critical operations. (Slow)*/ "
        },
        {
            "name": "LV_USE_ASSERT_OBJ",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0   /*Check the object's type and existence (e.g. not deleted). (Slow)*/ "
        },
        {
            "name": "LV_ASSERT_HANDLER_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<stdint.h> "
        },
        {
            "name": "LV_ASSERT_HANDLER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "extern void emscripten_force_exit(int); emscripten_force_exit(1); "
        },
        {
            "name": "LV_USE_REFR_DEBUG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LAYER_DEBUG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_PARALLEL_DRAW_DEBUG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_ENABLE_GLOBAL_CUSTOM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_CACHE_DEF_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_IMAGE_HEADER_CACHE_DEF_CNT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_GRADIENT_MAX_STOPS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_COLOR_MIX_ROUND_OFS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_OBJ_STYLE_CACHE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_OBJ_ID",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_OBJ_ID_BUILTIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_OBJ_PROPERTY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_VG_LITE_THORVG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_BIG_ENDIAN_SYSTEM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_ATTRIBUTE_TICK_INC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_TIMER_HANDLER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_FLUSH_READY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_MEM_ALIGN_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_ATTRIBUTE_MEM_ALIGN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_LARGE_CONST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_LARGE_RAM_ARRAY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_ATTRIBUTE_FAST_MEM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_EXPORT_CONST_INT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "int_value",
                "int_value"
            ],
            "initializer": "struct _silence_gcc_warning /*The default value just prevents GCC warning*/ "
        },
        {
            "name": "LV_ATTRIBUTE_EXTERN_DATA",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_USE_FLOAT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_10",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_12",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_14",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_16",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_18",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_20",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_22",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_24",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_26",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_28",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_30",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_34",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_36",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_38",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_40",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_42",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_44",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_46",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_48",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_MONTSERRAT_28_COMPRESSED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1  /*bpp = 3*/ "
        },
        {
            "name": "LV_FONT_DEJAVU_16_PERSIAN_HEBREW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1  /*Hebrew, Arabic, Persian letters and all their forms*/ "
        },
        {
            "name": "LV_FONT_SIMSUN_16_CJK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1  /*1000 most common CJK radicals*/ "
        },
        {
            "name": "LV_FONT_UNSCII_8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_UNSCII_16",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FONT_CUSTOM_DECLARE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_FONT_DEFAULT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "&lv_font_montserrat_14 "
        },
        {
            "name": "LV_FONT_FMT_TXT_LARGE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FONT_COMPRESSED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FONT_PLACEHOLDER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_TXT_ENC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_TXT_ENC_UTF8 "
        },
        {
            "name": "LV_TXT_BREAK_CHARS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\" ,.;:-_)]}\" "
        },
        {
            "name": "LV_TXT_LINE_BREAK_LONG_LEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_USE_BIDI",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_BIDI_BASE_DIR_DEF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BASE_DIR_AUTO "
        },
        {
            "name": "LV_USE_ARABIC_PERSIAN_CHARS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_WIDGETS_HAS_DEFAULT_VALUE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_ANIMIMG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_ARC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_BAR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_BUTTON",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_BUTTONMATRIX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_CALENDAR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_CALENDAR_WEEK_STARTS_MONDAY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_CALENDAR_DEFAULT_DAY_NAMES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "{\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"} "
        },
        {
            "name": "LV_CALENDAR_DEFAULT_MONTH_NAMES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "{\"January\", \"February\", \"March\",  \"April\", \"May\",  \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"} "
        },
        {
            "name": "LV_USE_CALENDAR_HEADER_ARROW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_CALENDAR_HEADER_DROPDOWN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_CANVAS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_CHART",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_CHECKBOX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_DROPDOWN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Requires: lv_label*/ "
        },
        {
            "name": "LV_USE_IMAGE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Requires: lv_label*/ "
        },
        {
            "name": "LV_USE_IMAGEBUTTON",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_KEYBOARD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_LABEL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LABEL_TEXT_SELECTION",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 /*Enable selecting text of the label*/ "
        },
        {
            "name": "LV_LABEL_LONG_TXT_HINT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1  /*Store some extra info in labels to speed up drawing of very long texts*/ "
        },
        {
            "name": "LV_LABEL_WAIT_CHAR_COUNT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3  /*The count of wait chart*/ "
        },
        {
            "name": "LV_USE_LED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_LINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_LIST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_MENU",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_MSGBOX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_ROLLER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Requires: lv_label*/ "
        },
        {
            "name": "LV_USE_SCALE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_SLIDER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Requires: lv_bar*/ "
        },
        {
            "name": "LV_USE_SPAN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_SPAN_SNIPPET_STACK_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "64 "
        },
        {
            "name": "LV_USE_SPINBOX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_SPINNER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_SWITCH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_TEXTAREA",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1   /*Requires: lv_label*/ "
        },
        {
            "name": "LV_TEXTAREA_DEF_PWD_SHOW_TIME",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1500    /*ms*/ "
        },
        {
            "name": "LV_USE_TABLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_TABVIEW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_TILEVIEW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_WIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_THEME_DEFAULT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_THEME_DEFAULT_DARK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_THEME_DEFAULT_GROW",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_THEME_DEFAULT_TRANSITION_TIME",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "80 "
        },
        {
            "name": "LV_USE_THEME_SIMPLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_THEME_MONO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_FLEX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_GRID",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_FS_STDIO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_FS_STDIO_LETTER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "'A'     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/ "
        },
        {
            "name": "LV_FS_STDIO_PATH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\"         /*Set the working directory. File/directory paths will be appended to it.*/ "
        },
        {
            "name": "LV_FS_STDIO_CACHE_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0    /*>0 to cache this number of bytes in lv_fs_read ()*/ "
        },
        {
            "name": "LV_USE_FS_POSIX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FS_WIN32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FS_FATFS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FS_MEMFS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LODEPNG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LIBPNG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_BMP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_TJPGD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LIBJPEG_TURBO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_GIF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_BIN_DECODER_RAM_LOAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_RLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_QRCODE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_BARCODE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FREETYPE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_TINY_TTF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_RLOTTIE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_VECTOR_GRAPHIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_THORVG_INTERNAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_THORVG_EXTERNAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LZ4",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LZ4_INTERNAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LZ4_EXTERNAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FFMPEG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_SNAPSHOT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_SYSMON",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_PROFILER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_MONKEY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_GRIDNAV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_FRAGMENT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_IMGFONT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_OBSERVER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_IME_PINYIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FILE_EXPLORER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_SDL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_X11",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LINUX_FBDEV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_NUTTX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LINUX_DRM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_TFT_ESPI",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_EVDEV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_ST7735",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_ST7789",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_ST7796",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_ILI9341",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_GENERIC_MIPI",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(LV_USE_ST7735 | LV_USE_ST7789 | LV_USE_ST7796 | LV_USE_ILI9341) "
        },
        {
            "name": "LV_USE_WINDOWS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_BUILD_EXAMPLES",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_WIDGETS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_KEYPAD_AND_ENCODER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_BENCHMARK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_RENDER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_STRESS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_MUSIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_FLEX_LAYOUT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_MULTILANG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_TRANSFORM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_SCROLL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DEMO_VECTOR_GRAPHIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_PERF_MONITOR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_MEM_MONITOR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "STB_RECT_PACK_VERSION",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "STBRP_DEF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "extern "
        },
        {
            "name": "STBRP__MAXVAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x7fffffff "
        },
        {
            "name": "__STB_INCLUDE_STB_TRUETYPE_H__",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "STBTT_DEF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "extern "
        },
        {
            "name": "STBTT_POINT_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(-(x)) "
        },
        {
            "name": "stbtt_vertex_type",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "short "
        },
        {
            "name": "STBTT_MACSTYLE_DONTCARE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "STBTT_MACSTYLE_BOLD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "STBTT_MACSTYLE_ITALIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "STBTT_MACSTYLE_UNDERSCORE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "STBTT_MACSTYLE_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "8 "
        },
        {
            "name": "JD_SZBUF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "512 "
        },
        {
            "name": "JD_FORMAT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "JD_USE_SCALE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "JD_TBLCLIP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "JD_FASTDECODE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DISP_ROTATION_0",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_ROTATION_0 "
        },
        {
            "name": "LV_DISP_ROTATION_90",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_ROTATION_90 "
        },
        {
            "name": "LV_DISP_ROTATION_180",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_ROTATION_180 "
        },
        {
            "name": "LV_DISP_ROTATION_270",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_ROTATION_270 "
        },
        {
            "name": "LV_DISP_RENDER_MODE_PARTIAL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_RENDER_MODE_PARTIAL "
        },
        {
            "name": "LV_DISP_RENDER_MODE_DIRECT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_RENDER_MODE_DIRECT "
        },
        {
            "name": "LV_DISP_RENDER_MODE_FULL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DISPLAY_RENDER_MODE_FULL "
        },
        {
            "name": "LV_BTNMATRIX_BTN_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_BUTTON_NONE "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_HIDDEN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_HIDDEN "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_NO_REPEAT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_NO_REPEAT "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_DISABLED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_DISABLED "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_CHECKABLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_CHECKABLE "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_CHECKED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_CHECKED "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_CLICK_TRIG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_CLICK_TRIG "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_POPOVER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_POPOVER "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_CUSTOM_1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_CUSTOM_1 "
        },
        {
            "name": "LV_BTNMATRIX_CTRL_CUSTOM_2",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_BUTTONMATRIX_CTRL_CUSTOM_2 "
        },
        {
            "name": "LV_IMGBTN_STATE_RELEASED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_RELEASED "
        },
        {
            "name": "LV_IMGBTN_STATE_PRESSED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_PRESSED "
        },
        {
            "name": "LV_IMGBTN_STATE_DISABLED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_DISABLED "
        },
        {
            "name": "LV_IMGBTN_STATE_CHECKED_RELEASED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_CHECKED_RELEASED "
        },
        {
            "name": "LV_IMGBTN_STATE_CHECKED_PRESSED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_CHECKED_PRESSED "
        },
        {
            "name": "LV_IMGBTN_STATE_CHECKED_DISABLED",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_IMAGEBUTTON_STATE_CHECKED_DISABLED "
        },
        {
            "name": "LV_RES_OK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_RESULT_OK "
        },
        {
            "name": "LV_RES_INV",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_RESULT_INVALID "
        },
        {
            "name": "LV_INDEV_STATE_PR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_INDEV_STATE_PRESSED "
        },
        {
            "name": "LV_INDEV_STATE_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_INDEV_STATE_RELEASED "
        },
        {
            "name": "lv_obj_del",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_delete "
        },
        {
            "name": "lv_obj_del_async",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_delete_async "
        },
        {
            "name": "lv_obj_clear_flag",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_remove_flag "
        },
        {
            "name": "lv_obj_clear_state",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_remove_state "
        },
        {
            "name": "lv_indev_set_disp",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_indev_set_display "
        },
        {
            "name": "lv_indev_get_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_indev_active "
        },
        {
            "name": "lv_scr_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_screen_active "
        },
        {
            "name": "lv_disp_remove",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_delete "
        },
        {
            "name": "lv_disp_set_default",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_set_default "
        },
        {
            "name": "lv_disp_get_default",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_default "
        },
        {
            "name": "lv_disp_get_next",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_next "
        },
        {
            "name": "lv_disp_set_rotation",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_set_rotation "
        },
        {
            "name": "lv_disp_get_hor_res",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_horizontal_resolution "
        },
        {
            "name": "lv_disp_get_ver_res",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_vertical_resolution "
        },
        {
            "name": "lv_disp_get_physical_hor_res",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_physical_horizontal_resolution "
        },
        {
            "name": "lv_disp_get_physical_ver_res",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_physical_vertical_resolution "
        },
        {
            "name": "lv_disp_get_offset_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_offset_x "
        },
        {
            "name": "lv_disp_get_offset_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_offset_y "
        },
        {
            "name": "lv_disp_get_rotation",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_rotation "
        },
        {
            "name": "lv_disp_get_dpi",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_dpi "
        },
        {
            "name": "lv_disp_get_antialiasing",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_antialiasing "
        },
        {
            "name": "lv_disp_flush_ready",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_flush_ready "
        },
        {
            "name": "lv_disp_flush_is_last",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_flush_is_last "
        },
        {
            "name": "lv_disp_get_scr_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_screen_active "
        },
        {
            "name": "lv_disp_get_scr_prev",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_screen_prev "
        },
        {
            "name": "lv_disp_load_scr",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_screen_load "
        },
        {
            "name": "lv_scr_load",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_screen_load "
        },
        {
            "name": "lv_scr_load_anim",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_screen_load_anim "
        },
        {
            "name": "lv_disp_get_layer_top",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_layer_top "
        },
        {
            "name": "lv_disp_get_layer_sys",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_layer_sys "
        },
        {
            "name": "lv_disp_send_event",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_send_event "
        },
        {
            "name": "lv_disp_set_theme",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_set_theme "
        },
        {
            "name": "lv_disp_get_theme",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_theme "
        },
        {
            "name": "lv_disp_get_inactive_time",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_inactive_time "
        },
        {
            "name": "lv_disp_trig_activity",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_trigger_activity "
        },
        {
            "name": "lv_disp_enable_invalidation",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_enable_invalidation "
        },
        {
            "name": "lv_disp_is_invalidation_enabled",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_is_invalidation_enabled "
        },
        {
            "name": "lv_disp_refr_timer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_refr_timer "
        },
        {
            "name": "lv_disp_get_refr_timer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_display_get_refr_timer "
        },
        {
            "name": "lv_timer_del",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_timer_delete "
        },
        {
            "name": "lv_anim_del",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_anim_delete "
        },
        {
            "name": "lv_anim_del_all",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_anim_delete_all "
        },
        {
            "name": "lv_anim_set_ready_cb",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_anim_set_completed_cb "
        },
        {
            "name": "lv_group_del",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_group_delete "
        },
        {
            "name": "lv_txt_get_size",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_text_get_size "
        },
        {
            "name": "lv_txt_get_width",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_text_get_width "
        },
        {
            "name": "lv_img_create",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_create "
        },
        {
            "name": "lv_img_set_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_src "
        },
        {
            "name": "lv_img_set_offset_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_offset_x "
        },
        {
            "name": "lv_img_set_offset_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_offset_y "
        },
        {
            "name": "lv_img_set_angle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_rotation "
        },
        {
            "name": "lv_img_set_pivot",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_pivot "
        },
        {
            "name": "lv_img_set_zoom",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_scale "
        },
        {
            "name": "lv_img_set_antialias",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_antialias "
        },
        {
            "name": "lv_img_get_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_src "
        },
        {
            "name": "lv_img_get_offset_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_offset_x "
        },
        {
            "name": "lv_img_get_offset_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_offset_y "
        },
        {
            "name": "lv_img_get_angle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_rotation "
        },
        {
            "name": "lv_img_get_pivot",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_pivot "
        },
        {
            "name": "lv_img_get_zoom",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_scale "
        },
        {
            "name": "lv_img_get_antialias",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_antialias "
        },
        {
            "name": "lv_imgbtn_create",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_create "
        },
        {
            "name": "lv_imgbtn_set_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_set_src "
        },
        {
            "name": "lv_imgbtn_set_state",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_set_state "
        },
        {
            "name": "lv_imgbtn_get_src_left",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_get_src_left "
        },
        {
            "name": "lv_imgbtn_get_src_middle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_get_src_middle "
        },
        {
            "name": "lv_imgbtn_get_src_right",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_imagebutton_get_src_right "
        },
        {
            "name": "lv_list_set_btn_text",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_list_set_button_text "
        },
        {
            "name": "lv_list_get_btn_text",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_list_get_button_text "
        },
        {
            "name": "lv_list_add_btn",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_list_add_button "
        },
        {
            "name": "lv_btn_create",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_button_create "
        },
        {
            "name": "lv_btnmatrix_create",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_create "
        },
        {
            "name": "lv_btnmatrix_set_map",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_map "
        },
        {
            "name": "lv_btnmatrix_set_ctrl_map",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_ctrl_map "
        },
        {
            "name": "lv_btnmatrix_set_selected_btn",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_selected_button "
        },
        {
            "name": "lv_btnmatrix_set_btn_ctrl",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_button_ctrl "
        },
        {
            "name": "lv_btnmatrix_clear_btn_ctrl",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_clear_button_ctrl "
        },
        {
            "name": "lv_btnmatrix_set_btn_ctrl_all",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_button_ctrl_all "
        },
        {
            "name": "lv_btnmatrix_clear_btn_ctrl_all",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_clear_button_ctrl_all "
        },
        {
            "name": "lv_btnmatrix_set_btn_width",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_button_width "
        },
        {
            "name": "lv_btnmatrix_set_one_checked",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_set_one_checked "
        },
        {
            "name": "lv_btnmatrix_get_map",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_get_map "
        },
        {
            "name": "lv_btnmatrix_get_selected_btn",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_get_selected_button "
        },
        {
            "name": "lv_btnmatrix_get_btn_text",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_get_button_text "
        },
        {
            "name": "lv_btnmatrix_has_button_ctrl",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_has_button_ctrl "
        },
        {
            "name": "lv_btnmatrix_get_one_checked",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_buttonmatrix_get_one_checked "
        },
        {
            "name": "lv_tabview_get_tab_btns",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tabview_get_tab_bar "
        },
        {
            "name": "lv_tabview_get_tab_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tabview_get_tab_active "
        },
        {
            "name": "lv_tabview_set_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tabview_set_active "
        },
        {
            "name": "lv_tileview_get_tile_act",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tileview_get_tile_active "
        },
        {
            "name": "lv_obj_set_tile_id",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tileview_set_tile_by_index "
        },
        {
            "name": "lv_obj_set_tile",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_tileview_set_tile "
        },
        {
            "name": "lv_roller_set_visible_row_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_roller_set_visible_row_count "
        },
        {
            "name": "lv_roller_get_option_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_roller_get_option_count "
        },
        {
            "name": "lv_table_set_col_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_set_column_count "
        },
        {
            "name": "lv_table_set_row_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_set_row_count "
        },
        {
            "name": "lv_table_get_col_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_get_column_count "
        },
        {
            "name": "lv_table_get_row_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_get_row_count "
        },
        {
            "name": "lv_table_set_col_width",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_set_column_width "
        },
        {
            "name": "lv_table_get_col_width",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_table_get_column_width "
        },
        {
            "name": "lv_dropdown_get_option_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_dropdown_get_option_count "
        },
        {
            "name": "lv_obj_get_child_cnt",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_child_count "
        },
        {
            "name": "lv_obj_get_disp",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_display "
        },
        {
            "name": "lv_obj_delete_anim_ready_cb",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_delete_anim_completed_cb "
        },
        {
            "name": "LV_STYLE_ANIM_TIME",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_ANIM_DURATION "
        },
        {
            "name": "LV_STYLE_IMG_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_IMAGE_OPA "
        },
        {
            "name": "LV_STYLE_IMG_RECOLOR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_IMAGE_RECOLOR "
        },
        {
            "name": "LV_STYLE_IMG_RECOLOR_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_IMAGE_RECOLOR_OPA "
        },
        {
            "name": "LV_STYLE_SHADOW_OFS_X",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_SHADOW_OFFSET_X "
        },
        {
            "name": "LV_STYLE_SHADOW_OFS_Y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_SHADOW_OFFSET_Y "
        },
        {
            "name": "LV_STYLE_TRANSFORM_ANGLE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_TRANSFORM_ROTATION "
        },
        {
            "name": "lv_obj_get_style_anim_time",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_anim_duration "
        },
        {
            "name": "lv_obj_get_style_img_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_image_opa "
        },
        {
            "name": "lv_obj_get_style_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_image_recolor "
        },
        {
            "name": "lv_obj_get_style_img_recolor_filtered",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_image_recolor_filtered "
        },
        {
            "name": "lv_obj_get_style_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_image_recolor_opa "
        },
        {
            "name": "lv_obj_get_style_shadow_ofs_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_shadow_offset_x "
        },
        {
            "name": "lv_obj_get_style_shadow_ofs_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_shadow_offset_y "
        },
        {
            "name": "lv_obj_get_style_transform_angle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_transform_rotation "
        },
        {
            "name": "lv_obj_get_style_bg_img_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_bg_image_src "
        },
        {
            "name": "lv_obj_get_style_bg_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_bg_image_recolor "
        },
        {
            "name": "lv_obj_get_style_bg_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_style_bg_image_recolor_opa "
        },
        {
            "name": "lv_obj_set_style_anim_time",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_anim_duration "
        },
        {
            "name": "lv_obj_set_style_img_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_image_opa "
        },
        {
            "name": "lv_obj_set_style_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_image_recolor "
        },
        {
            "name": "lv_obj_set_style_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_image_recolor_opa "
        },
        {
            "name": "lv_obj_set_style_shadow_ofs_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_shadow_offset_x "
        },
        {
            "name": "lv_obj_set_style_shadow_ofs_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_shadow_offset_y "
        },
        {
            "name": "lv_obj_set_style_transform_zoom",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_transform_scale "
        },
        {
            "name": "lv_obj_set_style_transform_angle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_transform_rotation "
        },
        {
            "name": "lv_obj_set_style_bg_img_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_bg_image_src "
        },
        {
            "name": "lv_obj_set_style_bg_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_bg_image_recolor "
        },
        {
            "name": "lv_obj_set_style_bg_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_set_style_bg_image_recolor_opa "
        },
        {
            "name": "lv_style_set_anim_time",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_anim_duration "
        },
        {
            "name": "lv_style_set_img_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_image_opa "
        },
        {
            "name": "lv_style_set_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_image_recolor "
        },
        {
            "name": "lv_style_set_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_image_recolor_opa "
        },
        {
            "name": "lv_style_set_shadow_ofs_x",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_shadow_offset_x "
        },
        {
            "name": "lv_style_set_shadow_ofs_y",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_shadow_offset_y "
        },
        {
            "name": "lv_style_set_transform_angle",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_transform_rotation "
        },
        {
            "name": "lv_style_set_transform_zoom",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_transform_scale "
        },
        {
            "name": "lv_style_set_bg_img_src",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_bg_image_src "
        },
        {
            "name": "lv_style_set_bg_img_recolor",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_bg_image_recolor "
        },
        {
            "name": "lv_style_set_bg_img_recolor_opa",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_style_set_bg_image_recolor_opa "
        },
        {
            "name": "lv_keyboard_get_selected_btn",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_keyboard_get_selected_button "
        },
        {
            "name": "lv_keyboard_get_btn_text",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_keyboard_get_button_text "
        },
        {
            "name": "LV_ZOOM_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_SCALE_NONE "
        },
        {
            "name": "lv_image_decoder_built_in_open",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_bin_decoder_open "
        },
        {
            "name": "lv_image_decoder_built_in_close",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_bin_decoder_close "
        },
        {
            "name": "LV_IMG_DECLARE",
            "json_type": "macro",
            "docstring": "Use this macro to declare an image in a C file ",
            "params": [
                "var_name"
            ],
            "initializer": "extern const lv_image_dsc_t var_name; "
        },
        {
            "name": "lv_image_set_align",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_set_inner_align "
        },
        {
            "name": "lv_image_get_align",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_get_inner_align "
        },
        {
            "name": "lv_button_bind_checked",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_bind_checked "
        },
        {
            "name": "LV_DRAW_BUF_DEFINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DRAW_BUF_DEFINE_STATIC "
        },
        {
            "name": "_lv_utils_bsearch",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_utils_bsearch "
        },
        {
            "name": "lv_draw_buf_align_user",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_draw_buf_align_ex "
        },
        {
            "name": "lv_draw_buf_create_user",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_draw_buf_create_ex "
        },
        {
            "name": "lv_draw_buf_width_to_stride_user",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_draw_buf_width_to_stride_ex "
        },
        {
            "name": "lv_draw_buf_dup_user",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_draw_buf_dup_ex "
        },
        {
            "name": "lv_draw_buf_invalidate_cache_user",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "handlers",
                "drawbuf",
                "area"
            ],
            "initializer": "lv_draw_buf_invalidate_cache (drawbuf, area) "
        },
        {
            "name": "lv_draw_buf_flush_cache_user",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "handlers",
                "drawbuf",
                "area"
            ],
            "initializer": "lv_draw_buf_flush_cache (drawbuf, area) "
        },
        {
            "name": "lv_draw_buf_destroy_user",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "handlers",
                "drawbuf"
            ],
            "initializer": "lv_draw_buf_destroy (drawbuf) "
        },
        {
            "name": "_LV_EVENT_LAST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_EVENT_LAST "
        },
        {
            "name": "_lv_event_code_t",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_event_code_t "
        },
        {
            "name": "_lv_event_mark_deleted",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_event_mark_deleted "
        },
        {
            "name": "lv_obj_add_event",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_add_event_cb "
        },
        {
            "name": "_LV_STYLE_LAST_BUILT_IN_PROP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_STYLE_LAST_BUILT_IN_PROP "
        },
        {
            "name": "_LV_FLEX_REVERSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_FLEX_REVERSE "
        },
        {
            "name": "_LV_FLEX_WRAP",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_FLEX_WRAP "
        },
        {
            "name": "_LV_FLEX_COLUMN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_FLEX_COLUMN "
        },
        {
            "name": "_lv_area_is_equal",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_area_is_equal "
        },
        {
            "name": "_lv_area_is_in",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_area_is_in "
        },
        {
            "name": "_lv_area_intersect",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_area_intersect "
        },
        {
            "name": "_lv_area_is_point_on",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_area_is_point_on "
        },
        {
            "name": "_lv_area_join",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_area_join "
        },
        {
            "name": "_lv_image_buf_get_transformed_area",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_image_buf_get_transformed_area "
        },
        {
            "name": "_lv_ll_init",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_init "
        },
        {
            "name": "_lv_ll_ins_head",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_ins_head "
        },
        {
            "name": "_lv_ll_ins_prev",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_ins_prev "
        },
        {
            "name": "_lv_ll_ins_tail",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_ins_tail "
        },
        {
            "name": "_lv_ll_get_head",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_get_head "
        },
        {
            "name": "_lv_ll_get_tail",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_get_tail "
        },
        {
            "name": "_lv_ll_get_next",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_get_next "
        },
        {
            "name": "_lv_ll_get_prev",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_get_prev "
        },
        {
            "name": "_lv_ll_get_len",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_get_len "
        },
        {
            "name": "_lv_ll_move_before",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_move_before "
        },
        {
            "name": "_lv_ll_is_empty",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_is_empty "
        },
        {
            "name": "_lv_ll_clear",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_clear "
        },
        {
            "name": "_lv_ll_remove",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_remove "
        },
        {
            "name": "_lv_ll_chg_list",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_ll_chg_list "
        },
        {
            "name": "_LV_LL_READ",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_LL_READ "
        },
        {
            "name": "_LV_LL_READ_BACK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_LL_READ_BACK "
        },
        {
            "name": "_lv_obj_scroll_by_raw",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_scroll_by_raw "
        },
        {
            "name": "_lv_obj_get_ext_draw_size",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_obj_get_ext_draw_size "
        },
        {
            "name": "_lv_indev_scroll_handler",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_indev_scroll_handler "
        },
        {
            "name": "_lv_display_refr_timer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_disp_refr_timer "
        },
        {
            "name": "_lv_disp_refr_timer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_disp_refr_timer "
        },
        {
            "name": "_lv_disp_get_refr_timer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_disp_get_refr_timer "
        },
        {
            "name": "_lv_inv_area",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "lv_inv_area "
        },
        {
            "name": "LV_STDINT_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<stdint.h> "
        },
        {
            "name": "LV_STDDEF_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<stddef.h> "
        },
        {
            "name": "LV_STDBOOL_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<stdbool.h> "
        },
        {
            "name": "LV_INTTYPES_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<inttypes.h> "
        },
        {
            "name": "LV_LIMITS_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<limits.h> "
        },
        {
            "name": "LV_STDARG_INCLUDE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "<stdarg.h> "
        },
        {
            "name": "LV_DRAW_TRANSFORM_USE_MATRIX",
            "json_type": "macro",
            "docstring": "Using matrix for transformations. Requirements: LV_USE_MATRIX = 1 . Rendering engine needs to support 3x3 matrix transformations. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_DRAW_LAYER_SIMPLE_BUF_SIZE",
            "json_type": "macro",
            "docstring": "The target buffer size for simple layer chunks. [bytes] ",
            "params": null,
            "initializer": "(24 * 1024) "
        },
        {
            "name": "LV_DRAW_THREAD_STACK_SIZE",
            "json_type": "macro",
            "docstring": "Stack size of drawing thread. NOTE: If FreeType or ThorVG is enabled, it is recommended to set it to 32KB or more. [bytes] ",
            "params": null,
            "initializer": "(8 * 1024) "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_RGB565",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_RGB565A8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_RGB888",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_XRGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_ARGB8888",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_L8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_AL88",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_A8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_DRAW_SW_SUPPORT_I1",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_NATIVE_HELIUM_ASM",
            "json_type": "macro",
            "docstring": "Enable native helium assembly to be compiled. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_SW_COMPLEX_GRADIENTS",
            "json_type": "macro",
            "docstring": "Enable drawing complex gradients in software: linear at an angle, radial or conical ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_DRAW_DMA2D",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_OBJ_ID_AUTO_ASSIGN",
            "json_type": "macro",
            "docstring": "Automatically assign an ID when obj is created ",
            "params": null,
            "initializer": "LV_USE_OBJ_ID "
        },
        {
            "name": "LV_USE_OBJ_PROPERTY_NAME",
            "json_type": "macro",
            "docstring": "Enable property name support. ",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_USE_MATRIX",
            "json_type": "macro",
            "docstring": "Enable matrix support Requires LV_USE_FLOAT = 1 ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_PRIVATE_API",
            "json_type": "macro",
            "docstring": "Include :ref:`lvgl_private.h` in :ref:`lvgl.h` to access internal data and functions by default ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_FONT_SIMSUN_14_CJK",
            "json_type": "macro",
            "docstring": "1000 most common CJK radicals ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_CALENDAR_CHINESE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LOTTIE",
            "json_type": "macro",
            "docstring": "Requires: lv_canvas, thorvg ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_FS_DEFAULT_DRIVE_LETTER",
            "json_type": "macro",
            "docstring": "Setting a default driver letter allows skipping the driver prefix in filepaths. ",
            "params": null,
            "initializer": "'\\0' "
        },
        {
            "name": "LV_USE_FS_LITTLEFS",
            "json_type": "macro",
            "docstring": "API for LittleFs. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FS_ARDUINO_ESP_LITTLEFS",
            "json_type": "macro",
            "docstring": "API for Arduino LittleFs. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FS_ARDUINO_SD",
            "json_type": "macro",
            "docstring": "API for Arduino Sd. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_FONT_MANAGER",
            "json_type": "macro",
            "docstring": "1: Enable freetype font manager Requires: LV_USE_FREETYPE ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_WAYLAND",
            "json_type": "macro",
            "docstring": "Use Wayland to open a window and handle input on Linux or BSD desktops ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_LIBINPUT",
            "json_type": "macro",
            "docstring": "Driver for libinput input devices ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_RENESAS_GLCDC",
            "json_type": "macro",
            "docstring": "Driver for Renesas GLCD ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_OPENGLES",
            "json_type": "macro",
            "docstring": "Use OpenGL to open window on PC and handle mouse and keyboard ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_QNX",
            "json_type": "macro",
            "docstring": "QNX Screen display and input drivers ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_USE_THORVG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(LV_USE_THORVG_INTERNAL || LV_USE_THORVG_EXTERNAL) "
        },
        {
            "name": "LV_ANIM_REPEAT_INFINITE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFFFFFF "
        },
        {
            "name": "LV_ANIM_PLAYTIME_INFINITE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFFFFFF "
        },
        {
            "name": "_PARA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "x1",
                "y1",
                "x2",
                "y2"
            ],
            "initializer": "((a)->parameter.bezier3 =                                  \\\n( lv_anim_bezier3_para_t ) {                      \\ LV_BEZIER_VAL_FLOAT (x1), LV_BEZIER_VAL_FLOAT (y1),   \\ LV_BEZIER_VAL_FLOAT (x2), LV_BEZIER_VAL_FLOAT (y2) }  \\\n                                 ) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_SINE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.12, 0, 0.39, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_SINE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.61, 1, 0.88, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_SINE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.37, 0, 0.63, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_QUAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.11, 0, 0.5, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_QUAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.5, 1, 0.89, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_QUAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.45, 0, 0.55, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_CUBIC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.32, 0, 0.67, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_CUBIC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.33, 1, 0.68, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_CUBIC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.65, 0, 0.35, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_QUART",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.5, 0, 0.75, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_QUART",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.25, 1, 0.5, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_QUART",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.76, 0, 0.24, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_QUINT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.64, 0, 0.78, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_QUINT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.22, 1, 0.36, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_QUINT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.83, 0, 0.17, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_EXPO",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.7, 0, 0.84, 0) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_EXPO",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.16, 1, 0.3, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_EXPO",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.87, 0, 0.13, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_CIRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.55, 0, 1, 0.45) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_CIRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0, 0.55, 0.45, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_CIRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.85, 0, 0.15, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_BACK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.36, 0, 0.66, -0.56) "
        },
        {
            "name": "LV_ANIM_SET_EASE_OUT_BACK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.34, 1.56, 0.64, 1) "
        },
        {
            "name": "LV_ANIM_SET_EASE_IN_OUT_BACK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a"
            ],
            "initializer": "_PARA(a, 0.68, -0.6, 0.32, 1.6) "
        },
        {
            "name": "LV_ANIM_TIMELINE_PROGRESS_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFF "
        },
        {
            "name": "LV_COORD_TYPE_SHIFT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(29U) "
        },
        {
            "name": "LV_COORD_TYPE_MASK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(3 << LV_COORD_TYPE_SHIFT) "
        },
        {
            "name": "LV_COORD_TYPE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((x) & LV_COORD_TYPE_MASK)  /*Extract type specifiers*/ "
        },
        {
            "name": "LV_COORD_PLAIN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((x) & ~LV_COORD_TYPE_MASK) /*Remove type specifiers*/ "
        },
        {
            "name": "LV_COORD_TYPE_PX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(0 << LV_COORD_TYPE_SHIFT) "
        },
        {
            "name": "LV_COORD_TYPE_SPEC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(1 << LV_COORD_TYPE_SHIFT) "
        },
        {
            "name": "LV_COORD_TYPE_PX_NEG",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(3 << LV_COORD_TYPE_SHIFT) "
        },
        {
            "name": "LV_COORD_IS_PX",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(LV_COORD_TYPE(x) == LV_COORD_TYPE_PX || LV_COORD_TYPE(x) == LV_COORD_TYPE_PX_NEG) "
        },
        {
            "name": "LV_COORD_IS_SPEC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(LV_COORD_TYPE(x) == LV_COORD_TYPE_SPEC) "
        },
        {
            "name": "LV_COORD_SET_SPEC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((x) | LV_COORD_TYPE_SPEC) "
        },
        {
            "name": "LV_COORD_MAX",
            "json_type": "macro",
            "docstring": "Max coordinate value ",
            "params": null,
            "initializer": "((1 << LV_COORD_TYPE_SHIFT) - 1) "
        },
        {
            "name": "LV_COORD_MIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(- LV_COORD_MAX ) "
        },
        {
            "name": "LV_SIZE_CONTENT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_COORD_SET_SPEC( LV_COORD_MAX ) "
        },
        {
            "name": "LV_PCT_STORED_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "( LV_COORD_MAX - 1) "
        },
        {
            "name": "LV_PCT_POS_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(LV_PCT_STORED_MAX / 2) "
        },
        {
            "name": "LV_PCT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(LV_COORD_SET_SPEC(((x) < 0 ? (LV_PCT_POS_MAX - LV_MAX((x), -LV_PCT_POS_MAX)) : LV_MIN((x), LV_PCT_POS_MAX)))) "
        },
        {
            "name": "LV_COORD_IS_PCT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((LV_COORD_IS_SPEC(x) && LV_COORD_PLAIN(x) <= LV_PCT_STORED_MAX)) "
        },
        {
            "name": "LV_COORD_GET_PCT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(LV_COORD_PLAIN(x) > LV_PCT_POS_MAX ? LV_PCT_POS_MAX - LV_COORD_PLAIN(x) : LV_COORD_PLAIN(x)) "
        },
        {
            "name": "LV_ARRAY_DEFAULT_CAPACITY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_ARRAY_DEFAULT_SHRINK_RATIO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_ASSERT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "expr"
            ],
            "initializer": "do {                                                       \\\n        if(!(expr)) {                                          \\\n            LV_LOG_ERROR(\"Asserted at expression: %s\", #expr); \\\n            LV_ASSERT_HANDLER                                  \\\n        }                                                      \\\n    } while(0) "
        },
        {
            "name": "LV_ASSERT_MSG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "expr",
                "msg"
            ],
            "initializer": "do {                                                                 \\\n        if(!(expr)) {                                                    \\\n            LV_LOG_ERROR(\"Asserted at expression: %s (%s)\", #expr, msg); \\\n            LV_ASSERT_HANDLER                                            \\\n        }                                                                \\\n    } while(0) "
        },
        {
            "name": "LV_ASSERT_FORMAT_MSG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "expr",
                "format",
                "..."
            ],
            "initializer": "do {                                                                                \\\n        if(!(expr)) {                                                                   \\\n            LV_LOG_ERROR(\"Asserted at expression: %s \" format , #expr, __VA_ARGS__);    \\\n            LV_ASSERT_HANDLER                                                           \\\n        }                                                                               \\\n    } while(0) "
        },
        {
            "name": "LV_ASSERT_NULL",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "p"
            ],
            "initializer": "LV_ASSERT_MSG(p != NULL, \"NULL pointer\"); "
        },
        {
            "name": "LV_ASSERT_MALLOC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "p"
            ],
            "initializer": "LV_ASSERT_MSG(p != NULL, \"Out of memory\"); "
        },
        {
            "name": "LV_ASSERT_MEM_INTEGRITY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_BIDI_LRO",
            "json_type": "macro",
            "docstring": "Special non printable strong characters. They can be inserted to texts to affect the run's direction ",
            "params": null,
            "initializer": "\"\\xE2\\x80\\xAD\" /*U+202D*/ "
        },
        {
            "name": "LV_BIDI_RLO",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"\\xE2\\x80\\xAE\" /*U+202E*/ "
        },
        {
            "name": "LV_COLOR_NATIVE_WITH_ALPHA_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_OPA_MIN",
            "json_type": "macro",
            "docstring": "Opacities below this will be transparent ",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_OPA_MAX",
            "json_type": "macro",
            "docstring": "Opacities above this will fully cover ",
            "params": null,
            "initializer": "253 "
        },
        {
            "name": "LV_COLOR_FORMAT_GET_BPP",
            "json_type": "macro",
            "docstring": "Get the pixel size of a color format in bits, bpp the pixel size in bits  :ref:`lv_color_format_get_bpp` ",
            "params": [
                "cf"
            ],
            "initializer": "(       \\\n                                            (cf) == LV_COLOR_FORMAT_I1 ? 1 :        \\\n                                            (cf) == LV_COLOR_FORMAT_A1 ? 1 :        \\\n                                            (cf) == LV_COLOR_FORMAT_I2 ? 2 :        \\\n                                            (cf) == LV_COLOR_FORMAT_A2 ? 2 :        \\\n                                            (cf) == LV_COLOR_FORMAT_I4 ? 4 :        \\\n                                            (cf) == LV_COLOR_FORMAT_A4 ? 4 :        \\\n                                            (cf) == LV_COLOR_FORMAT_L8 ? 8 :        \\\n                                            (cf) == LV_COLOR_FORMAT_A8 ? 8 :        \\\n                                            (cf) == LV_COLOR_FORMAT_I8 ? 8 :        \\\n                                            (cf) == LV_COLOR_FORMAT_AL88 ? 16 :     \\\n                                            (cf) == LV_COLOR_FORMAT_RGB565 ? 16 :   \\\n                                            (cf) == LV_COLOR_FORMAT_RGB565A8 ? 16 : \\\n                                            (cf) == LV_COLOR_FORMAT_YUY2 ? 16 :     \\\n                                            (cf) == LV_COLOR_FORMAT_ARGB8565 ? 24 : \\\n                                            (cf) == LV_COLOR_FORMAT_RGB888 ? 24 :   \\\n                                            (cf) == LV_COLOR_FORMAT_ARGB8888 ? 32 : \\\n                                            (cf) == LV_COLOR_FORMAT_XRGB8888 ? 32 : \\\n                                            0                                       \\\n                                    ) "
        },
        {
            "name": "LV_COLOR_FORMAT_GET_SIZE",
            "json_type": "macro",
            "docstring": "Get the pixel size of a color format in bytes the pixel size in bytes  :ref:`lv_color_format_get_size` ",
            "params": [
                "cf"
            ],
            "initializer": "(( LV_COLOR_FORMAT_GET_BPP (cf) + 7) >> 3) "
        },
        {
            "name": "LV_COLOR_FORMAT_IS_ALPHA_ONLY",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "cf"
            ],
            "initializer": "((cf) >= LV_COLOR_FORMAT_A1 && (cf) <= LV_COLOR_FORMAT_A8) "
        },
        {
            "name": "LV_COLOR_FORMAT_IS_INDEXED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "cf"
            ],
            "initializer": "((cf) >= LV_COLOR_FORMAT_I1 && (cf) <= LV_COLOR_FORMAT_I8) "
        },
        {
            "name": "LV_COLOR_FORMAT_IS_YUV",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "cf"
            ],
            "initializer": "((cf) >= LV_COLOR_FORMAT_YUV_START && (cf) <= LV_COLOR_FORMAT_YUV_END) "
        },
        {
            "name": "LV_COLOR_INDEXED_PALETTE_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "cf"
            ],
            "initializer": "((cf) == LV_COLOR_FORMAT_I1 ? 2 :\\\n                                           (cf) == LV_COLOR_FORMAT_I2 ? 4 :\\\n                                           (cf) == LV_COLOR_FORMAT_I4 ? 16 :\\\n                                           (cf) == LV_COLOR_FORMAT_I8 ? 256 : 0) "
        },
        {
            "name": "LV_COLOR_MAKE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "r8",
                "g8",
                "b8"
            ],
            "initializer": "{b8, g8, r8} "
        },
        {
            "name": "LV_OPA_MIX2",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a1",
                "a2"
            ],
            "initializer": "(((int32_t)(a1) * (a2)) >> 8) "
        },
        {
            "name": "LV_OPA_MIX3",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a1",
                "a2",
                "a3"
            ],
            "initializer": "(((int32_t)(a1) * (a2) * (a3)) >> 16) "
        },
        {
            "name": "LV_FS_MAX_FN_LENGTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "64 "
        },
        {
            "name": "LV_FS_MAX_PATH_LENGTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "256 "
        },
        {
            "name": "LV_FS_CACHE_FROM_BUFFER",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "UINT32_MAX "
        },
        {
            "name": "LV_LL_READ",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "list",
                "i"
            ],
            "initializer": "for(i = lv_ll_get_head (list); i != NULL; i = lv_ll_get_next (list, i)) "
        },
        {
            "name": "LV_LL_READ_BACK",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "list",
                "i"
            ],
            "initializer": "for(i = lv_ll_get_tail (list); i != NULL; i = lv_ll_get_prev (list, i)) "
        },
        {
            "name": "LV_LOG_LEVEL_TRACE",
            "json_type": "macro",
            "docstring": "Log detailed information. ",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "LV_LOG_LEVEL_INFO",
            "json_type": "macro",
            "docstring": "Log important events. ",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_LOG_LEVEL_WARN",
            "json_type": "macro",
            "docstring": "Log if something unwanted happened but didn't caused problem. ",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_LOG_LEVEL_ERROR",
            "json_type": "macro",
            "docstring": "Log only critical issues, when system may fail. ",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_LOG_LEVEL_USER",
            "json_type": "macro",
            "docstring": "Log only custom log messages added by the user. ",
            "params": null,
            "initializer": "4 "
        },
        {
            "name": "LV_LOG_LEVEL_NONE",
            "json_type": "macro",
            "docstring": "Do not log anything. ",
            "params": null,
            "initializer": "5 "
        },
        {
            "name": "LV_LOG_LEVEL_NUM",
            "json_type": "macro",
            "docstring": "Number of log levels ",
            "params": null,
            "initializer": "6 "
        },
        {
            "name": "LV_LOG_FILE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "__FILE__ "
        },
        {
            "name": "LV_LOG_LINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "__LINE__ "
        },
        {
            "name": "LV_LOG_TRACE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "do {}while(0) "
        },
        {
            "name": "LV_LOG_INFO",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "do {}while(0) "
        },
        {
            "name": "LV_LOG_WARN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "lv_log_add ( LV_LOG_LEVEL_WARN , LV_LOG_FILE, LV_LOG_LINE, __func__, __VA_ARGS__) "
        },
        {
            "name": "LV_LOG_ERROR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "lv_log_add ( LV_LOG_LEVEL_ERROR , LV_LOG_FILE, LV_LOG_LINE, __func__, __VA_ARGS__) "
        },
        {
            "name": "LV_LOG_USER",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "lv_log_add ( LV_LOG_LEVEL_USER , LV_LOG_FILE, LV_LOG_LINE, __func__, __VA_ARGS__) "
        },
        {
            "name": "LV_LOG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "..."
            ],
            "initializer": "lv_log (__VA_ARGS__) "
        },
        {
            "name": "LV_TRIGO_SIN_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "32768 "
        },
        {
            "name": "LV_TRIGO_SHIFT",
            "json_type": "macro",
            "docstring": "LV_TRIGO_SHIFT to normalize ",
            "params": null,
            "initializer": "15 "
        },
        {
            "name": "LV_BEZIER_VAL_SHIFT",
            "json_type": "macro",
            "docstring": "log2(LV_BEZIER_VAL_MAX): used to normalize up scaled values ",
            "params": null,
            "initializer": "10 "
        },
        {
            "name": "LV_BEZIER_VAL_MAX",
            "json_type": "macro",
            "docstring": "Max time in Bezier functions (not [0..1] to use integers) ",
            "params": null,
            "initializer": "(1L << LV_BEZIER_VAL_SHIFT ) "
        },
        {
            "name": "LV_BEZIER_VAL_FLOAT",
            "json_type": "macro",
            "docstring": "Convert const float number cubic-bezier values to fix-point value ",
            "params": [
                "f"
            ],
            "initializer": "((int32_t)((f) * LV_BEZIER_VAL_MAX )) "
        },
        {
            "name": "LV_ALIGN_UP",
            "json_type": "macro",
            "docstring": "Align up value x to align, align must be a power of two ",
            "params": [
                "x",
                "align"
            ],
            "initializer": "(((x) + ((align) - 1)) & ~((align) - 1)) "
        },
        {
            "name": "LV_ROUND_UP",
            "json_type": "macro",
            "docstring": "Round up value x to round, round can be any integer number ",
            "params": [
                "x",
                "round"
            ],
            "initializer": "((((x) + ((round) - 1)) / (round)) * (round)) "
        },
        {
            "name": "LV_MIN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b"
            ],
            "initializer": "((a) < (b) ? (a) : (b)) "
        },
        {
            "name": "LV_MIN3",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b",
                "c"
            ],
            "initializer": "(LV_MIN(LV_MIN(a,b), c)) "
        },
        {
            "name": "LV_MIN4",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b",
                "c",
                "d"
            ],
            "initializer": "(LV_MIN(LV_MIN(a,b), LV_MIN(c,d))) "
        },
        {
            "name": "LV_MAX",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b"
            ],
            "initializer": "((a) > (b) ? (a) : (b)) "
        },
        {
            "name": "LV_MAX3",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b",
                "c"
            ],
            "initializer": "(LV_MAX(LV_MAX(a,b), c)) "
        },
        {
            "name": "LV_MAX4",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "a",
                "b",
                "c",
                "d"
            ],
            "initializer": "(LV_MAX(LV_MAX(a,b), LV_MAX(c,d))) "
        },
        {
            "name": "LV_CLAMP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "min",
                "val",
                "max"
            ],
            "initializer": "(LV_MAX(min, (LV_MIN(val, max)))) "
        },
        {
            "name": "LV_ABS",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((x) > 0 ? (x) : (-(x))) "
        },
        {
            "name": "LV_UDIV255",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "(((x) * 0x8081U) >> 0x17) "
        },
        {
            "name": "LV_IS_SIGNED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "t"
            ],
            "initializer": "(((t)(-1)) < ((t)0)) "
        },
        {
            "name": "LV_UMAX_OF",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "t"
            ],
            "initializer": "(((0x1ULL << ((sizeof(t) * 8ULL) - 1ULL)) - 1ULL) | (0xFULL << ((sizeof(t) * 8ULL) - 4ULL))) "
        },
        {
            "name": "LV_SMAX_OF",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "t"
            ],
            "initializer": "(((0x1ULL << ((sizeof(t) * 8ULL) - 1ULL)) - 1ULL) | (0x7ULL << ((sizeof(t) * 8ULL) - 4ULL))) "
        },
        {
            "name": "LV_MAX_OF",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "t"
            ],
            "initializer": "((unsigned long)(LV_IS_SIGNED(t) ? LV_SMAX_OF(t) : LV_UMAX_OF(t))) "
        },
        {
            "name": "LV_PROFILER_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": "LV_UNUSED(tag) "
        },
        {
            "name": "LV_PROFILER_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": "LV_UNUSED(tag) "
        },
        {
            "name": "LV_PROFILER_LAYOUT_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_LAYOUT_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_LAYOUT_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_LAYOUT_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_STYLE_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_STYLE_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_STYLE_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_STYLE_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DRAW_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DRAW_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DRAW_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DRAW_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DECODER_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DECODER_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DECODER_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_DECODER_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_REFR_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_REFR_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_REFR_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_REFR_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_INDEV_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_INDEV_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_INDEV_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_INDEV_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FONT_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FONT_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FONT_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FONT_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_CACHE_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_CACHE_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_CACHE_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_CACHE_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FS_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FS_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FS_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_FS_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_TIMER_BEGIN",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_TIMER_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": null
        },
        {
            "name": "LV_PROFILER_TIMER_BEGIN_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_PROFILER_TIMER_END_TAG",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "tag"
            ],
            "initializer": null
        },
        {
            "name": "LV_STYLE_SENTINEL_VALUE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xAABBCCDD "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_NONE",
            "json_type": "macro",
            "docstring": "No special behavior ",
            "params": null,
            "initializer": "(0) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_INHERITABLE",
            "json_type": "macro",
            "docstring": "Inherited ",
            "params": null,
            "initializer": "(1 << 0) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_EXT_DRAW_UPDATE",
            "json_type": "macro",
            "docstring": "Requires ext. draw size update when changed ",
            "params": null,
            "initializer": "(1 << 1) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_LAYOUT_UPDATE",
            "json_type": "macro",
            "docstring": "Requires layout update when changed ",
            "params": null,
            "initializer": "(1 << 2) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_PARENT_LAYOUT_UPDATE",
            "json_type": "macro",
            "docstring": "Requires layout update on parent when changed ",
            "params": null,
            "initializer": "(1 << 3) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_LAYER_UPDATE",
            "json_type": "macro",
            "docstring": "Affects layer handling ",
            "params": null,
            "initializer": "(1 << 4) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_TRANSFORM",
            "json_type": "macro",
            "docstring": "Affects the object's transformation ",
            "params": null,
            "initializer": "(1 << 5) "
        },
        {
            "name": "LV_STYLE_PROP_FLAG_ALL",
            "json_type": "macro",
            "docstring": "Indicating all flags ",
            "params": null,
            "initializer": "(0x3F) "
        },
        {
            "name": "LV_SCALE_NONE",
            "json_type": "macro",
            "docstring": "Value for not zooming the image ",
            "params": null,
            "initializer": "256 "
        },
        {
            "name": "LV_STYLE_CONST_INIT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "var_name",
                "prop_array"
            ],
            "initializer": "const lv_style_t var_name = {                                       \\\n        .values_and_props = prop_array,                                 \\\n        .has_group = 0xFFFFFFFF,                                        \\\n        .prop_cnt = 255,                                                \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PROPS_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "{ .prop = LV_STYLE_PROP_INV, .value = { .num = 0 } } "
        },
        {
            "name": "LV_ASSERT_STYLE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "p"
            ],
            "initializer": "do{}while(0) "
        },
        {
            "name": "LV_STYLE_CONST_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MIN_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MIN_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MAX_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MAX_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_HEIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_HEIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MIN_HEIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MIN_HEIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MAX_HEIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MAX_HEIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LENGTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LENGTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ALIGN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ALIGN, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_HEIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_HEIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSLATE_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSLATE_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSLATE_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSLATE_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_SCALE_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_SCALE_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_SCALE_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_SCALE_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_ROTATION",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_ROTATION, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_PIVOT_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_PIVOT_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_PIVOT_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_PIVOT_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_SKEW_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_SKEW_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSFORM_SKEW_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSFORM_SKEW_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_TOP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_TOP, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_BOTTOM",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_BOTTOM, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_LEFT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_LEFT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_RIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_RIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_ROW",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_ROW, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_PAD_COLUMN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_PAD_COLUMN, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MARGIN_TOP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MARGIN_TOP, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MARGIN_BOTTOM",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MARGIN_BOTTOM, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MARGIN_LEFT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MARGIN_LEFT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_MARGIN_RIGHT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_MARGIN_RIGHT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_GRAD_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_GRAD_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_GRAD_DIR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_GRAD_DIR, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_MAIN_STOP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_MAIN_STOP, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_GRAD_STOP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_GRAD_STOP, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_MAIN_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_MAIN_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_GRAD_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_GRAD_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_GRAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_GRAD, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_IMAGE_SRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_IMAGE_SRC, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_IMAGE_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_IMAGE_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_IMAGE_RECOLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_IMAGE_RECOLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_IMAGE_RECOLOR_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_IMAGE_RECOLOR_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BG_IMAGE_TILED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BG_IMAGE_TILED, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BORDER_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BORDER_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BORDER_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BORDER_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BORDER_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BORDER_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BORDER_SIDE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BORDER_SIDE, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BORDER_POST",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BORDER_POST, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OUTLINE_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OUTLINE_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OUTLINE_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OUTLINE_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OUTLINE_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OUTLINE_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OUTLINE_PAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OUTLINE_PAD, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_OFFSET_X",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_OFFSET_X, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_OFFSET_Y",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_OFFSET_Y, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_SPREAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_SPREAD, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_SHADOW_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_SHADOW_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_IMAGE_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_IMAGE_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_IMAGE_RECOLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_IMAGE_RECOLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_IMAGE_RECOLOR_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_IMAGE_RECOLOR_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_DASH_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_DASH_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_DASH_GAP",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_DASH_GAP, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_ROUNDED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_ROUNDED, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LINE_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LINE_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ARC_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ARC_WIDTH, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ARC_ROUNDED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ARC_ROUNDED, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ARC_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ARC_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ARC_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ARC_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ARC_IMAGE_SRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ARC_IMAGE_SRC, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_COLOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_COLOR, .value = { .color = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_FONT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_FONT, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_LETTER_SPACE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_LETTER_SPACE, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_LINE_SPACE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_LINE_SPACE, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_DECOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_DECOR, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TEXT_ALIGN",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TEXT_ALIGN, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_RADIUS",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_RADIUS, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_CLIP_CORNER",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_CLIP_CORNER, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_OPA_LAYERED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_OPA_LAYERED, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_COLOR_FILTER_DSC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_COLOR_FILTER_DSC, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_COLOR_FILTER_OPA",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_COLOR_FILTER_OPA, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ANIM",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ANIM, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ANIM_DURATION",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ANIM_DURATION, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_TRANSITION",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_TRANSITION, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BLEND_MODE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BLEND_MODE, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_LAYOUT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_LAYOUT, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BASE_DIR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BASE_DIR, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_BITMAP_MASK_SRC",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_BITMAP_MASK_SRC, .value = { .ptr = val } \\\n    } "
        },
        {
            "name": "LV_STYLE_CONST_ROTARY_SENSITIVITY",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "val"
            ],
            "initializer": "{ \\\n        .prop = LV_STYLE_ROTARY_SENSITIVITY, .value = { .num = (int32_t)val } \\\n    } "
        },
        {
            "name": "LV_TXT_ENC_UTF8",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_TXT_ENC_ASCII",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_UNDEF_ARABIC_PERSIAN_CHARS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(UINT32_MAX) "
        },
        {
            "name": "LV_AP_ALPHABET_BASE_CODE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0622 "
        },
        {
            "name": "LV_AP_END_CHARS_LIST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "{0,0,0,0,0,{0,0}} "
        },
        {
            "name": "LV_NO_TIMER_READY",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFFFFFF "
        },
        {
            "name": "LV_UNUSED",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x"
            ],
            "initializer": "((void)x) "
        },
        {
            "name": "_LV_CONCAT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "y"
            ],
            "initializer": "x ## y "
        },
        {
            "name": "LV_CONCAT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "y"
            ],
            "initializer": "_LV_CONCAT(x, y) "
        },
        {
            "name": "_LV_CONCAT3",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "y",
                "z"
            ],
            "initializer": "x ## y ## z "
        },
        {
            "name": "LV_CONCAT3",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "x",
                "y",
                "z"
            ],
            "initializer": "_LV_CONCAT3(x, y, z) "
        },
        {
            "name": "LV_FORMAT_ATTRIBUTE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "fmtstr",
                "vararg"
            ],
            "initializer": null
        },
        {
            "name": "VGLITE_HEADER_VERSION",
            "json_type": "macro",
            "docstring": "causes MSVC error C1189. Not needed because \"The __inline keyword is equivalent to inline.\" See: https://learn.microsoft.com/en-us/cpp/cpp/inline-functions-cpp?view=msvc-170 ",
            "params": null,
            "initializer": "7 "
        },
        {
            "name": "VGLITE_VERSION_3_0",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "VGLITE_MAKE_VERSION",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "major",
                "minor",
                "patch"
            ],
            "initializer": "(((major) << 16) | ((minor) << 8) | (patch)) "
        },
        {
            "name": "VGLITE_VERSION_MAJOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "version"
            ],
            "initializer": "(((uint32_t)(version) >> 16) & 0xff) "
        },
        {
            "name": "VGLITE_VERSION_MINOR",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "version"
            ],
            "initializer": "(((uint32_t)(version) >> 8) & 0xff) "
        },
        {
            "name": "VGLITE_VERSION_PATCH",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "version"
            ],
            "initializer": "((uint32_t)(version) & 0xff) "
        },
        {
            "name": "VGLITE_API_VERSION_3_0",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "VGLITE_MAKE_VERSION(3, 0, 0) "
        },
        {
            "name": "VGLITE_RELEASE_VERSION",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "VGLITE_MAKE_VERSION(4,0,47) "
        },
        {
            "name": "VGL_FALSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0 "
        },
        {
            "name": "VGL_TRUE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "VLC_OP_END",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x00 "
        },
        {
            "name": "VLC_OP_CLOSE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x01 "
        },
        {
            "name": "VLC_OP_MOVE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x02 "
        },
        {
            "name": "VLC_OP_MOVE_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x03 "
        },
        {
            "name": "VLC_OP_LINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x04 "
        },
        {
            "name": "VLC_OP_LINE_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x05 "
        },
        {
            "name": "VLC_OP_QUAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x06 "
        },
        {
            "name": "VLC_OP_QUAD_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x07 "
        },
        {
            "name": "VLC_OP_CUBIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x08 "
        },
        {
            "name": "VLC_OP_CUBIC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x09 "
        },
        {
            "name": "VLC_OP_BREAK",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0A "
        },
        {
            "name": "VLC_OP_HLINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0B "
        },
        {
            "name": "VLC_OP_HLINE_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0C "
        },
        {
            "name": "VLC_OP_VLINE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0D "
        },
        {
            "name": "VLC_OP_VLINE_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0E "
        },
        {
            "name": "VLC_OP_SQUAD",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x0F "
        },
        {
            "name": "VLC_OP_SQUAD_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x10 "
        },
        {
            "name": "VLC_OP_SCUBIC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x11 "
        },
        {
            "name": "VLC_OP_SCUBIC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x12 "
        },
        {
            "name": "VLC_OP_SCCWARC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x13 "
        },
        {
            "name": "VLC_OP_SCCWARC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x14 "
        },
        {
            "name": "VLC_OP_SCWARC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x15 "
        },
        {
            "name": "VLC_OP_SCWARC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x16 "
        },
        {
            "name": "VLC_OP_LCCWARC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x17 "
        },
        {
            "name": "VLC_OP_LCCWARC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x18 "
        },
        {
            "name": "VLC_OP_LCWARC",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x19 "
        },
        {
            "name": "VLC_OP_LCWARC_REL",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0x1A "
        },
        {
            "name": "VLM_PATH_ENABLE_UPLOAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "path"
            ],
            "initializer": "(path).uploaded.property |= 1 "
        },
        {
            "name": "VLM_PATH_DISABLE_UPLOAD",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "path"
            ],
            "initializer": "(path).uploaded.property &= (~1) "
        },
        {
            "name": "VLM_PATH_GET_UPLOAD_BIT",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "path"
            ],
            "initializer": "((path).uploaded.property & 1) "
        },
        {
            "name": "VLC_MAX_COLOR_RAMP_STOPS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "256             /*! The max number of radial gradient stops. */ "
        },
        {
            "name": "VLC_MAX_GRADIENT_STOPS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "16              /*! The max number of gradient stops. */ "
        },
        {
            "name": "VLC_GRADIENT_BUFFER_WIDTH",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1024            /*! The internal gradient buffer width.*/ "
        },
        {
            "name": "vg_lite_buffer_upload",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_upload_buffer "
        },
        {
            "name": "vg_lite_path_append",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_append_path "
        },
        {
            "name": "vg_lite_path_calc_length",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_get_path_length "
        },
        {
            "name": "vg_lite_set_ts_buffer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_set_tess_buffer "
        },
        {
            "name": "vg_lite_set_draw_path_type",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_set_path_type "
        },
        {
            "name": "vg_lite_create_mask_layer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_create_masklayer "
        },
        {
            "name": "vg_lite_fill_mask_layer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_fill_masklayer "
        },
        {
            "name": "vg_lite_blend_mask_layer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_blend_masklayer "
        },
        {
            "name": "vg_lite_generate_mask_layer_by_path",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_render_masklayer "
        },
        {
            "name": "vg_lite_set_mask_layer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_set_masklayer "
        },
        {
            "name": "vg_lite_destroy_mask_layer",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_destroy_masklayer "
        },
        {
            "name": "vg_lite_enable_mask",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_enable_masklayer "
        },
        {
            "name": "vg_lite_enable_color_transformation",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_enable_color_transform "
        },
        {
            "name": "vg_lite_set_color_transformation",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_set_color_transform "
        },
        {
            "name": "vg_lite_set_image_global_alpha",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_source_global_alpha "
        },
        {
            "name": "vg_lite_set_dest_global_alpha",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_dest_global_alpha "
        },
        {
            "name": "vg_lite_clear_rad_grad",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_clear_radial_grad "
        },
        {
            "name": "vg_lite_update_rad_grad",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_update_radial_grad "
        },
        {
            "name": "vg_lite_get_rad_grad_matrix",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_get_radial_grad_matrix "
        },
        {
            "name": "vg_lite_set_rad_grad",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_set_radial_grad "
        },
        {
            "name": "vg_lite_draw_linear_gradient",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_draw_linear_grad "
        },
        {
            "name": "vg_lite_draw_radial_gradient",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_draw_radial_grad "
        },
        {
            "name": "vg_lite_draw_gradient",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_draw_grad "
        },
        {
            "name": "vg_lite_mem_avail",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_get_mem_size "
        },
        {
            "name": "vg_lite_set_update_stroke",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_update_stroke "
        },
        {
            "name": "vg_lite_buffer_image_mode_t",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_image_mode_t "
        },
        {
            "name": "vg_lite_draw_path_type_t",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_path_type_t "
        },
        {
            "name": "vg_lite_linear_gradient_ext_t",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_ext_linear_gradient_t "
        },
        {
            "name": "vg_lite_buffer_transparency_mode_t",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "vg_lite_transparency_t "
        },
        {
            "name": "VG_LITE_ERROR",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "1 "
        },
        {
            "name": "LV_PRId32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"d\" "
        },
        {
            "name": "LV_PRIu32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"u\" "
        },
        {
            "name": "LV_PRIx32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"x\" "
        },
        {
            "name": "LV_PRIX32",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"X\" "
        },
        {
            "name": "LV_BUTTONMATRIX_BUTTON_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFF "
        },
        {
            "name": "LV_CANVAS_BUF_SIZE",
            "json_type": "macro",
            "docstring": "",
            "params": [
                "w",
                "h",
                "bpp",
                "stride"
            ],
            "initializer": "(((((w * bpp + 7) >> 3) + stride - 1) & ~(stride - 1)) * h + LV_DRAW_BUF_ALIGN) "
        },
        {
            "name": "LV_CHART_POINT_NONE",
            "json_type": "macro",
            "docstring": "Default value of points. Can be used to not draw a point ",
            "params": null,
            "initializer": "(INT32_MAX) "
        },
        {
            "name": "LV_DROPDOWN_POS_LAST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFF "
        },
        {
            "name": "LV_IMAGE_DECLARE",
            "json_type": "macro",
            "docstring": "Use this macro to declare an image in a C file ",
            "params": [
                "var_name"
            ],
            "initializer": "extern const lv_image_dsc_t var_name "
        },
        {
            "name": "LV_KEYBOARD_CTRL_BUTTON_FLAGS",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "( LV_BUTTONMATRIX_CTRL_NO_REPEAT | LV_BUTTONMATRIX_CTRL_CLICK_TRIG | LV_BUTTONMATRIX_CTRL_CHECKED ) "
        },
        {
            "name": "LV_LABEL_DOT_NUM",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "3 "
        },
        {
            "name": "LV_LABEL_POS_LAST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0xFFFF "
        },
        {
            "name": "LV_LABEL_TEXT_SELECTION_OFF",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "LV_DRAW_LABEL_NO_TXT_SEL "
        },
        {
            "name": "LV_LABEL_DEFAULT_TEXT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "\"Text\" "
        },
        {
            "name": "LV_LED_BRIGHT_MIN",
            "json_type": "macro",
            "docstring": "Brightness when the LED if OFF ",
            "params": null,
            "initializer": "80 "
        },
        {
            "name": "LV_LED_BRIGHT_MAX",
            "json_type": "macro",
            "docstring": "Brightness when the LED if ON ",
            "params": null,
            "initializer": "255 "
        },
        {
            "name": "LV_SCALE_TOTAL_TICK_COUNT_DEFAULT",
            "json_type": "macro",
            "docstring": "Default value of total minor ticks. ",
            "params": null,
            "initializer": "(11U) "
        },
        {
            "name": "LV_SCALE_MAJOR_TICK_EVERY_DEFAULT",
            "json_type": "macro",
            "docstring": "Default value of major tick every nth ticks. ",
            "params": null,
            "initializer": "(5U) "
        },
        {
            "name": "LV_SCALE_LABEL_ENABLED_DEFAULT",
            "json_type": "macro",
            "docstring": "Default value of scale label enabled. ",
            "params": null,
            "initializer": "(1U) "
        },
        {
            "name": "LV_SPINBOX_MAX_DIGIT_COUNT",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "10 "
        },
        {
            "name": "LV_SWITCH_KNOB_EXT_AREA_CORRECTION",
            "json_type": "macro",
            "docstring": "Switch knob extra area correction factor ",
            "params": null,
            "initializer": "2 "
        },
        {
            "name": "LV_TABLE_CELL_NONE",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "0XFFFF "
        },
        {
            "name": "LV_TEXTAREA_CURSOR_LAST",
            "json_type": "macro",
            "docstring": "",
            "params": null,
            "initializer": "(0x7FFF) /*Put the cursor after the last character*/ "
        }
    ]
}